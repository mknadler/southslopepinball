"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0";
exports.ids = ["vendor-chunks/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-5f8911b5.node.esm.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-5f8911b5.node.esm.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ component)\n/* harmony export */ });\n/* harmony import */ var _keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @keystar/ui/checkbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/checkbox/dist/keystar-ui-checkbox.esm.js\");\n/* harmony import */ var _keystar_ui_typography__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @keystar/ui/typography */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/typography/dist/keystar-ui-typography.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @keystar/ui/text-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/text-field/dist/keystar-ui-text-field.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-fbab32f7.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _keystar_ui_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @keystar/ui/button */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/button/dist/keystar-ui-button.esm.js\");\n/* harmony import */ var _keystar_ui_field__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @keystar/ui/field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/field/dist/keystar-ui-field.esm.js\");\n/* harmony import */ var _keystar_ui_layout__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @keystar/ui/layout */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/layout/dist/keystar-ui-layout.esm.js\");\n/* harmony import */ var _keystar_ui_style__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @keystar/ui/style */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/style/dist/keystar-ui-style.esm.js\");\n/* harmony import */ var _keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @keystar/ui/number-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/number-field/dist/keystar-ui-number-field.esm.js\");\n/* harmony import */ var _keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @keystar/ui/combobox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/combobox/dist/keystar-ui-combobox.esm.js\");\n/* harmony import */ var minimatch__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! minimatch */ \"(ssr)/./node_modules/.pnpm/minimatch@7.4.6/node_modules/minimatch/dist/mjs/index.js\");\n/* harmony import */ var _keystar_ui_picker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @keystar/ui/picker */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/picker/dist/keystar-ui-picker.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @keystar/ui/dialog */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/dialog/dist/keystar-ui-dialog.esm.js\");\n/* harmony import */ var _keystar_ui_slots__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @keystar/ui/slots */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/slots/dist/keystar-ui-slots.esm.js\");\n/* harmony import */ var _keystar_ui_drag_and_drop__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @keystar/ui/drag-and-drop */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/drag-and-drop/dist/keystar-ui-drag-and-drop.esm.js\");\n/* harmony import */ var _keystar_ui_icon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @keystar/ui/icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/dist/keystar-ui-icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @keystar/ui/icon/icons/trash2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trash2Icon/dist/keystar-ui-icon-icons-trash2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @keystar/ui/list-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/list-view/dist/keystar-ui-list-view.esm.js\");\n/* harmony import */ var _keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @keystar/ui/tooltip */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/tooltip/dist/keystar-ui-tooltip.esm.js\");\n/* harmony import */ var _keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @keystar/ui/split-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/split-view/dist/keystar-ui-split-view.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftOpenIcon__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftOpenIcon/dist/keystar-ui-icon-icons-panelLeftOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftCloseIcon__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftCloseIcon/dist/keystar-ui-icon-icons-panelLeftCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightOpenIcon__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightOpenIcon/dist/keystar-ui-icon-icons-panelRightOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightCloseIcon__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightCloseIcon/dist/keystar-ui-icon-icons-panelRightCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_menu__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @keystar/ui/menu */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/menu/dist/keystar-ui-menu.esm.js\");\n/* harmony import */ var _keystar_ui_link__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @keystar/ui/link */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/link/dist/keystar-ui-link.esm.js\");\n/* harmony import */ var _keystar_ui_progress__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @keystar/ui/progress */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/progress/dist/keystar-ui-progress.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// this is written like this rather than ArrayField<ComponentSchema> to avoid TypeScript erroring about circularity\nfunction component(options) {\n  return options;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLTVmODkxMWI1Lm5vZGUuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNFO0FBQ0w7QUFDSztBQUNqQjtBQUN1QjtBQUN2QjtBQUNhO0FBQ0Q7QUFDQztBQUNEO0FBQ087QUFDSjtBQUNYO0FBQ2lCO0FBQ1I7QUFDRztBQUNFO0FBQ1A7QUFDRTtBQUNEO0FBQ1E7QUFDVDtBQUNpQjtBQUNaO0FBQ0Y7QUFDZDtBQUNNO0FBQ1c7QUFDa0I7QUFDQztBQUNBO0FBQ0M7QUFDMUI7QUFDQTtBQUNJOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLTVmODkxMWI1Lm5vZGUuZXNtLmpzPzFiNzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAa2V5c3Rhci91aS9jaGVja2JveCc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL3R5cG9ncmFwaHknO1xuaW1wb3J0ICdyZWFjdC9qc3gtcnVudGltZSc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL3RleHQtZmllbGQnO1xuaW1wb3J0ICdyZWFjdCc7XG5pbXBvcnQgJy4vaW5kZXgtZmJhYjMyZjcubm9kZS5lc20uanMnO1xuaW1wb3J0ICdlbWVyeSc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2J1dHRvbic7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2ZpZWxkJztcbmltcG9ydCAnQGtleXN0YXIvdWkvbGF5b3V0JztcbmltcG9ydCAnQGtleXN0YXIvdWkvc3R5bGUnO1xuaW1wb3J0ICdAa2V5c3Rhci91aS9udW1iZXItZmllbGQnO1xuaW1wb3J0ICdAa2V5c3Rhci91aS9jb21ib2JveCc7XG5pbXBvcnQgJ21pbmltYXRjaCc7XG5pbXBvcnQgJ0ByZWFjdC1zdGF0ZWx5L2NvbGxlY3Rpb25zJztcbmltcG9ydCAnQGtleXN0YXIvdWkvcGlja2VyJztcbmltcG9ydCAnQHNpbmRyZXNvcmh1cy9zbHVnaWZ5JztcbmltcG9ydCAnQGJyYWludHJlZS9zYW5pdGl6ZS11cmwnO1xuaW1wb3J0ICdAcmVhY3QtYXJpYS9pMThuJztcbmltcG9ydCAnQGtleXN0YXIvdWkvZGlhbG9nJztcbmltcG9ydCAnQGtleXN0YXIvdWkvc2xvdHMnO1xuaW1wb3J0ICdAa2V5c3Rhci91aS9kcmFnLWFuZC1kcm9wJztcbmltcG9ydCAnQGtleXN0YXIvdWkvaWNvbic7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2ljb24vaWNvbnMvdHJhc2gySWNvbic7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2xpc3Qtdmlldyc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL3Rvb2x0aXAnO1xuaW1wb3J0ICdzbGF0ZSc7XG5pbXBvcnQgJ3NsYXRlLXJlYWN0JztcbmltcG9ydCAnQGtleXN0YXIvdWkvc3BsaXQtdmlldyc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2ljb24vaWNvbnMvcGFuZWxMZWZ0T3Blbkljb24nO1xuaW1wb3J0ICdAa2V5c3Rhci91aS9pY29uL2ljb25zL3BhbmVsTGVmdENsb3NlSWNvbic7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2ljb24vaWNvbnMvcGFuZWxSaWdodE9wZW5JY29uJztcbmltcG9ydCAnQGtleXN0YXIvdWkvaWNvbi9pY29ucy9wYW5lbFJpZ2h0Q2xvc2VJY29uJztcbmltcG9ydCAnQGtleXN0YXIvdWkvbWVudSc7XG5pbXBvcnQgJ0BrZXlzdGFyL3VpL2xpbmsnO1xuaW1wb3J0ICdAa2V5c3Rhci91aS9wcm9ncmVzcyc7XG5cbi8vIHRoaXMgaXMgd3JpdHRlbiBsaWtlIHRoaXMgcmF0aGVyIHRoYW4gQXJyYXlGaWVsZDxDb21wb25lbnRTY2hlbWE+IHRvIGF2b2lkIFR5cGVTY3JpcHQgZXJyb3JpbmcgYWJvdXQgY2lyY3VsYXJpdHlcbmZ1bmN0aW9uIGNvbXBvbmVudChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zO1xufVxuXG5leHBvcnQgeyBjb21wb25lbnQgYXMgYyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-5f8911b5.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-20a81495.node.esm.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-20a81495.node.esm.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ integer)\n/* harmony export */ });\n/* harmony import */ var _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-fbab32f7.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\");\n/* harmony import */ var _keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @keystar/ui/number-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/number-field/dist/keystar-ui-number-field.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nfunction validateInteger(validation, value, label) {\n  if (value !== null && (typeof value !== 'number' || !Number.isInteger(value))) {\n    return `${label} must be a whole number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n  }\n}\n\nfunction IntegerFieldInput(props) {\n  var _props$validation;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useReducer)(() => true, false);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_1__.NumberField, {\n    label: props.label,\n    description: props.description,\n    isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n    errorMessage: props.forceValidation || blurred ? validateInteger(props.validation, props.value, props.label) : undefined,\n    onBlur: onBlur,\n    autoFocus: props.autoFocus,\n    value: props.value === null ? undefined : props.value,\n    onChange: val => {\n      props.onChange(val === undefined ? null : val);\n    }\n  });\n}\n\nfunction integer({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(IntegerFieldInput, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a number');\n    },\n    validate(value) {\n      const message = validateInteger(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(message);\n      }\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtMjBhODE0OTUubm9kZS5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxSTtBQUM5RTtBQUNwQjtBQUNLOztBQUV4QztBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU8sbUJBQW1CLGVBQWU7QUFDekQ7QUFDQTtBQUNBLGdCQUFnQixPQUFPLGtCQUFrQixlQUFlO0FBQ3hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNEJBQTRCLGlEQUFVO0FBQ3RDLHNCQUFzQixzREFBRyxDQUFDLGlFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsU0FBUywrREFBbUM7QUFDNUM7QUFDQSwwQkFBMEIsc0RBQUc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkRBQWM7QUFDOUIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyREFBYztBQUNoQztBQUNBLE1BQU0sK0RBQWM7QUFDcEI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtMjBhODE0OTUubm9kZS5lc20uanM/YzI4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdyBhcyBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSwgYXggYXMgRmllbGREYXRhRXJyb3IsIGF5IGFzIGFzc2VydFJlcXVpcmVkIH0gZnJvbSAnLi9pbmRleC1mYmFiMzJmNy5ub2RlLmVzbS5qcyc7XG5pbXBvcnQgeyBOdW1iZXJGaWVsZCB9IGZyb20gJ0BrZXlzdGFyL3VpL251bWJlci1maWVsZCc7XG5pbXBvcnQgeyB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAncmVhY3QvanN4LXJ1bnRpbWUnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZUludGVnZXIodmFsaWRhdGlvbiwgdmFsdWUsIGxhYmVsKSB7XG4gIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJyB8fCAhTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkpKSB7XG4gICAgcmV0dXJuIGAke2xhYmVsfSBtdXN0IGJlIGEgd2hvbGUgbnVtYmVyYDtcbiAgfVxuICBpZiAodmFsaWRhdGlvbiAhPT0gbnVsbCAmJiB2YWxpZGF0aW9uICE9PSB2b2lkIDAgJiYgdmFsaWRhdGlvbi5pc1JlcXVpcmVkICYmIHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGAke2xhYmVsfSBpcyByZXF1aXJlZGA7XG4gIH1cbiAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgaWYgKCh2YWxpZGF0aW9uID09PSBudWxsIHx8IHZhbGlkYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbGlkYXRpb24ubWluKSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlIDwgdmFsaWRhdGlvbi5taW4pIHtcbiAgICAgIHJldHVybiBgJHtsYWJlbH0gbXVzdCBiZSBhdCBsZWFzdCAke3ZhbGlkYXRpb24ubWlufWA7XG4gICAgfVxuICAgIGlmICgodmFsaWRhdGlvbiA9PT0gbnVsbCB8fCB2YWxpZGF0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWxpZGF0aW9uLm1heCkgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSA+IHZhbGlkYXRpb24ubWF4KSB7XG4gICAgICByZXR1cm4gYCR7bGFiZWx9IG11c3QgYmUgYXQgbW9zdCAke3ZhbGlkYXRpb24ubWF4fWA7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIEludGVnZXJGaWVsZElucHV0KHByb3BzKSB7XG4gIHZhciBfcHJvcHMkdmFsaWRhdGlvbjtcbiAgY29uc3QgW2JsdXJyZWQsIG9uQmx1cl0gPSB1c2VSZWR1Y2VyKCgpID0+IHRydWUsIGZhbHNlKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9qc3goTnVtYmVyRmllbGQsIHtcbiAgICBsYWJlbDogcHJvcHMubGFiZWwsXG4gICAgZGVzY3JpcHRpb246IHByb3BzLmRlc2NyaXB0aW9uLFxuICAgIGlzUmVxdWlyZWQ6IChfcHJvcHMkdmFsaWRhdGlvbiA9IHByb3BzLnZhbGlkYXRpb24pID09PSBudWxsIHx8IF9wcm9wcyR2YWxpZGF0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvcHMkdmFsaWRhdGlvbi5pc1JlcXVpcmVkLFxuICAgIGVycm9yTWVzc2FnZTogcHJvcHMuZm9yY2VWYWxpZGF0aW9uIHx8IGJsdXJyZWQgPyB2YWxpZGF0ZUludGVnZXIocHJvcHMudmFsaWRhdGlvbiwgcHJvcHMudmFsdWUsIHByb3BzLmxhYmVsKSA6IHVuZGVmaW5lZCxcbiAgICBvbkJsdXI6IG9uQmx1cixcbiAgICBhdXRvRm9jdXM6IHByb3BzLmF1dG9Gb2N1cyxcbiAgICB2YWx1ZTogcHJvcHMudmFsdWUgPT09IG51bGwgPyB1bmRlZmluZWQgOiBwcm9wcy52YWx1ZSxcbiAgICBvbkNoYW5nZTogdmFsID0+IHtcbiAgICAgIHByb3BzLm9uQ2hhbmdlKHZhbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IHZhbCk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gaW50ZWdlcih7XG4gIGxhYmVsLFxuICBkZWZhdWx0VmFsdWUsXG4gIHZhbGlkYXRpb24sXG4gIGRlc2NyaXB0aW9uXG59KSB7XG4gIHJldHVybiBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSh7XG4gICAgSW5wdXQocHJvcHMpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovanN4KEludGVnZXJGaWVsZElucHV0LCB7XG4gICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICB2YWxpZGF0aW9uOiB2YWxpZGF0aW9uLFxuICAgICAgICAuLi5wcm9wc1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlICE9PSBudWxsICYmIGRlZmF1bHRWYWx1ZSAhPT0gdm9pZCAwID8gZGVmYXVsdFZhbHVlIDogbnVsbDtcbiAgICB9LFxuICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBGaWVsZERhdGFFcnJvcignTXVzdCBiZSBhIG51bWJlcicpO1xuICAgIH0sXG4gICAgdmFsaWRhdGUodmFsdWUpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB2YWxpZGF0ZUludGVnZXIodmFsaWRhdGlvbiwgdmFsdWUsIGxhYmVsKTtcbiAgICAgIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEZpZWxkRGF0YUVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgYXNzZXJ0UmVxdWlyZWQodmFsdWUsIHZhbGlkYXRpb24sIGxhYmVsKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWU6IHZhbHVlID09PSBudWxsID8gdW5kZWZpbmVkIDogdmFsdWVcbiAgICAgIH07XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgaW50ZWdlciBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-20a81495.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ getRepoUrl),\n/* harmony export */   A: () => (/* binding */ getSyncAuth),\n/* harmony export */   B: () => (/* binding */ redirectToCloudAuth),\n/* harmony export */   C: () => (/* binding */ CloudAppShellQuery),\n/* harmony export */   D: () => (/* binding */ serializeProps),\n/* harmony export */   E: () => (/* binding */ BranchInfoContext),\n/* harmony export */   F: () => (/* binding */ useSetTreeSha),\n/* harmony export */   G: () => (/* binding */ GitHubAppShellQuery),\n/* harmony export */   H: () => (/* binding */ useCurrentUnscopedTree),\n/* harmony export */   I: () => (/* binding */ updateTreeWithChanges),\n/* harmony export */   J: () => (/* binding */ hydrateTreeCacheWithEntries),\n/* harmony export */   K: () => (/* binding */ KEYSTATIC_CLOUD_API_URL),\n/* harmony export */   L: () => (/* binding */ LOADING),\n/* harmony export */   M: () => (/* binding */ scopeEntriesWithPathPrefix),\n/* harmony export */   N: () => (/* binding */ fetchGitHubTreeData),\n/* harmony export */   O: () => (/* binding */ treeSha),\n/* harmony export */   P: () => (/* binding */ PageRoot),\n/* harmony export */   Q: () => (/* binding */ getSlugFromState),\n/* harmony export */   R: () => (/* binding */ RepoWithWriteAccessContext),\n/* harmony export */   S: () => (/* binding */ useConfig),\n/* harmony export */   T: () => (/* binding */ ThemeProvider),\n/* harmony export */   U: () => (/* binding */ getSlugGlobForCollection),\n/* harmony export */   V: () => (/* binding */ getCollectionFormat),\n/* harmony export */   W: () => (/* binding */ getCollectionItemPath),\n/* harmony export */   X: () => (/* binding */ PageBody),\n/* harmony export */   Y: () => (/* binding */ containerWidthForEntryLayout),\n/* harmony export */   Z: () => (/* binding */ createGetPreviewProps),\n/* harmony export */   _: () => (/* binding */ useEventCallback),\n/* harmony export */   a: () => (/* binding */ PageHeader),\n/* harmony export */   a$: () => (/* binding */ text),\n/* harmony export */   a0: () => (/* binding */ getDataFileExtension),\n/* harmony export */   a1: () => (/* binding */ clientSideValidateProp),\n/* harmony export */   a2: () => (/* binding */ FormForEntry),\n/* harmony export */   a3: () => (/* binding */ useRepositoryId),\n/* harmony export */   a4: () => (/* binding */ useCreateBranchMutation),\n/* harmony export */   a5: () => (/* binding */ getBranchPrefix),\n/* harmony export */   a6: () => (/* binding */ prettyErrorForCreateBranchMutation),\n/* harmony export */   a7: () => (/* binding */ getInitialPropsValue),\n/* harmony export */   a8: () => (/* binding */ CreateBranchDialog),\n/* harmony export */   a9: () => (/* binding */ useNavItems),\n/* harmony export */   aA: () => (/* binding */ collection),\n/* harmony export */   aB: () => (/* binding */ singleton),\n/* harmony export */   aC: () => (/* binding */ BlockWrapper),\n/* harmony export */   aD: () => (/* binding */ NotEditable),\n/* harmony export */   aE: () => (/* binding */ ToolbarSeparator),\n/* harmony export */   aF: () => (/* binding */ ImageFieldInput),\n/* harmony export */   aG: () => (/* binding */ getSrcPrefix),\n/* harmony export */   aH: () => (/* binding */ fixPath),\n/* harmony export */   aI: () => (/* binding */ useIsInDocumentEditor),\n/* harmony export */   aJ: () => (/* binding */ useObjectURL),\n/* harmony export */   aK: () => (/* binding */ getUploadedFile),\n/* harmony export */   aL: () => (/* binding */ useFieldContext),\n/* harmony export */   aM: () => (/* binding */ SlugFieldContext),\n/* harmony export */   aN: () => (/* binding */ PathContext),\n/* harmony export */   aO: () => (/* binding */ validateText),\n/* harmony export */   aP: () => (/* binding */ isValidURL),\n/* harmony export */   aQ: () => (/* binding */ ArrayFieldListView),\n/* harmony export */   aR: () => (/* binding */ previewPropsToValue),\n/* harmony export */   aS: () => (/* binding */ ArrayFieldValidationMessages),\n/* harmony export */   aT: () => (/* binding */ valueToUpdater),\n/* harmony export */   aU: () => (/* binding */ setValueToPreviewProps),\n/* harmony export */   aV: () => (/* binding */ FormValueContentFromPreviewProps),\n/* harmony export */   aW: () => (/* binding */ useImageLibraryURL),\n/* harmony export */   aX: () => (/* binding */ loadImageData),\n/* harmony export */   aY: () => (/* binding */ emptyImageData),\n/* harmony export */   aZ: () => (/* binding */ ImageDimensionsInput),\n/* harmony export */   a_: () => (/* binding */ parseImageData),\n/* harmony export */   aa: () => (/* binding */ pluralize),\n/* harmony export */   ab: () => (/* binding */ useViewer),\n/* harmony export */   ac: () => (/* binding */ useCloudInfo),\n/* harmony export */   ad: () => (/* binding */ useSidebar),\n/* harmony export */   ae: () => (/* binding */ useContentPanelState),\n/* harmony export */   af: () => (/* binding */ ContentPanelProvider),\n/* harmony export */   ag: () => (/* binding */ SidebarDialog),\n/* harmony export */   ah: () => (/* binding */ SidebarPanel),\n/* harmony export */   ai: () => (/* binding */ AppShellErrorContext),\n/* harmony export */   aj: () => (/* binding */ ConfigContext),\n/* harmony export */   ak: () => (/* binding */ AppStateContext),\n/* harmony export */   al: () => (/* binding */ SidebarProvider),\n/* harmony export */   am: () => (/* binding */ GitHubAppShellProvider),\n/* harmony export */   an: () => (/* binding */ LocalAppShellProvider),\n/* harmony export */   ao: () => (/* binding */ getSingletonFormat),\n/* harmony export */   ap: () => (/* binding */ getSingletonPath),\n/* harmony export */   aq: () => (/* binding */ isCloudConfig),\n/* harmony export */   ar: () => (/* binding */ assertValidRepoConfig),\n/* harmony export */   as: () => (/* binding */ RouterProvider),\n/* harmony export */   at: () => (/* binding */ GitHubAppShellDataContext),\n/* harmony export */   au: () => (/* binding */ CloudInfoProvider),\n/* harmony export */   av: () => (/* binding */ GitHubAppShellDataProvider),\n/* harmony export */   aw: () => (/* binding */ basicFormFieldWithSimpleReaderParse),\n/* harmony export */   ax: () => (/* binding */ FieldDataError),\n/* harmony export */   ay: () => (/* binding */ assertRequired),\n/* harmony export */   az: () => (/* binding */ config),\n/* harmony export */   b: () => (/* binding */ useTree),\n/* harmony export */   b0: () => (/* binding */ document$1),\n/* harmony export */   b1: () => (/* binding */ sha1),\n/* harmony export */   b2: () => (/* binding */ getValueAtPropPath),\n/* harmony export */   b3: () => (/* binding */ formatFormDataError),\n/* harmony export */   b4: () => (/* binding */ treeEntriesToTreeNodes),\n/* harmony export */   b5: () => (/* binding */ CloudImagePreview),\n/* harmony export */   b6: () => (/* binding */ cloudImageToolbarIcon),\n/* harmony export */   b7: () => (/* binding */ transformProps),\n/* harmony export */   b8: () => (/* binding */ getUploadedFileObject),\n/* harmony export */   b9: () => (/* binding */ useEntryLayoutSplitPaneContext),\n/* harmony export */   ba: () => (/* binding */ useContentPanelSize),\n/* harmony export */   bb: () => (/* binding */ Prism),\n/* harmony export */   bc: () => (/* binding */ collectDirectoriesUsedInSchema),\n/* harmony export */   bd: () => (/* binding */ CloudImagePreviewForNewEditor),\n/* harmony export */   c: () => (/* binding */ useBranchInfo),\n/* harmony export */   d: () => (/* binding */ getEntriesInCollectionWithTreeKey),\n/* harmony export */   e: () => (/* binding */ getAuth),\n/* harmony export */   f: () => (/* binding */ getEntryDataFilepath),\n/* harmony export */   g: () => (/* binding */ getCollectionPath),\n/* harmony export */   h: () => (/* binding */ parseProps),\n/* harmony export */   i: () => (/* binding */ isLocalConfig),\n/* harmony export */   j: () => (/* binding */ useBaseCommit),\n/* harmony export */   k: () => (/* binding */ useIsRepoPrivate),\n/* harmony export */   l: () => (/* binding */ l10nMessages),\n/* harmony export */   m: () => (/* binding */ getDirectoriesForTreeKey),\n/* harmony export */   n: () => (/* binding */ getTreeKey),\n/* harmony export */   o: () => (/* binding */ object),\n/* harmony export */   p: () => (/* binding */ parseRepoConfig),\n/* harmony export */   q: () => (/* binding */ useData),\n/* harmony export */   r: () => (/* binding */ getTreeNodeAtPath),\n/* harmony export */   s: () => (/* binding */ serializeRepoConfig),\n/* harmony export */   t: () => (/* binding */ toFormattedFormDataError),\n/* harmony export */   u: () => (/* binding */ useRouter),\n/* harmony export */   v: () => (/* binding */ isGitHubConfig),\n/* harmony export */   w: () => (/* binding */ blobSha),\n/* harmony export */   x: () => (/* binding */ getPathPrefix),\n/* harmony export */   y: () => (/* binding */ KEYSTATIC_CLOUD_HEADERS),\n/* harmony export */   z: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! @markdoc/markdoc */ \"(ssr)/./node_modules/.pnpm/@markdoc+markdoc@0.3.5_@types+react@18.2.79_react@18.2.0/node_modules/@markdoc/markdoc/dist/index.mjs\");\n/* harmony import */ var slate__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! slate */ \"(ssr)/./node_modules/.pnpm/slate@0.91.4/node_modules/slate/dist/index.es.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emery/assertions */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var js_base64__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! js-base64 */ \"(ssr)/./node_modules/.pnpm/js-base64@3.7.7/node_modules/js-base64/base64.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @keystar/ui/text-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/text-field/dist/keystar-ui-text-field.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @keystar/ui/field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/field/dist/keystar-ui-field.esm.js\");\n/* harmony import */ var _keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @keystar/ui/layout */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/layout/dist/keystar-ui-layout.esm.js\");\n/* harmony import */ var _keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @keystar/ui/split-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/split-view/dist/keystar-ui-split-view.esm.js\");\n/* harmony import */ var _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @keystar/ui/style */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/style/dist/keystar-ui-style.esm.js\");\n/* harmony import */ var _keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @keystar/ui/typography */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/typography/dist/keystar-ui-typography.esm.js\");\n/* harmony import */ var _keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @keystar/ui/button */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/button/dist/keystar-ui-button.esm.js\");\n/* harmony import */ var _keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @keystar/ui/dialog */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/dialog/dist/keystar-ui-dialog.esm.js\");\n/* harmony import */ var _keystar_ui_drag_and_drop__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @keystar/ui/drag-and-drop */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/drag-and-drop/dist/keystar-ui-drag-and-drop.esm.js\");\n/* harmony import */ var _keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @keystar/ui/icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/dist/keystar-ui-icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @keystar/ui/icon/icons/trash2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trash2Icon/dist/keystar-ui-icon-icons-trash2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @keystar/ui/list-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/list-view/dist/keystar-ui-list-view.esm.js\");\n/* harmony import */ var _keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @keystar/ui/slots */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/slots/dist/keystar-ui-slots.esm.js\");\n/* harmony import */ var _keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @keystar/ui/tooltip */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/tooltip/dist/keystar-ui-tooltip.esm.js\");\n/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! @react-aria/i18n */ \"(ssr)/./node_modules/.pnpm/@react-aria+i18n@3.10.2_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.mjs\");\n/* harmony import */ var slate_react__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! slate-react */ \"(ssr)/./node_modules/.pnpm/slate-react@0.91.11_react-dom@18.2.0_react@18.2.0_slate@0.91.4/node_modules/slate-react/dist/index.es.js\");\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! is-hotkey */ \"(ssr)/./node_modules/.pnpm/is-hotkey@0.2.0/node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/./node_modules/.pnpm/@react-aria+utils@3.23.2_react@18.2.0/node_modules/@react-aria/utils/dist/import.mjs\");\n/* harmony import */ var _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @keystar/ui/icon/icons/editIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/editIcon/dist/keystar-ui-icon-icons-editIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @keystar/ui/icon/icons/externalLinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/externalLinkIcon/dist/keystar-ui-icon-icons-externalLinkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_linkIcon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @keystar/ui/icon/icons/linkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/linkIcon/dist/keystar-ui-icon-icons-linkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_unlinkIcon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @keystar/ui/icon/icons/unlinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/unlinkIcon/dist/keystar-ui-icon-icons-unlinkIcon.esm.js\");\n/* harmony import */ var _react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! @react-aria/overlays */ \"(ssr)/./node_modules/.pnpm/@react-aria+overlays@3.21.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/overlays/dist/import.mjs\");\n/* harmony import */ var _react_stately_overlays__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! @react-stately/overlays */ \"(ssr)/./node_modules/.pnpm/@react-stately+overlays@3.6.5_react@18.2.0/node_modules/@react-stately/overlays/dist/import.mjs\");\n/* harmony import */ var _keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @keystar/ui/overlays */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/overlays/dist/keystar-ui-overlays.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @keystar/ui/action-group */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/action-group/dist/keystar-ui-action-group.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_boldIcon__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @keystar/ui/icon/icons/boldIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/boldIcon/dist/keystar-ui-icon-icons-boldIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @keystar/ui/icon/icons/chevronDownIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/chevronDownIcon/dist/keystar-ui-icon-icons-chevronDownIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_codeIcon__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @keystar/ui/icon/icons/codeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/codeIcon/dist/keystar-ui-icon-icons-codeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_italicIcon__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @keystar/ui/icon/icons/italicIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/italicIcon/dist/keystar-ui-icon-icons-italicIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_maximizeIcon__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @keystar/ui/icon/icons/maximizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/maximizeIcon/dist/keystar-ui-icon-icons-maximizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minimizeIcon__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @keystar/ui/icon/icons/minimizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minimizeIcon/dist/keystar-ui-icon-icons-minimizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_plusIcon__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @keystar/ui/icon/icons/plusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/plusIcon/dist/keystar-ui-icon-icons-plusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_removeFormattingIcon__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @keystar/ui/icon/icons/removeFormattingIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/removeFormattingIcon/dist/keystar-ui-icon-icons-removeFormattingIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_strikethroughIcon__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @keystar/ui/icon/icons/strikethroughIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/strikethroughIcon/dist/keystar-ui-icon-icons-strikethroughIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_subscriptIcon__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @keystar/ui/icon/icons/subscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/subscriptIcon/dist/keystar-ui-icon-icons-subscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_superscriptIcon__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @keystar/ui/icon/icons/superscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/superscriptIcon/dist/keystar-ui-icon-icons-superscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_typeIcon__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @keystar/ui/icon/icons/typeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/typeIcon/dist/keystar-ui-icon-icons-typeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_underlineIcon__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @keystar/ui/icon/icons/underlineIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/underlineIcon/dist/keystar-ui-icon-icons-underlineIcon.esm.js\");\n/* harmony import */ var _keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @keystar/ui/menu */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/menu/dist/keystar-ui-menu.esm.js\");\n/* harmony import */ var _keystar_ui_picker__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @keystar/ui/picker */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/picker/dist/keystar-ui-picker.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignLeftIcon__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignLeftIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignLeftIcon/dist/keystar-ui-icon-icons-alignLeftIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignRightIcon__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignRightIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignRightIcon/dist/keystar-ui-icon-icons-alignRightIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignCenterIcon__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignCenterIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignCenterIcon/dist/keystar-ui-icon-icons-alignCenterIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_quoteIcon__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @keystar/ui/icon/icons/quoteIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/quoteIcon/dist/keystar-ui-icon-icons-quoteIcon.esm.js\");\n/* harmony import */ var _react_stately_collections__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! @react-stately/collections */ \"(ssr)/./node_modules/.pnpm/@react-stately+collections@3.10.5_react@18.2.0/node_modules/@react-stately/collections/dist/import.mjs\");\n/* harmony import */ var match_sorter__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! match-sorter */ \"(ssr)/./node_modules/.pnpm/match-sorter@6.3.4/node_modules/match-sorter/dist/match-sorter.esm.js\");\n/* harmony import */ var _keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @keystar/ui/combobox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/combobox/dist/keystar-ui-combobox.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trashIcon__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @keystar/ui/icon/icons/trashIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trashIcon/dist/keystar-ui-icon-icons-trashIcon.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minusIcon__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @keystar/ui/icon/icons/minusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minusIcon/dist/keystar-ui-icon-icons-minusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_columnsIcon__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @keystar/ui/icon/icons/columnsIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/columnsIcon/dist/keystar-ui-icon-icons-columnsIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listIcon__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @keystar/ui/icon/icons/listIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listIcon/dist/keystar-ui-icon-icons-listIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listOrderedIcon__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @keystar/ui/icon/icons/listOrderedIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listOrderedIcon/dist/keystar-ui-icon-icons-listOrderedIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_fileUpIcon__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @keystar/ui/icon/icons/fileUpIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/fileUpIcon/dist/keystar-ui-icon-icons-fileUpIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @keystar/ui/icon/icons/imageIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/imageIcon/dist/keystar-ui-icon-icons-imageIcon.esm.js\");\n/* harmony import */ var _keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @keystar/ui/checkbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/checkbox/dist/keystar-ui-checkbox.esm.js\");\n/* harmony import */ var _keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @keystar/ui/number-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/number-field/dist/keystar-ui-number-field.esm.js\");\n/* harmony import */ var minimatch__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! minimatch */ \"(ssr)/./node_modules/.pnpm/minimatch@7.4.6/node_modules/minimatch/dist/mjs/index.js\");\n/* harmony import */ var _ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @ts-gql/tag/no-transform */ \"(ssr)/./node_modules/.pnpm/@ts-gql+tag@0.7.3_graphql@16.8.1/node_modules/@ts-gql/tag/no-transform/dist/tag.esm.js\");\n/* harmony import */ var urql__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! urql */ \"(ssr)/./node_modules/.pnpm/urql@4.0.7_graphql@16.8.1_react@18.2.0/node_modules/urql/dist/urql.es.js\");\n/* harmony import */ var lru_cache__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! lru-cache */ \"(ssr)/./node_modules/.pnpm/lru-cache@7.18.3/node_modules/lru-cache/index.mjs\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! cookie */ \"(ssr)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/.pnpm/zod@3.22.5/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_61__);\n/* harmony import */ var _keystar_ui_link__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @keystar/ui/link */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/link/dist/keystar-ui-link.esm.js\");\n/* harmony import */ var _keystar_ui_progress__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @keystar/ui/progress */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/progress/dist/keystar-ui-progress.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2Icon__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2Icon/dist/keystar-ui-icon-icons-link2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2OffIcon__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2OffIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2OffIcon/dist/keystar-ui-icon-icons-link2OffIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_pencilIcon__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @keystar/ui/icon/icons/pencilIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/pencilIcon/dist/keystar-ui-icon-icons-pencilIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_undo2Icon__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! @keystar/ui/icon/icons/undo2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/undo2Icon/dist/keystar-ui-icon-icons-undo2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_utils__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @keystar/ui/utils */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/utils/dist/keystar-ui-utils.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sheetIcon__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @keystar/ui/icon/icons/sheetIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sheetIcon/dist/keystar-ui-icon-icons-sheetIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_tableIcon__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @keystar/ui/icon/icons/tableIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/tableIcon/dist/keystar-ui-icon-icons-tableIcon.esm.js\");\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"(ssr)/./node_modules/.pnpm/scroll-into-view-if-needed@3.1.0/node_modules/scroll-into-view-if-needed/dist/index.js\");\n/* harmony import */ var _react_stately_list__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! @react-stately/list */ \"(ssr)/./node_modules/.pnpm/@react-stately+list@3.10.3_react@18.2.0/node_modules/@react-stately/list/dist/import.mjs\");\n/* harmony import */ var _keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @keystar/ui/listbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/listbox/dist/keystar-ui-listbox.esm.js\");\n/* harmony import */ var slate_history__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! slate-history */ \"(ssr)/./node_modules/.pnpm/slate-history@0.86.0_slate@0.91.4/node_modules/slate-history/dist/index.es.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! mdast-util-from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-from-markdown@0.8.5/node_modules/mdast-util-from-markdown/index.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_72__);\n/* harmony import */ var mdast_util_gfm_autolink_literal_from_markdown__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! mdast-util-gfm-autolink-literal/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-autolink-literal@0.1.3/node_modules/mdast-util-gfm-autolink-literal/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! micromark-extension-gfm-autolink-literal */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-autolink-literal@0.5.7/node_modules/micromark-extension-gfm-autolink-literal/index.js\");\n/* harmony import */ var mdast_util_gfm_strikethrough_from_markdown__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! mdast-util-gfm-strikethrough/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-strikethrough@0.2.3/node_modules/mdast-util-gfm-strikethrough/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! micromark-extension-gfm-strikethrough */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-strikethrough@0.6.5/node_modules/micromark-extension-gfm-strikethrough/index.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_76__);\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftOpenIcon__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftOpenIcon/dist/keystar-ui-icon-icons-panelLeftOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftCloseIcon__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftCloseIcon/dist/keystar-ui-icon-icons-panelLeftCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightOpenIcon__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightOpenIcon/dist/keystar-ui-icon-icons-panelRightOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightCloseIcon__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightCloseIcon/dist/keystar-ui-icon-icons-panelRightCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_badge__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! @keystar/ui/badge */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/badge/dist/keystar-ui-badge.esm.js\");\n/* harmony import */ var _keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @keystar/ui/nav-list */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/nav-list/dist/keystar-ui-nav-list.esm.js\");\n/* harmony import */ var _keystar_ui_status_light__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! @keystar/ui/status-light */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/status-light/dist/keystar-ui-status-light.esm.js\");\n/* harmony import */ var _keystar_ui_core__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! @keystar/ui/core */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/core/dist/keystar-ui-core.esm.js\");\n/* harmony import */ var _keystar_ui_avatar__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @keystar/ui/avatar */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/avatar/dist/keystar-ui-avatar.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_logOutIcon__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! @keystar/ui/icon/icons/logOutIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/logOutIcon/dist/keystar-ui-icon-icons-logOutIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitPullRequestIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitPullRequestIcon/dist/keystar-ui-icon-icons-gitPullRequestIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchPlusIcon__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchPlusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchPlusIcon/dist/keystar-ui-icon-icons-gitBranchPlusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! @keystar/ui/icon/icons/githubIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/githubIcon/dist/keystar-ui-icon-icons-githubIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitForkIcon__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitForkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitForkIcon/dist/keystar-ui-icon-icons-gitForkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_monitorIcon__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! @keystar/ui/icon/icons/monitorIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/monitorIcon/dist/keystar-ui-icon-icons-monitorIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_moonIcon__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! @keystar/ui/icon/icons/moonIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/moonIcon/dist/keystar-ui-icon-icons-moonIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sunIcon__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! @keystar/ui/icon/icons/sunIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sunIcon/dist/keystar-ui-icon-icons-sunIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_userIcon__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! @keystar/ui/icon/icons/userIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/userIcon/dist/keystar-ui-icon-icons-userIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchIcon__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchIcon/dist/keystar-ui-icon-icons-gitBranchIcon.esm.js\");\n/* harmony import */ var _keystar_ui_radio__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! @keystar/ui/radio */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/radio/dist/keystar-ui-radio.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar l10nMessages = {\n\t\"fr-FR\": {\n\t\tbasedOn: \"Basé sur\",\n\t\tadd: \"Ajouter\",\n\t\tbranchName: \"Nom de la filiale\",\n\t\tbranches: \"Branches\",\n\t\tcancel: \"Annuler\",\n\t\tclear: \"Effacer\",\n\t\tcollections: \"Collections\",\n\t\tcollection: \"Collection\",\n\t\tcreate: \"Créer\",\n\t\tcreatePullRequest: \"Créer une demande d'extraction\",\n\t\tdashboard: \"Tableau de bord\",\n\t\tcurrentBranch: \"Succursale actuelle\",\n\t\tdefaultBranch: \"Branche par défaut\",\n\t\tdeleteBranch: \"Supprimer la branche\",\n\t\t\"delete\": \"Supprimer\",\n\t\tedit: \"Modifier\",\n\t\tloading: \"Chargement en cours\",\n\t\tnewBranch: \"Nouvelle branche\",\n\t\totherBranches: \"Autres succursales\",\n\t\tsave: \"Sauvegarder\",\n\t\tpullRequests: \"Demandes d'extraction\",\n\t\tsearch: \"Rechercher\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Célibataires\",\n\t\ttheCurrentlyCheckedOutBranch: \"La branche actuellement extraite. Choisissez cette option si vous devez vous appuyer sur le travail existant de la branche actuelle.\",\n\t\tviewPullRequests: \"Afficher les demandes d'extraction\",\n\t\ttheDefaultBranchInYourRepository: \"La branche par défaut de votre référentiel. Choisissez ceci pour commencer quelque chose de nouveau qui ne dépend pas de votre branche actuelle.\"\n\t},\n\t\"he-IL\": {\n\t\tadd: \"לְהוֹסִיף\",\n\t\tbasedOn: \"מבוסס על\",\n\t\tbranchName: \"שם הסניף\",\n\t\tbranches: \"ענפים\",\n\t\tcancel: \"לְבַטֵל\",\n\t\tclear: \"נקי\",\n\t\tcollection: \"אוסף\",\n\t\tcollections: \"אוספים\",\n\t\tcreate: \"לִיצוֹר\",\n\t\tcreatePullRequest: \"צור בקשת משיכה\",\n\t\tcurrentBranch: \"סניף נוכחי\",\n\t\tdashboard: \"לוּחַ מַחווָנִים\",\n\t\tdefaultBranch: \"סניף ברירת מחדל\",\n\t\t\"delete\": \"לִמְחוֹק\",\n\t\tdeleteBranch: \"מחק סניף\",\n\t\tedit: \"לַעֲרוֹך\",\n\t\tloading: \"טוען\",\n\t\tnewBranch: \"סניף חדש\",\n\t\totherBranches: \"סניפים אחרים\",\n\t\tsave: \"להציל\",\n\t\tpullRequests: \"משוך בקשות\",\n\t\tsearch: \"חפש\",\n\t\tsingleton: \"קְלָף בּוֹדֵד\",\n\t\tsingletons: \"רווקים\",\n\t\ttheCurrentlyCheckedOutBranch: \"הסניף שנקבע כעת. בחר באפשרות זו אם אתה צריך לבנות על עבודה קיימת מהסניף הנוכחי.\",\n\t\ttheDefaultBranchInYourRepository: \"סניף ברירת המחדל במאגר שלך. בחר באפשרות זו כדי להתחיל משהו חדש שאינו תלוי בסניף הנוכחי שלך.\",\n\t\tviewPullRequests: \"הצג בקשות משיכה\"\n\t},\n\t\"hr-HR\": {\n\t\tadd: \"Dodati\",\n\t\tbasedOn: \"Na temelju\",\n\t\tbranches: \"Podružnice\",\n\t\tbranchName: \"Naziv podružnice\",\n\t\tcancel: \"Otkazati\",\n\t\tcollection: \"Kolekcija\",\n\t\tclear: \"Izbriši\",\n\t\tcollections: \"Zbirke\",\n\t\tcreate: \"Stvoriti\",\n\t\tcreatePullRequest: \"Kreirajte zahtjev za povlačenjem\",\n\t\tcurrentBranch: \"Trenutna grana\",\n\t\tdefaultBranch: \"Zadana grana\",\n\t\tdashboard: \"Nadzorna ploča\",\n\t\t\"delete\": \"Izbrisati\",\n\t\tedit: \"Uredi\",\n\t\tdeleteBranch: \"Izbriši granu\",\n\t\tloading: \"Učitavam\",\n\t\tnewBranch: \"Nova grana\",\n\t\totherBranches: \"Ostale grane\",\n\t\tpullRequests: \"Zahtjevi za povlačenjem\",\n\t\tsearch: \"Traži\",\n\t\tsave: \"Uštedjeti\",\n\t\tsingleton: \"samac\",\n\t\tsingletons: \"Samci\",\n\t\ttheCurrentlyCheckedOutBranch: \"Trenutno odjavljena poslovnica. Odaberite ovo ako trebate graditi na postojećem radu iz trenutne grane.\",\n\t\ttheDefaultBranchInYourRepository: \"Zadana grana u vašem spremištu. Odaberite ovo da započnete nešto novo što ne ovisi o vašoj trenutnoj grani.\",\n\t\tviewPullRequests: \"Pregledajte zahtjeve za povlačenjem\"\n\t},\n\t\"hu-HU\": {\n\t\tadd: \"Hozzáadás\",\n\t\tbasedOn: \"Alapján\",\n\t\tbranches: \"Ágak\",\n\t\tbranchName: \"Fiók neve\",\n\t\tcancel: \"Megszünteti\",\n\t\tclear: \"Törlés\",\n\t\tcollection: \"Gyűjtemény\",\n\t\tcollections: \"Gyűjtemények\",\n\t\tcreate: \"Teremt\",\n\t\tcreatePullRequest: \"Lehívási kérelem létrehozása\",\n\t\tcurrentBranch: \"Jelenlegi ág\",\n\t\tdashboard: \"Irányítópult\",\n\t\tdefaultBranch: \"Alapértelmezett ág\",\n\t\t\"delete\": \"Töröl\",\n\t\tedit: \"Szerkesztés\",\n\t\tdeleteBranch: \"Elágazás törlése\",\n\t\tloading: \"Betöltés folyamatban\",\n\t\totherBranches: \"Egyéb ágak\",\n\t\tnewBranch: \"Új ág\",\n\t\tpullRequests: \"Lehívási kérések\",\n\t\tsave: \"Megment\",\n\t\tsingleton: \"szingli\",\n\t\tsearch: \"Keresés\",\n\t\ttheCurrentlyCheckedOutBranch: \"A jelenleg kivett fiók. Válassza ezt, ha az aktuális ág meglévő munkájára kell építenie.\",\n\t\tsingletons: \"Singletons\",\n\t\ttheDefaultBranchInYourRepository: \"Az alapértelmezett ág az adattárban. Válassza ezt, ha valami újat szeretne indítani, amely nem függ az aktuális ágtól.\",\n\t\tviewPullRequests: \"Lehívási kérelmek megtekintése\"\n\t},\n\t\"it-IT\": {\n\t\tbasedOn: \"Basato su\",\n\t\tadd: \"Aggiungere\",\n\t\tbranchName: \"Nome ramo\",\n\t\tbranches: \"Rami\",\n\t\tcancel: \"Annulla\",\n\t\tclear: \"Cancella\",\n\t\tcollection: \"Collezione\",\n\t\tcollections: \"Collezioni\",\n\t\tcreatePullRequest: \"Crea richiesta pull\",\n\t\tcreate: \"Creare\",\n\t\tcurrentBranch: \"Ramo attuale\",\n\t\tdefaultBranch: \"Ramo predefinito\",\n\t\tdashboard: \"Pannello di controllo\",\n\t\t\"delete\": \"Eliminare\",\n\t\tdeleteBranch: \"Elimina ramo\",\n\t\tedit: \"Modificare\",\n\t\tloading: \"Caricamento in corso\",\n\t\tnewBranch: \"Nuova filiale\",\n\t\totherBranches: \"Altri rami\",\n\t\tpullRequests: \"Richieste pull\",\n\t\tsave: \"Salva\",\n\t\tsearch: \"Cerca\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"La filiale attualmente verificata. Scegli questa opzione se devi basarti su un lavoro esistente dal ramo corrente.\",\n\t\ttheDefaultBranchInYourRepository: \"Il ramo predefinito nel tuo repository. Scegli questa opzione per iniziare qualcosa di nuovo che non dipenda dal tuo ramo attuale.\",\n\t\tviewPullRequests: \"Visualizza le richieste pull\"\n\t},\n\t\"ja-JP\": {\n\t\tadd: \"追加\",\n\t\tbasedOn: \"に基づく\",\n\t\tbranchName: \"支店名\",\n\t\tcancel: \"キャンセル\",\n\t\tbranches: \"支店\",\n\t\tclear: \"クリア\",\n\t\tcollection: \"コレクション\",\n\t\tcollections: \"コレクション\",\n\t\tcreate: \"作成\",\n\t\tcreatePullRequest: \"プルリクエストを作成\",\n\t\tcurrentBranch: \"現在のブランチ\",\n\t\tdashboard: \"ダッシュボード\",\n\t\t\"delete\": \"消去\",\n\t\tdefaultBranch: \"デフォルトのブランチ\",\n\t\tedit: \"編集\",\n\t\tdeleteBranch: \"ブランチを削除\",\n\t\tloading: \"読み込み中\",\n\t\totherBranches: \"その他の支店\",\n\t\tnewBranch: \"新しい支店\",\n\t\tpullRequests: \"プルリクエスト\",\n\t\tsave: \"保存\",\n\t\tsearch: \"検索\",\n\t\tsingleton: \"シングルトン\",\n\t\tsingletons: \"シングルトン\",\n\t\ttheCurrentlyCheckedOutBranch: \"現在チェックアウトされているブランチ。 現在のブランチの既存の作業に基づいて構築する必要がある場合は、これを選択してください。\",\n\t\ttheDefaultBranchInYourRepository: \"リポジトリのデフォルト ブランチ。 これを選択して、現在のブランチに依存しない新しい何かを開始します。\",\n\t\tviewPullRequests: \"プル リクエストを表示\"\n\t},\n\t\"ko-KR\": {\n\t\tadd: \"추가하다\",\n\t\tbasedOn: \"기반으로\",\n\t\tbranchName: \"지점명\",\n\t\tbranches: \"가지\",\n\t\tcancel: \"취소\",\n\t\tclear: \"지우기\",\n\t\tcollections: \"컬렉션\",\n\t\tcollection: \"수집\",\n\t\tcreate: \"만들다\",\n\t\tcreatePullRequest: \"풀 요청 생성\",\n\t\tcurrentBranch: \"현재 지점\",\n\t\tdashboard: \"계기반\",\n\t\t\"delete\": \"삭제\",\n\t\tdefaultBranch: \"기본 분기\",\n\t\tdeleteBranch: \"분기 삭제\",\n\t\tedit: \"편집하다\",\n\t\tloading: \"로드 중\",\n\t\tnewBranch: \"새 지점\",\n\t\totherBranches: \"기타 지점\",\n\t\tpullRequests: \"풀 리퀘스트\",\n\t\tsearch: \"검색\",\n\t\tsave: \"구하다\",\n\t\tsingleton: \"하나씩 일어나는 것\",\n\t\tsingletons: \"싱글톤\",\n\t\ttheCurrentlyCheckedOutBranch: \"현재 체크아웃된 브랜치. 현재 브랜치의 기존 작업을 기반으로 빌드해야 하는 경우 이 옵션을 선택하세요.\",\n\t\ttheDefaultBranchInYourRepository: \"리포지토리의 기본 브랜치입니다. 현재 분기에 의존하지 않는 새로운 것을 시작하려면 이것을 선택하십시오.\",\n\t\tviewPullRequests: \"풀 요청 보기\"\n\t},\n\t\"el-GR\": {\n\t\tadd: \"Προσθήκη\",\n\t\tbasedOn: \"Βασισμένο στο\",\n\t\tbranchName: \"Όνομα υποκαταστήματος\",\n\t\tbranches: \"Κλαδια δεντρου\",\n\t\tcancel: \"Ματαίωση\",\n\t\tclear: \"Καθαρισμός\",\n\t\tcollection: \"Συλλογή\",\n\t\tcollections: \"Συλλογές\",\n\t\tcreate: \"Δημιουργώ\",\n\t\tcreatePullRequest: \"Δημιουργία αιτήματος έλξης\",\n\t\tcurrentBranch: \"Τρέχον υποκατάστημα\",\n\t\tdashboard: \"Ταμπλό\",\n\t\tdefaultBranch: \"Προεπιλεγμένος κλάδος\",\n\t\t\"delete\": \"Διαγράφω\",\n\t\tdeleteBranch: \"Διαγραφή υποκαταστήματος\",\n\t\tedit: \"Επεξεργασία\",\n\t\tloading: \"Φόρτωση\",\n\t\tnewBranch: \"Νέο υποκατάστημα\",\n\t\totherBranches: \"Άλλα υποκαταστήματα\",\n\t\tpullRequests: \"Τραβήξτε αιτήματα\",\n\t\tsave: \"Αποθηκεύσετε\",\n\t\tsearch: \"Αναζήτηση\",\n\t\tsingleton: \"Μοναδικό χαρτί\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"Το υποκατάστημα που ελέγχεται αυτήν τη στιγμή. Επιλέξτε αυτό εάν χρειάζεται να βασιστείτε σε υπάρχουσες εργασίες από τον τρέχοντα κλάδο.\",\n\t\ttheDefaultBranchInYourRepository: \"Ο προεπιλεγμένος κλάδος στο αποθετήριο σας. Επιλέξτε αυτό για να ξεκινήσετε κάτι νέο που δεν εξαρτάται από το τρέχον υποκατάστημά σας.\",\n\t\tviewPullRequests: \"Προβολή αιτημάτων έλξης\"\n\t},\n\t\"ar-AE\": {\n\t\tadd: \"يضيف\",\n\t\tbranchName: \"اسم الفرع\",\n\t\tbranches: \"الفروع\",\n\t\tbasedOn: \"مرتكز على\",\n\t\tcancel: \"يلغي\",\n\t\tclear: \"مسح\",\n\t\tcollection: \"مجموعة\",\n\t\tcollections: \"المجموعات\",\n\t\tcreate: \"يخلق\",\n\t\tcreatePullRequest: \"إنشاء طلب سحب\",\n\t\tcurrentBranch: \"الفرع الحالي\",\n\t\tdashboard: \"لوحة القيادة\",\n\t\tdefaultBranch: \"الفرع الافتراضي\",\n\t\t\"delete\": \"يمسح\",\n\t\tdeleteBranch: \"حذف الفرع\",\n\t\tedit: \"يحرر\",\n\t\tloading: \"جارٍ التحميل\",\n\t\tnewBranch: \"فرع جديد\",\n\t\totherBranches: \"الفروع الأخرى\",\n\t\tpullRequests: \"طلبات السحب\",\n\t\tsave: \"يحفظ\",\n\t\tsearch: \"بحث\",\n\t\tsingleton: \"سينجلتون\",\n\t\ttheCurrentlyCheckedOutBranch: \"الفرع المعاد حاليا. اختر هذا إذا كنت بحاجة إلى البناء على العمل الحالي من الفرع الحالي.\",\n\t\tsingletons: \"الفردي\",\n\t\ttheDefaultBranchInYourRepository: \"الفرع الافتراضي في المستودع الخاص بك. اختر هذا لبدء شيء جديد لا يعتمد على فرعك الحالي.\",\n\t\tviewPullRequests: \"عرض طلبات السحب\"\n\t},\n\t\"cs-CZ\": {\n\t\tadd: \"Přidat\",\n\t\tbasedOn: \"Na základě\",\n\t\tbranchName: \"Jméno pobočky\",\n\t\tbranches: \"Větve\",\n\t\tcancel: \"zrušení\",\n\t\tclear: \"Vymazat\",\n\t\tcollection: \"Sbírka\",\n\t\tcollections: \"Sbírky\",\n\t\tcreate: \"Vytvořit\",\n\t\tcreatePullRequest: \"Vytvořit požadavek na stažení\",\n\t\tcurrentBranch: \"Současná pobočka\",\n\t\tdefaultBranch: \"Výchozí větev\",\n\t\tdashboard: \"Přístrojová deska\",\n\t\t\"delete\": \"Vymazat\",\n\t\tdeleteBranch: \"Smazat větev\",\n\t\tedit: \"Upravit\",\n\t\tloading: \"Načítání\",\n\t\tnewBranch: \"Nová pobočka\",\n\t\totherBranches: \"Ostatní pobočky\",\n\t\tpullRequests: \"Vytáhněte požadavky\",\n\t\tsave: \"Uložit\",\n\t\tsearch: \"Hledat\",\n\t\tsingleton: \"Jedináček\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"Aktuálně odhlášená pobočka. Tuto možnost vyberte, pokud potřebujete navázat na stávající práci z aktuální pobočky.\",\n\t\tviewPullRequests: \"Zobrazit žádosti o stažení\",\n\t\ttheDefaultBranchInYourRepository: \"Výchozí větev ve vašem úložišti. Zvolte tuto možnost, chcete-li začít s něčím novým, co není závislé na vaší aktuální větvi.\"\n\t},\n\t\"bg-BG\": {\n\t\tadd: \"Добавете\",\n\t\tbasedOn: \"Базиран на\",\n\t\tbranchName: \"Име на клон\",\n\t\tbranches: \"Клонове\",\n\t\tcancel: \"Отказ\",\n\t\tclear: \"Изчисти\",\n\t\tcollection: \"колекция\",\n\t\tcollections: \"Колекции\",\n\t\tcreate: \"Създавайте\",\n\t\tcreatePullRequest: \"Създайте заявка за изтегляне\",\n\t\tcurrentBranch: \"Текущ клон\",\n\t\tdashboard: \"Табло\",\n\t\t\"delete\": \"Изтрий\",\n\t\tdefaultBranch: \"Клон по подразбиране\",\n\t\tdeleteBranch: \"Изтриване на клон\",\n\t\tedit: \"редактиране\",\n\t\tloading: \"Зареждане\",\n\t\totherBranches: \"Други клонове\",\n\t\tpullRequests: \"Заявки за изтегляне\",\n\t\tnewBranch: \"Нов клон\",\n\t\tsave: \"Запазване\",\n\t\tsearch: \"Търсене\",\n\t\tsingleton: \"Сингълтън\",\n\t\tsingletons: \"Единични\",\n\t\ttheCurrentlyCheckedOutBranch: \"Текущо провереният клон. Изберете това, ако трябва да надграждате върху съществуваща работа от текущия клон.\",\n\t\ttheDefaultBranchInYourRepository: \"Клонът по подразбиране във вашето хранилище. Изберете това, за да започнете с нещо ново, което не зависи от текущия ви клон.\",\n\t\tviewPullRequests: \"Преглед на заявките за изтегляне\"\n\t},\n\t\"da-DK\": {\n\t\tdefaultBranch: \"Standard gren\",\n\t\t\"delete\": \"Slet\",\n\t\tdeleteBranch: \"Slet filial\",\n\t\tedit: \"Redigere\",\n\t\tloading: \"Indlæser\",\n\t\tnewBranch: \"Ny filial\",\n\t\totherBranches: \"Andre grene\",\n\t\tpullRequests: \"Træk anmodninger\",\n\t\tsave: \"Gemme\",\n\t\tsearch: \"Søg\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singletoner\",\n\t\ttheCurrentlyCheckedOutBranch: \"Den aktuelt tjekkede filial. Vælg dette, hvis du skal bygge videre på eksisterende arbejde fra den nuværende filial.\",\n\t\ttheDefaultBranchInYourRepository: \"Standardgrenen i dit lager. Vælg dette for at starte på noget nyt, der ikke er afhængigt af din nuværende filial.\",\n\t\tviewPullRequests: \"Se pull-anmodninger\",\n\t\tadd: \"Tilføje\",\n\t\tbasedOn: \"Baseret på\",\n\t\tbranchName: \"Afdelingsnavn\",\n\t\tbranches: \"Grene\",\n\t\tcancel: \"Afbestille\",\n\t\tclear: \"Ryd\",\n\t\tcollection: \"Kollektion\",\n\t\tcollections: \"Samlinger\",\n\t\tcreatePullRequest: \"Opret pull-anmodning\",\n\t\tcreate: \"skab\",\n\t\tcurrentBranch: \"Nuværende filial\",\n\t\tdashboard: \"Dashboard\"\n\t},\n\t\"de-DE\": {\n\t\tadd: \"Hinzufügen\",\n\t\tbasedOn: \"Bezogen auf\",\n\t\tbranchName: \"Zweigname\",\n\t\tbranches: \"Geäst\",\n\t\tcancel: \"Stornieren\",\n\t\tclear: \"Löschen\",\n\t\tcollection: \"Sammlung\",\n\t\tcollections: \"Sammlungen\",\n\t\tcreate: \"Erstellen\",\n\t\tcreatePullRequest: \"Pull-Request erstellen\",\n\t\tcurrentBranch: \"Aktueller Zweig\",\n\t\tdashboard: \"Armaturenbrett\",\n\t\tdefaultBranch: \"Standardzweig\",\n\t\t\"delete\": \"Löschen\",\n\t\tdeleteBranch: \"Zweig löschen\",\n\t\tedit: \"Bearbeiten\",\n\t\tloading: \"Wird geladen\",\n\t\tnewBranch: \"Neue Zweig\",\n\t\totherBranches: \"Andere Filialen\",\n\t\tpullRequests: \"Pull-Requests\",\n\t\tsave: \"Speichern\",\n\t\ttheCurrentlyCheckedOutBranch: \"Der aktuell ausgecheckte Zweig. Wählen Sie diese Option, wenn Sie auf vorhandener Arbeit aus dem aktuellen Zweig aufbauen müssen.\",\n\t\tsingleton: \"Einzelling\",\n\t\tsearch: \"Suchen\",\n\t\ttheDefaultBranchInYourRepository: \"Der Standard-Branch in Ihrem Repository. Wählen Sie dies, um etwas Neues zu starten, das nicht von Ihrem aktuellen Zweig abhängt.\",\n\t\tsingletons: \"Singles\",\n\t\tviewPullRequests: \"Pull-Requests anzeigen\"\n\t},\n\t\"en-US\": {\n\t\tbasedOn: \"Based on\",\n\t\tadd: \"Add\",\n\t\tbranchName: \"Branch name\",\n\t\tbranches: \"Branches\",\n\t\tcancel: \"Cancel\",\n\t\tclear: \"Clear\",\n\t\tcollections: \"Collections\",\n\t\tcollection: \"Collection\",\n\t\tcreate: \"Create\",\n\t\tcreatePullRequest: \"Create pull request\",\n\t\tdefaultBranch: \"Default branch\",\n\t\tdashboard: \"Dashboard\",\n\t\tcurrentBranch: \"Current branch\",\n\t\tdeleteBranch: \"Delete branch\",\n\t\t\"delete\": \"Delete\",\n\t\tloading: \"Loading\",\n\t\tedit: \"Edit\",\n\t\tnewBranch: \"New branch…\",\n\t\totherBranches: \"Other branches\",\n\t\tpullRequests: \"Pull requests\",\n\t\tsave: \"Save\",\n\t\tsearch: \"Search\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"The currently checked out branch. Choose this if you need to build on existing work from the current branch.\",\n\t\ttheDefaultBranchInYourRepository: \"The default branch in your repository. Choose this to start something new that's not dependent on your current branch.\",\n\t\tviewPullRequests: \"View pull requests\"\n\t},\n\t\"es-ES\": {\n\t\tadd: \"Agregar\",\n\t\tbasedOn: \"Residencia en\",\n\t\tbranchName: \"Nombre de la sucursal\",\n\t\tbranches: \"Sucursales\",\n\t\tcancel: \"Cancelar\",\n\t\tclear: \"Borrar\",\n\t\tcreate: \"Crear\",\n\t\tcollection: \"Colección\",\n\t\tcollections: \"Colecciones\",\n\t\tcurrentBranch: \"Rama actual\",\n\t\tdashboard: \"Panel\",\n\t\tcreatePullRequest: \"Crear solicitud de extracción\",\n\t\tdefaultBranch: \"Rama predeterminada\",\n\t\t\"delete\": \"Borrar\",\n\t\tdeleteBranch: \"Eliminar rama\",\n\t\tedit: \"Editar\",\n\t\tloading: \"Cargando\",\n\t\tnewBranch: \"Nueva sucursal\",\n\t\totherBranches: \"Otras sucursales\",\n\t\tpullRequests: \"Solicitudes de extracción\",\n\t\tsingleton: \"Semifallo\",\n\t\tsearch: \"Buscar\",\n\t\tsave: \"Ahorrar\",\n\t\tsingletons: \"Solteros\",\n\t\ttheCurrentlyCheckedOutBranch: \"La sucursal actualmente desprotegida. Elija esto si necesita desarrollar el trabajo existente de la rama actual.\",\n\t\tviewPullRequests: \"Ver solicitudes de extracción\",\n\t\ttheDefaultBranchInYourRepository: \"La rama predeterminada en su repositorio. Elija esto para comenzar algo nuevo que no dependa de su sucursal actual.\"\n\t},\n\t\"et-EE\": {\n\t\tbasedOn: \"Põhineb\",\n\t\tadd: \"Lisama\",\n\t\tbranchName: \"Filiaali nimi\",\n\t\tbranches: \"Filiaalid\",\n\t\tcancel: \"Tühista\",\n\t\tcollections: \"Kollektsioonid\",\n\t\tclear: \"Puhasta\",\n\t\tcollection: \"Kollektsioon\",\n\t\tcreatePullRequest: \"Loo tõmbamistaotlus\",\n\t\tcreate: \"Loo\",\n\t\tcurrentBranch: \"Praegune filiaal\",\n\t\tdashboard: \"Armatuurlaud\",\n\t\tdefaultBranch: \"Vaikeharu\",\n\t\t\"delete\": \"Kustuta\",\n\t\tdeleteBranch: \"Kustuta haru\",\n\t\tedit: \"Muuda\",\n\t\tloading: \"Laadimine\",\n\t\tnewBranch: \"Uus filiaal\",\n\t\totherBranches: \"Muud oksad\",\n\t\tpullRequests: \"Tõmbetaotlused\",\n\t\tsave: \"Salvesta\",\n\t\tsearch: \"Otsi\",\n\t\tsingleton: \"üksikud\",\n\t\tsingletons: \"Üksikud\",\n\t\ttheCurrentlyCheckedOutBranch: \"Praegu välja registreeritud filiaal. Valige see, kui peate kasutama praeguse haru olemasolevaid töid.\",\n\t\tviewPullRequests: \"Vaadake tõmbamistaotlusi\",\n\t\ttheDefaultBranchInYourRepository: \"Vaikeharu teie hoidlas. Valige see, et alustada midagi uut, mis ei sõltu teie praegusest harust.\"\n\t},\n\t\"fi-FI\": {\n\t\tcreatePullRequest: \"Luo vetopyyntö\",\n\t\tcollections: \"Kokoelmat\",\n\t\tcreate: \"Luoda\",\n\t\tdashboard: \"Kojelauta\",\n\t\t\"delete\": \"Poistaa\",\n\t\tdefaultBranch: \"Oletushaara\",\n\t\tdeleteBranch: \"Poista haara\",\n\t\tedit: \"Muokata\",\n\t\tnewBranch: \"Uusi haara\",\n\t\tloading: \"Ladataan\",\n\t\tsave: \"Tallentaa\",\n\t\totherBranches: \"Muut haarat\",\n\t\tpullRequests: \"Vedä pyyntöjä\",\n\t\tsingleton: \"Singleton\",\n\t\tsearch: \"Hae\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"Tällä hetkellä uloskirjautunut sivuliike. Valitse tämä, jos haluat rakentaa nykyisen haaran olemassa olevaan työhön.\",\n\t\ttheDefaultBranchInYourRepository: \"Oletushaara arkistossasi. Valitse tämä aloittaaksesi jotain uutta, joka ei ole riippuvainen nykyisestä haarastasi.\",\n\t\tviewPullRequests: \"Näytä vetopyynnöt\",\n\t\tadd: \"Lisätä\",\n\t\tbasedOn: \"Perustuen\",\n\t\tbranchName: \"Sivukonttorin nimi\",\n\t\tbranches: \"Oksat\",\n\t\tclear: \"Kirkas\",\n\t\tcollection: \"Kokoelma\",\n\t\tcancel: \"Tühista\",\n\t\tcurrentBranch: \"Nykyinen haara\"\n\t},\n\t\"lt-LT\": {\n\t\tadd: \"Papildyti\",\n\t\tbasedOn: \"Remiantis\",\n\t\tbranchName: \"Filialo pavadinimas\",\n\t\tbranches: \"Filialai\",\n\t\tcancel: \"Atšaukti\",\n\t\tcollection: \"Kolekcija\",\n\t\tclear: \"Skaidrus\",\n\t\tcollections: \"Kolekcijos\",\n\t\tcreatePullRequest: \"Sukurti ištraukimo užklausą\",\n\t\tcreate: \"Sukurti\",\n\t\tcurrentBranch: \"Dabartinis filialas\",\n\t\tdashboard: \"Prietaisų skydelis\",\n\t\t\"delete\": \"Ištrinti\",\n\t\tdefaultBranch: \"Numatytoji šaka\",\n\t\tdeleteBranch: \"Ištrinti šaką\",\n\t\tedit: \"Redaguoti\",\n\t\tloading: \"Įkeliama\",\n\t\tnewBranch: \"Naujas filialas\",\n\t\totherBranches: \"Kitos šakos\",\n\t\tpullRequests: \"Ištraukti užklausas\",\n\t\tsingleton: \"vienvietis\",\n\t\tsearch: \"Ieškoti\",\n\t\tsingletons: \"Vienišiai\",\n\t\ttheCurrentlyCheckedOutBranch: \"Šiuo metu išregistruotas filialas. Pasirinkite tai, jei reikia remtis esamu darbu iš dabartinės šakos.\",\n\t\ttheDefaultBranchInYourRepository: \"Numatytoji šaka jūsų saugykloje. Pasirinkite tai, kad pradėtumėte ką nors naujo, nepriklausančio nuo dabartinės šakos.\",\n\t\tsave: \"Sutaupyti\",\n\t\tviewPullRequests: \"Peržiūrėkite ištraukimo užklausas\"\n\t},\n\t\"nb-NO\": {\n\t\tadd: \"Legg til\",\n\t\tbasedOn: \"Basert på\",\n\t\tbranchName: \"Filialnavn\",\n\t\tbranches: \"Grener\",\n\t\tcancel: \"Avbryt\",\n\t\tclear: \"Tøm\",\n\t\tcreate: \"Skape\",\n\t\tcollection: \"Samling\",\n\t\tcollections: \"Samlinger\",\n\t\tcreatePullRequest: \"Opprett pull-forespørsel\",\n\t\tdashboard: \"Dashbord\",\n\t\tcurrentBranch: \"Nåværende gren\",\n\t\tdefaultBranch: \"Standard gren\",\n\t\t\"delete\": \"Slett\",\n\t\tedit: \"Redigere\",\n\t\tdeleteBranch: \"Slett filial\",\n\t\tloading: \"Laster inn\",\n\t\tnewBranch: \"Ny gren\",\n\t\totherBranches: \"Andre grener\",\n\t\tpullRequests: \"Trekk forespørsler\",\n\t\tsave: \"Lagre\",\n\t\tsearch: \"Søk\",\n\t\ttheCurrentlyCheckedOutBranch: \"Den utsjekkede grenen. Velg dette hvis du skal bygge på eksisterende arbeid fra gjeldende gren.\",\n\t\tsingleton: \"Singleton\",\n\t\ttheDefaultBranchInYourRepository: \"Standardgrenen i depotet ditt. Velg dette for å starte noe nytt som ikke er avhengig av din nåværende filial.\",\n\t\tviewPullRequests: \"Se pull-forespørsler\",\n\t\tsingletons: \"Singletoner\"\n\t},\n\t\"lv-LV\": {\n\t\tadd: \"Pievienot\",\n\t\tbasedOn: \"Balstoties uz\",\n\t\tbranchName: \"Filiāles nosaukums\",\n\t\tbranches: \"Nozares\",\n\t\tclear: \"Notīrīt\",\n\t\tcancel: \"Atcelt\",\n\t\tcollection: \"Kolekcija\",\n\t\tcreatePullRequest: \"Izveidot izvilkšanas pieprasījumu\",\n\t\tcreate: \"Izveidot\",\n\t\tcurrentBranch: \"Pašreizējā filiāle\",\n\t\tdashboard: \"Mērinstrumentu panelis\",\n\t\tcollections: \"Kolekcijas\",\n\t\tdefaultBranch: \"Noklusējuma filiāle\",\n\t\t\"delete\": \"Dzēst\",\n\t\tdeleteBranch: \"Dzēst filiāli\",\n\t\tedit: \"Rediģēt\",\n\t\tnewBranch: \"Jauna filiāle\",\n\t\tloading: \"Notiek ielāde\",\n\t\totherBranches: \"Citas filiāles\",\n\t\tsave: \"Saglabāt\",\n\t\tsearch: \"Meklēt\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Vientuļi\",\n\t\tpullRequests: \"Izvilkšanas pieprasījumi\",\n\t\ttheCurrentlyCheckedOutBranch: \"Pašlaik izrakstītā filiāle. Izvēlieties šo, ja vēlaties izmantot esošo darbu no pašreizējās filiāles.\",\n\t\ttheDefaultBranchInYourRepository: \"Noklusējuma filiāle jūsu repozitorijā. Izvēlieties šo, lai sāktu kaut ko jaunu, kas nav atkarīgs no jūsu pašreizējās filiāles.\",\n\t\tviewPullRequests: \"Skatīt izvilkšanas pieprasījumus\"\n\t},\n\t\"nl-NL\": {\n\t\tadd: \"Toevoegen\",\n\t\tbasedOn: \"Gebaseerd op\",\n\t\tbranchName: \"Filiaal naam\",\n\t\tbranches: \"Takken\",\n\t\tcancel: \"Annuleren\",\n\t\tclear: \"Helder\",\n\t\tcollection: \"Verzameling\",\n\t\tcollections: \"Collecties\",\n\t\tcreate: \"Creëren\",\n\t\tcreatePullRequest: \"Pull-aanvraag maken\",\n\t\tdashboard: \"Dashboard\",\n\t\tcurrentBranch: \"Huidige tak\",\n\t\tdefaultBranch: \"Standaard filiaal\",\n\t\t\"delete\": \"Verwijderen\",\n\t\tdeleteBranch: \"Filiaal verwijderen\",\n\t\tedit: \"Bewerking\",\n\t\tloading: \"Laden\",\n\t\tnewBranch: \"Nieuwe tak\",\n\t\totherBranches: \"Andere takken\",\n\t\tpullRequests: \"Trek verzoeken\",\n\t\tsave: \"Redden\",\n\t\tsingleton: \"eenling\",\n\t\tsearch: \"Zoeken\",\n\t\tsingletons: \"Eenlingen\",\n\t\ttheCurrentlyCheckedOutBranch: \"Het momenteel uitgecheckte filiaal. Kies dit als u moet voortbouwen op bestaand werk van de huidige branch.\",\n\t\tviewPullRequests: \"Bekijk pull-aanvragen\",\n\t\ttheDefaultBranchInYourRepository: \"De standaard branch in uw repository. Kies dit om iets nieuws te starten dat niet afhankelijk is van uw huidige branche.\"\n\t},\n\t\"pl-PL\": {\n\t\tadd: \"Dodać\",\n\t\tbasedOn: \"Oparte na\",\n\t\tbranchName: \"Nazwa filii\",\n\t\tcancel: \"Anulować\",\n\t\tbranches: \"Gałęzie\",\n\t\tclear: \"Wyczyść\",\n\t\tcollections: \"Kolekcje\",\n\t\tcollection: \"Kolekcja\",\n\t\tcreate: \"Tworzyć\",\n\t\tcurrentBranch: \"Obecny oddział\",\n\t\tcreatePullRequest: \"Utwórz żądanie ściągnięcia\",\n\t\tdefaultBranch: \"Oddział domyślny\",\n\t\tdashboard: \"Panel\",\n\t\t\"delete\": \"Usuwać\",\n\t\tloading: \"Trwa ładowanie\",\n\t\tdeleteBranch: \"Usuń oddział\",\n\t\tedit: \"Edytować\",\n\t\totherBranches: \"Inne gałęzie\",\n\t\tpullRequests: \"Żądania ściągnięcia\",\n\t\tsave: \"Ratować\",\n\t\tnewBranch: \"Nowa gałąź\",\n\t\tsearch: \"Szukaj\",\n\t\tsingleton: \"singel\",\n\t\tsingletons: \"Singletony\",\n\t\ttheDefaultBranchInYourRepository: \"Domyślna gałąź w twoim repozytorium. Wybierz tę opcję, aby rozpocząć coś nowego, co nie jest zależne od bieżącej gałęzi.\",\n\t\ttheCurrentlyCheckedOutBranch: \"Aktualnie wyewidencjonowana gałąź. Wybierz tę opcję, jeśli chcesz oprzeć się na istniejącej pracy z bieżącej gałęzi.\",\n\t\tviewPullRequests: \"Wyświetl żądania ściągnięcia\"\n\t},\n\t\"pt-BR\": {\n\t\tadd: \"Adicionar\",\n\t\tbasedOn: \"Baseado em\",\n\t\tbranches: \"Galhos\",\n\t\tbranchName: \"Nome da filial\",\n\t\tcancel: \"Cancelar\",\n\t\tclear: \"Limpar\",\n\t\tcollection: \"Coleção\",\n\t\tcollections: \"Coleções\",\n\t\tcreate: \"Criar\",\n\t\tcreatePullRequest: \"Criar solicitação pull\",\n\t\tcurrentBranch: \"filial atual\",\n\t\tdefaultBranch: \"ramo padrão\",\n\t\tdashboard: \"Painel\",\n\t\t\"delete\": \"Excluir\",\n\t\tdeleteBranch: \"Excluir ramificação\",\n\t\tedit: \"Editar\",\n\t\tnewBranch: \"Nova filial\",\n\t\totherBranches: \"Outros ramos\",\n\t\tloading: \"Carregando\",\n\t\tsave: \"Guardar\",\n\t\tpullRequests: \"Requisições pull\",\n\t\tsearch: \"Pesquisar\",\n\t\tsingletons: \"Solteiros\",\n\t\tsingleton: \"solteiro\",\n\t\ttheCurrentlyCheckedOutBranch: \"A ramificação atualmente com check-out. Escolha esta opção se precisar criar um trabalho existente na ramificação atual.\",\n\t\ttheDefaultBranchInYourRepository: \"A ramificação padrão em seu repositório. Escolha isso para iniciar algo novo que não dependa de sua ramificação atual.\",\n\t\tviewPullRequests: \"Ver solicitações pull\"\n\t},\n\t\"pt-PT\": {\n\t\tbasedOn: \"Baseado em\",\n\t\tbranchName: \"Nome da filial\",\n\t\tadd: \"Adicionar\",\n\t\tclear: \"Limpar\",\n\t\tbranches: \"Galhos\",\n\t\tcancel: \"Cancelar\",\n\t\tcollections: \"Coleções\",\n\t\tcollection: \"Coleção\",\n\t\tcreate: \"Criar\",\n\t\tcurrentBranch: \"filial atual\",\n\t\tcreatePullRequest: \"Criar solicitação pull\",\n\t\tdashboard: \"Painel\",\n\t\t\"delete\": \"Excluir\",\n\t\tdefaultBranch: \"ramo padrão\",\n\t\tdeleteBranch: \"Excluir ramificação\",\n\t\tedit: \"Editar\",\n\t\tloading: \"A carregar\",\n\t\tnewBranch: \"Nova filial\",\n\t\totherBranches: \"Outros ramos\",\n\t\tsave: \"Guardar\",\n\t\tpullRequests: \"Requisições pull\",\n\t\tsearch: \"Procurar\",\n\t\tsingleton: \"solteiro\",\n\t\tsingletons: \"Solteiros\",\n\t\ttheCurrentlyCheckedOutBranch: \"A ramificação atualmente com check-out. Escolha esta opção se precisar criar um trabalho existente na ramificação atual.\",\n\t\tviewPullRequests: \"Ver solicitações pull\",\n\t\ttheDefaultBranchInYourRepository: \"A ramificação padrão em seu repositório. Escolha isso para iniciar algo novo que não dependa de sua ramificação atual.\"\n\t},\n\t\"ro-RO\": {\n\t\tadd: \"Adăuga\",\n\t\tbranchName: \"Numele sucursalei\",\n\t\tbasedOn: \"Bazat pe\",\n\t\tbranches: \"Ramuri\",\n\t\tclear: \"Golire\",\n\t\tcancel: \"Anulare\",\n\t\tcollection: \"Colectie\",\n\t\tcollections: \"Colecții\",\n\t\tcreate: \"Crea\",\n\t\tcreatePullRequest: \"Creați cerere de tragere\",\n\t\tcurrentBranch: \"Filiala actuală\",\n\t\tdashboard: \"Bord\",\n\t\tdefaultBranch: \"Ramura implicită\",\n\t\t\"delete\": \"Șterge\",\n\t\tdeleteBranch: \"Ștergeți ramura\",\n\t\tedit: \"Editați\",\n\t\tloading: \"Se încarcă\",\n\t\tnewBranch: \"Filiala noua\",\n\t\totherBranches: \"Alte ramuri\",\n\t\tsave: \"Salvați\",\n\t\tpullRequests: \"Solicitări de tragere\",\n\t\tsearch: \"Căutare\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singletons\",\n\t\ttheDefaultBranchInYourRepository: \"Ramura implicită din depozitul dvs. Alegeți acest lucru pentru a începe ceva nou, care nu depinde de ramura dvs. actuală.\",\n\t\ttheCurrentlyCheckedOutBranch: \"Sucursala verificată în prezent. Alegeți acest lucru dacă trebuie să vă bazați pe munca existentă din ramura curentă.\",\n\t\tviewPullRequests: \"Vizualizați solicitările de extragere\"\n\t},\n\t\"ru-RU\": {\n\t\tadd: \"Добавлять\",\n\t\tbasedOn: \"На основе\",\n\t\tbranchName: \"Название филиала\",\n\t\tbranches: \"Ветви\",\n\t\tcancel: \"Отмена\",\n\t\tclear: \"Очистить\",\n\t\tcollection: \"Коллекция\",\n\t\tcollections: \"Коллекции\",\n\t\tcreate: \"Создавать\",\n\t\tcreatePullRequest: \"Создать запрос на включение\",\n\t\tcurrentBranch: \"Текущая ветвь\",\n\t\tdashboard: \"Панель приборов\",\n\t\t\"delete\": \"Удалить\",\n\t\tdefaultBranch: \"Ветка по умолчанию\",\n\t\tdeleteBranch: \"Удалить ветку\",\n\t\tedit: \"Редактировать\",\n\t\tloading: \"Загрузка\",\n\t\tnewBranch: \"Новая ветка\",\n\t\tpullRequests: \"Пулл-реквесты\",\n\t\totherBranches: \"Другие филиалы\",\n\t\tsave: \"Сохранять\",\n\t\tsearch: \"Поиск\",\n\t\tsingletons: \"Одиночки\",\n\t\tsingleton: \"Синглтон\",\n\t\ttheDefaultBranchInYourRepository: \"Ветка по умолчанию в вашем репозитории. Выберите это, чтобы начать что-то новое, не зависящее от вашей текущей ветки.\",\n\t\tviewPullRequests: \"Посмотреть пул-реквесты\",\n\t\ttheCurrentlyCheckedOutBranch: \"Текущая проверенная ветвь. Выберите это, если вам нужно опираться на существующую работу из текущей ветки.\"\n\t},\n\t\"sl-SI\": {\n\t\tadd: \"Dodaj\",\n\t\tbasedOn: \"Temelji na\",\n\t\tbranchName: \"Ime podružnice\",\n\t\tbranches: \"Podružnice\",\n\t\tcancel: \"Prekliči\",\n\t\tclear: \"Jasen\",\n\t\tcollection: \"Zbirka\",\n\t\tcollections: \"Zbirke\",\n\t\tcreatePullRequest: \"Ustvari zahtevo za vleko\",\n\t\tcreate: \"Ustvari\",\n\t\tcurrentBranch: \"Trenutna veja\",\n\t\tdashboard: \"Nadzorna plošča\",\n\t\tdefaultBranch: \"Privzeta veja\",\n\t\t\"delete\": \"Izbriši\",\n\t\tdeleteBranch: \"Izbriši vejo\",\n\t\tedit: \"Uredi\",\n\t\tloading: \"Nalaganje\",\n\t\tnewBranch: \"Nova podružnica\",\n\t\totherBranches: \"Druge veje\",\n\t\tpullRequests: \"Zahteve za vlečenje\",\n\t\tsave: \"Shrani\",\n\t\tsearch: \"Iskanje\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Samski\",\n\t\ttheCurrentlyCheckedOutBranch: \"Trenutno odjavljena podružnica. To izberite, če morate graditi na obstoječem delu iz trenutne veje.\",\n\t\ttheDefaultBranchInYourRepository: \"Privzeta veja v vašem skladišču. Izberite to, da začnete nekaj novega, kar ni odvisno od vaše trenutne veje.\",\n\t\tviewPullRequests: \"Oglejte si zahteve za vlečenje\"\n\t},\n\t\"sr-SP\": {\n\t\tadd: \"Додати\",\n\t\tbasedOn: \"На бази\",\n\t\tbranchName: \"Назив огранка\",\n\t\tbranches: \"Огранци\",\n\t\tcancel: \"Поништити, отказати\",\n\t\tclear: \"Izbriši\",\n\t\tcollection: \"Цоллецтион\",\n\t\tcollections: \"Збирке\",\n\t\tcreatePullRequest: \"Креирајте захтев за повлачење\",\n\t\tcreate: \"Креирај\",\n\t\tcurrentBranch: \"Тренутна грана\",\n\t\tdefaultBranch: \"Подразумевана грана\",\n\t\tdashboard: \"Командна табла\",\n\t\t\"delete\": \"Избриши\",\n\t\tdeleteBranch: \"Обриши грану\",\n\t\tedit: \"Уредити\",\n\t\tloading: \"Učitavam\",\n\t\tnewBranch: \"Нова грана\",\n\t\totherBranches: \"Остале гране\",\n\t\tpullRequests: \"Захтеви за повлачење\",\n\t\tsearch: \"Pretraga\",\n\t\tsave: \"сачувати\",\n\t\tsingleton: \"Синглетон\",\n\t\ttheCurrentlyCheckedOutBranch: \"Тренутно одјављена филијала. Изаберите ово ако треба да надоградите постојећи рад из тренутне гране.\",\n\t\tsingletons: \"Синглетонс\",\n\t\ttheDefaultBranchInYourRepository: \"Подразумевана грана у вашем спремишту. Изаберите ово да започнете нешто ново што не зависи од ваше тренутне гране.\",\n\t\tviewPullRequests: \"Прегледајте захтеве за повлачењем\"\n\t},\n\t\"tr-TR\": {\n\t\tadd: \"Avbryt\",\n\t\tbasedOn: \"Dayalı\",\n\t\tbranchName: \"şube adı\",\n\t\tbranches: \"Şubeler\",\n\t\tcancel: \"iptal etmek\",\n\t\tclear: \"Temizle\",\n\t\tcollection: \"Toplamak\",\n\t\tcollections: \"Koleksiyonlar\",\n\t\tcreate: \"Yaratmak\",\n\t\tcreatePullRequest: \"Çekme isteği oluştur\",\n\t\tcurrentBranch: \"Mevcut şube\",\n\t\tdefaultBranch: \"varsayılan dal\",\n\t\tdashboard: \"Gösterge Paneli\",\n\t\t\"delete\": \"Silmek\",\n\t\tloading: \"Yükleniyor\",\n\t\tedit: \"Düzenlemek\",\n\t\tdeleteBranch: \"Şubeyi sil\",\n\t\tnewBranch: \"Yeni dal\",\n\t\tpullRequests: \"Çekme istekleri\",\n\t\totherBranches: \"Diğer şubeler\",\n\t\tsave: \"Kaydetmek\",\n\t\tsearch: \"Ara\",\n\t\tsingleton: \"Tekil\",\n\t\tsingletons: \"Singleton'lar\",\n\t\ttheCurrentlyCheckedOutBranch: \"Şu anda kontrol edilen şube. Geçerli daldaki mevcut işi geliştirmeniz gerekiyorsa bunu seçin.\",\n\t\ttheDefaultBranchInYourRepository: \"Deponuzdaki varsayılan şube. Mevcut şubenize bağlı olmayan yeni bir şey başlatmak için bunu seçin.\",\n\t\tviewPullRequests: \"Çekme isteklerini görüntüle\"\n\t},\n\t\"sv-SE\": {\n\t\tbasedOn: \"Baserat på\",\n\t\tadd: \"Lägg till\",\n\t\tbranchName: \"Filialens namn\",\n\t\tcancel: \"Поништити, отказати\",\n\t\tbranches: \"Grenar\",\n\t\tclear: \"Rensa\",\n\t\tcollections: \"Samlingar\",\n\t\tcollection: \"Samling\",\n\t\tcreate: \"Skapa\",\n\t\tcreatePullRequest: \"Skapa pull-förfrågan\",\n\t\tcurrentBranch: \"Nuvarande gren\",\n\t\tdashboard: \"instrumentbräda\",\n\t\tdefaultBranch: \"Standardgren\",\n\t\t\"delete\": \"Radera\",\n\t\tdeleteBranch: \"Ta bort gren\",\n\t\tedit: \"Redigera\",\n\t\tloading: \"Läser in\",\n\t\tnewBranch: \"Ny gren\",\n\t\tpullRequests: \"Dra förfrågningar\",\n\t\totherBranches: \"Andra grenar\",\n\t\tsave: \"Spara\",\n\t\tsearch: \"Sök\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singlar\",\n\t\ttheCurrentlyCheckedOutBranch: \"Den utcheckade filialen. Välj detta om du behöver bygga på befintligt arbete från den aktuella grenen.\",\n\t\ttheDefaultBranchInYourRepository: \"Standardgrenen i ditt arkiv. Välj detta för att starta något nytt som inte är beroende av din nuvarande filial.\",\n\t\tviewPullRequests: \"Visa pull-förfrågningar\"\n\t},\n\t\"uk-UA\": {\n\t\tbasedOn: \"На основі\",\n\t\tadd: \"додати\",\n\t\tbranchName: \"Назва гілки\",\n\t\tbranches: \"Відділення\",\n\t\tcancel: \"скасувати\",\n\t\tclear: \"Очистити\",\n\t\tcollection: \"Колекція\",\n\t\tcollections: \"Колекції\",\n\t\tcreate: \"Створити\",\n\t\tcreatePullRequest: \"Створити запит на отримання\",\n\t\tdashboard: \"Панель приладів\",\n\t\tcurrentBranch: \"Поточне відділення\",\n\t\tdefaultBranch: \"Гілка за замовчуванням\",\n\t\t\"delete\": \"Видалити\",\n\t\tdeleteBranch: \"Видалити гілку\",\n\t\tedit: \"Редагувати\",\n\t\tloading: \"Завантаження\",\n\t\tnewBranch: \"Нова гілка\",\n\t\totherBranches: \"Інші гілки\",\n\t\tpullRequests: \"Запити на витягування\",\n\t\tsave: \"зберегти\",\n\t\tsearch: \"Пошук\",\n\t\tsingletons: \"Одиночки\",\n\t\tsingleton: \"Синглтон\",\n\t\ttheCurrentlyCheckedOutBranch: \"Поточна перевірена гілка. Виберіть це, якщо вам потрібно створити на основі існуючої роботи з поточної гілки.\",\n\t\ttheDefaultBranchInYourRepository: \"Стандартна гілка у вашому сховищі. Виберіть це, щоб почати щось нове, що не залежить від вашої поточної гілки.\",\n\t\tviewPullRequests: \"Перегляд запитів на отримання\"\n\t},\n\t\"zh-CN\": {\n\t\tadd: \"添加\",\n\t\tbasedOn: \"基于\",\n\t\tbranchName: \"分店名称\",\n\t\tcancel: \"取消\",\n\t\tbranches: \"分支机构\",\n\t\tclear: \"透明\",\n\t\tcreate: \"创造\",\n\t\tcollection: \"收藏\",\n\t\tcollections: \"收藏品\",\n\t\tcreatePullRequest: \"创建拉取请求\",\n\t\tcurrentBranch: \"当前分支\",\n\t\tdashboard: \"仪表板\",\n\t\tdefaultBranch: \"默认分支\",\n\t\t\"delete\": \"删除\",\n\t\tdeleteBranch: \"删除分支\",\n\t\tedit: \"编辑\",\n\t\tloading: \"正在加载\",\n\t\tnewBranch: \"新分行\",\n\t\totherBranches: \"其他分行\",\n\t\tsave: \"节省\",\n\t\tpullRequests: \"拉取请求\",\n\t\tsearch: \"搜索\",\n\t\tsingletons: \"单例\",\n\t\tsingleton: \"单例\",\n\t\ttheCurrentlyCheckedOutBranch: \"当前签出的分支。 如果您需要在当前分支的现有工作的基础上构建，请选择此项。\",\n\t\ttheDefaultBranchInYourRepository: \"存储库中的默认分支。 选择此选项可开始一些不依赖于当前分支的新操作。\",\n\t\tviewPullRequests: \"查看拉取请求\"\n\t},\n\t\"zh-TW\": {\n\t\tadd: \"添加\",\n\t\tbasedOn: \"基於\",\n\t\tbranchName: \"分店名稱\",\n\t\tbranches: \"分支機構\",\n\t\tclear: \"清除\",\n\t\tcancel: \"取消\",\n\t\tcollection: \"收藏\",\n\t\tcollections: \"收藏品\",\n\t\tcreate: \"創造\",\n\t\tcreatePullRequest: \"創建拉取請求\",\n\t\tcurrentBranch: \"當前分支\",\n\t\tdashboard: \"儀表板\",\n\t\t\"delete\": \"刪除\",\n\t\tdeleteBranch: \"刪除分支\",\n\t\tedit: \"編輯\",\n\t\tloading: \"正在載入\",\n\t\tnewBranch: \"新分行\",\n\t\tdefaultBranch: \"默認分支\",\n\t\totherBranches: \"其他分行\",\n\t\tpullRequests: \"拉取請求\",\n\t\tsave: \"節省\",\n\t\tsearch: \"搜尋\",\n\t\tsingleton: \"單例\",\n\t\tsingletons: \"單例\",\n\t\ttheCurrentlyCheckedOutBranch: \"當前簽出的分支。 如果您需要在當前分支的現有工作的基礎上構建，請選擇此項。\",\n\t\ttheDefaultBranchInYourRepository: \"存儲庫中的默認分支。 選擇此選項可開始一些不依賴於當前分支的新操作。\",\n\t\tviewPullRequests: \"查看拉取請求\"\n\t},\n\t\"sk-SK\": {\n\t\tadd: \"Pridať\",\n\t\tbasedOn: \"Založené na\",\n\t\tbranchName: \"Meno pobočky\",\n\t\tbranches: \"Pobočky\",\n\t\tclear: \"Vymazať\",\n\t\tcancel: \"Zrušiť\",\n\t\tcollections: \"zbierky\",\n\t\tcollection: \"Zbierka\",\n\t\tcreate: \"Vytvorte\",\n\t\tdashboard: \"Dashboard\",\n\t\tcurrentBranch: \"Aktuálna pobočka\",\n\t\tdefaultBranch: \"Predvolená vetva\",\n\t\t\"delete\": \"Odstrániť\",\n\t\tdeleteBranch: \"Odstrániť vetvu\",\n\t\tedit: \"Upraviť\",\n\t\tloading: \"Načítava sa\",\n\t\tnewBranch: \"Nová pobočka\",\n\t\totherBranches: \"Ostatné pobočky\",\n\t\tpullRequests: \"Vytiahnite žiadosti\",\n\t\tsave: \"Uložiť\",\n\t\tsearch: \"Vyhľadávať\",\n\t\tsingleton: \"Singleton\",\n\t\tsingletons: \"Singletons\",\n\t\ttheCurrentlyCheckedOutBranch: \"Aktuálne odhlásená pobočka. Túto možnosť vyberte, ak potrebujete stavať na existujúcej práci z aktuálnej pobočky.\",\n\t\ttheDefaultBranchInYourRepository: \"Predvolená vetva vo vašom úložisku. Zvoľte túto možnosť, ak chcete začať niečo nové, čo nezávisí od vašej aktuálnej pobočky.\",\n\t\tviewPullRequests: \"Zobraziť požiadavky na stiahnutie\",\n\t\tcreatePullRequest: \"Vytvorte požiadavku na stiahnutie\"\n\t}\n};\n\nconst RouterContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction RouterProvider(props) {\n  const [url, setUrl] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => window.location.href);\n  const router = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    function navigate(url, replace) {\n      const newUrl = new URL(url, window.location.href);\n      if (newUrl.origin !== window.location.origin || !newUrl.pathname.startsWith('/keystatic')) {\n        window.location.assign(newUrl);\n        return;\n      }\n      window.history[replace ? 'replaceState' : 'pushState'](null, '', newUrl);\n      (0,react__WEBPACK_IMPORTED_MODULE_3__.startTransition)(() => {\n        setUrl(newUrl.toString());\n      });\n    }\n    const replaced = location.pathname.replace(/^\\/keystatic\\/?/, '');\n    const params = replaced === '' ? [] : replaced.split('/').map(decodeURIComponent);\n    const parsedUrl = new URL(url);\n    return {\n      href: parsedUrl.pathname + parsedUrl.search,\n      replace(path) {\n        navigate(path, true);\n      },\n      push(path) {\n        navigate(path, false);\n      },\n      params\n    };\n  }, [url]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    const handleNavigate = () => {\n      (0,react__WEBPACK_IMPORTED_MODULE_3__.startTransition)(() => {\n        setUrl(window.location.href);\n      });\n    };\n    window.addEventListener('popstate', handleNavigate);\n    return () => {\n      window.removeEventListener('popstate', handleNavigate);\n    };\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(RouterContext.Provider, {\n    value: router,\n    children: props.children\n  });\n}\nfunction useRouter() {\n  const router = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(RouterContext);\n  if (router == null) {\n    throw new Error('useRouter must be used within a RouterProvider');\n  }\n  return router;\n}\n\nfunction fixPath(path) {\n  return path.replace(/^\\.?\\/+/, '').replace(/\\/*$/, '');\n}\nconst collectionPath = /\\/\\*\\*?(?:$|\\/)/;\nfunction getConfiguredCollectionPath(config, collection) {\n  var _collectionConfig$pat;\n  const collectionConfig = config.collections[collection];\n  const path = (_collectionConfig$pat = collectionConfig.path) !== null && _collectionConfig$pat !== void 0 ? _collectionConfig$pat : `${collection}/*/`;\n  if (!collectionPath.test(path)) {\n    throw new Error(`Collection path must end with /* or /** or include /*/ or /**/ but ${collection} has ${path}`);\n  }\n  return path;\n}\nfunction getCollectionPath(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/\\*\\*?.*$/, ''));\n  return path;\n}\nfunction getCollectionFormat(config, collection) {\n  var _collectionConfig$for;\n  const collectionConfig = config.collections[collection];\n  return getFormatInfo((_collectionConfig$for = collectionConfig.format) !== null && _collectionConfig$for !== void 0 ? _collectionConfig$for : 'yaml', collectionConfig.schema, getConfiguredCollectionPath(config, collection));\n}\nfunction getSingletonFormat(config, singleton) {\n  var _singletonConfig$form, _singletonConfig$path;\n  const singletonConfig = config.singletons[singleton];\n  return getFormatInfo((_singletonConfig$form = singletonConfig.format) !== null && _singletonConfig$form !== void 0 ? _singletonConfig$form : 'yaml', singletonConfig.schema, (_singletonConfig$path = singletonConfig.path) !== null && _singletonConfig$path !== void 0 ? _singletonConfig$path : `${singleton}/`);\n}\nfunction getCollectionItemPath(config, collection, slug) {\n  const basePath = getCollectionPath(config, collection);\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  return `${basePath}/${slug}${suffix}`;\n}\nfunction getEntryDataFilepath(dir, formatInfo) {\n  return `${dir}${formatInfo.dataLocation === 'index' ? '/index' : ''}${getDataFileExtension(formatInfo)}`;\n}\nfunction getSlugGlobForCollection(config, collection) {\n  const collectionPath = getConfiguredCollectionPath(config, collection);\n  return collectionPath.includes('**') ? '**' : '*';\n}\nfunction getCollectionItemSlugSuffix(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/^[^*]+\\*\\*?/, ''));\n  return path ? `/${path}` : '';\n}\nfunction getSingletonPath(config, singleton) {\n  var _singleton$path, _singleton$path2;\n  if ((_singleton$path = config.singletons[singleton].path) !== null && _singleton$path !== void 0 && _singleton$path.includes('*')) {\n    throw new Error(`Singleton paths cannot include * but ${singleton} has ${config.singletons[singleton].path}`);\n  }\n  return fixPath((_singleton$path2 = config.singletons[singleton].path) !== null && _singleton$path2 !== void 0 ? _singleton$path2 : singleton);\n}\nfunction getDataFileExtension(formatInfo) {\n  return formatInfo.contentField ? formatInfo.contentField.config.contentExtension : '.' + formatInfo.data;\n}\nfunction getFormatInfo(format, schema, path) {\n  var _format$data;\n  const dataLocation = path.endsWith('/') ? 'index' : 'outer';\n  if (typeof format === 'string') {\n    return {\n      dataLocation,\n      contentField: undefined,\n      data: format\n    };\n  }\n  let contentField;\n  if (format.contentField) {\n    const field = schema[format.contentField];\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)((field === null || field === void 0 ? void 0 : field.kind) === 'form', `${format.contentField} is not a form field`);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(field.formKind === 'content', `${format.contentField} is not a content field`);\n    contentField = {\n      key: format.contentField,\n      config: field\n    };\n  }\n  return {\n    data: (_format$data = format.data) !== null && _format$data !== void 0 ? _format$data : 'yaml',\n    contentField,\n    dataLocation\n  };\n}\nfunction getPathPrefix(storage) {\n  if (storage.kind === 'local' || !storage.pathPrefix) {\n    return undefined;\n  }\n  return fixPath(storage.pathPrefix) + '/';\n}\n\nasync function sha1(content) {\n  return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)('sha1').update(content).digest('hex');\n}\n\nconst textEncoder$2 = new TextEncoder();\nfunction blobSha(contents) {\n  const blobPrefix = textEncoder$2.encode('blob ' + contents.length + '\\0');\n  const array = new Uint8Array(blobPrefix.byteLength + contents.byteLength);\n  array.set(blobPrefix, 0);\n  array.set(contents, blobPrefix.byteLength);\n  return sha1(array);\n}\nfunction getTreeNodeAtPath(root, path) {\n  const parts = path.split('/');\n  let node = root.get(parts[0]);\n  for (const part of parts.slice(1)) {\n    if (!node) return undefined;\n    if (!node.children) return undefined;\n    node = node.children.get(part);\n  }\n  return node;\n}\nfunction getNodeAtPath(tree, path) {\n  let node = tree;\n  for (const part of path.split('/')) {\n    if (!node.has(part)) {\n      node.set(part, new Map());\n    }\n    const innerNode = node.get(part);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(innerNode instanceof Map, 'expected tree');\n    node = innerNode;\n  }\n  return node;\n}\nfunction getFilename(path) {\n  return path.replace(/.*\\//, '');\n}\nfunction getDirname(path) {\n  return path.replace(/\\/[^/]+$/, '');\n}\nfunction toTreeChanges(changes) {\n  const changesRoot = new Map();\n  for (const deletion of changes.deletions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(deletion));\n    parentTree.set(getFilename(deletion), 'delete');\n  }\n  for (const addition of changes.additions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(addition.path));\n    parentTree.set(getFilename(addition.path), addition.contents);\n  }\n  return changesRoot;\n}\nconst SPACE_CHAR_CODE = 32;\nconst space = new Uint8Array([SPACE_CHAR_CODE]);\nconst nullchar = new Uint8Array([0]);\nconst tree = textEncoder$2.encode('tree ');\n\n// based on https://github.com/isomorphic-git/isomorphic-git/blob/c09dfa20ffe0ab9e6602e0fa172d72ba8994e443/src/models/GitTree.js#L108-L122\nfunction treeSha(children) {\n  const entries = [...children].map(([name, node]) => ({\n    name,\n    sha: node.entry.sha,\n    mode: node.entry.mode\n  }));\n  entries.sort((a, b) => {\n    const aName = a.mode === '040000' ? a.name + '/' : a.name;\n    const bName = b.mode === '040000' ? b.name + '/' : b.name;\n    return aName === bName ? 0 : aName < bName ? -1 : 1;\n  });\n  const treeObject = entries.flatMap(entry => {\n    const mode = textEncoder$2.encode(entry.mode.replace(/^0/, ''));\n    const name = textEncoder$2.encode(entry.name);\n    const sha = hexToBytes(entry.sha);\n    return [mode, space, name, nullchar, sha];\n  });\n  return sha1(concatBytes([tree, textEncoder$2.encode(treeObject.reduce((sum, val) => sum + val.byteLength, 0).toString()), nullchar, ...treeObject]));\n}\nfunction concatBytes(byteArrays) {\n  const totalLength = byteArrays.reduce((sum, arr) => sum + arr.byteLength, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of byteArrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\nfunction hexToBytes(str) {\n  const bytes = new Uint8Array(str.length / 2);\n  for (var i = 0; i < bytes.byteLength; i += 1) {\n    const start = i * 2;\n    bytes[i] = parseInt(str.slice(start, start + 2), 16);\n  }\n  return bytes;\n}\nasync function createTreeNodeEntry(path, children) {\n  const sha = await treeSha(children);\n  return {\n    path,\n    mode: '040000',\n    type: 'tree',\n    sha\n  };\n}\nasync function createBlobNodeEntry(path, contents) {\n  const sha = 'sha' in contents ? contents.sha : await blobSha(contents);\n  return {\n    path,\n    mode: '100644',\n    type: 'blob',\n    sha,\n    size: contents.byteLength\n  };\n}\nasync function updateTreeWithChanges(tree, changes) {\n  var _await$updateTree;\n  const newTree = (_await$updateTree = await updateTree(tree, toTreeChanges(changes), [])) !== null && _await$updateTree !== void 0 ? _await$updateTree : new Map();\n  return {\n    entries: treeToEntries(newTree),\n    sha: await treeSha(newTree !== null && newTree !== void 0 ? newTree : new Map())\n  };\n}\nfunction treeToEntries(tree) {\n  return [...tree.values()].flatMap(x => x.children ? [x.entry, ...treeToEntries(x.children)] : [x.entry]);\n}\nasync function updateTree(tree, changedTree, path) {\n  const newTree = new Map(tree);\n  for (const [key, value] of changedTree) {\n    if (value === 'delete') {\n      newTree.delete(key);\n    }\n    if (value instanceof Map) {\n      var _newTree$get$children, _newTree$get;\n      const existingChildren = (_newTree$get$children = (_newTree$get = newTree.get(key)) === null || _newTree$get === void 0 ? void 0 : _newTree$get.children) !== null && _newTree$get$children !== void 0 ? _newTree$get$children : new Map();\n      const children = await updateTree(existingChildren, value, path.concat(key));\n      if (children === undefined) {\n        newTree.delete(key);\n        continue;\n      }\n      const entry = await createTreeNodeEntry(path.concat(key).join('/'), children);\n      newTree.set(key, {\n        entry,\n        children\n      });\n    }\n    if (value instanceof Uint8Array || typeof value === 'object' && 'sha' in value) {\n      const entry = await createBlobNodeEntry(path.concat(key).join('/'), value);\n      newTree.set(key, {\n        entry\n      });\n    }\n  }\n  if (newTree.size === 0) {\n    return undefined;\n  }\n  return newTree;\n}\nfunction treeEntriesToTreeNodes(entries) {\n  const root = new Map();\n  const getChildrenAtPath = parts => {\n    var _node;\n    if (parts.length === 0) {\n      return root;\n    }\n    let node = root.get(parts[0]);\n    for (const part of parts.slice(1)) {\n      if (!node) return undefined;\n      if (!node.children) return undefined;\n      node = node.children.get(part);\n    }\n    return (_node = node) === null || _node === void 0 ? void 0 : _node.children;\n  };\n  for (const entry of entries) {\n    const split = entry.path.split('/');\n    const children = getChildrenAtPath(split.slice(0, -1));\n    if (children) {\n      children.set(split[split.length - 1], {\n        entry,\n        children: entry.type === 'tree' ? new Map() : undefined\n      });\n    }\n  }\n  return root;\n}\n\nconst LOADING = Symbol('loading');\nfunction isThenable(value) {\n  return value && typeof value.then === 'function';\n}\nfunction useData(func) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n    kind: 'loading'\n  });\n  let stateToReturn = state;\n  const result = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    try {\n      const result = func();\n      // this avoids unhandled promise rejections\n      // we actually handle the result in an effect\n      if (isThenable(result)) {\n        result.then(() => {}, () => {});\n      }\n      return {\n        kind: 'result',\n        result\n      };\n    } catch (error) {\n      return {\n        kind: 'error',\n        error: error\n      };\n    }\n  }, [func]);\n  const resultState = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (result.kind === 'error' && (state.kind !== 'error' || state.error !== result.error)) {\n      return {\n        kind: 'error',\n        error: result.error\n      };\n    }\n    if (result.kind === 'result' && !isThenable(result.result) && result.result !== LOADING && (state.kind !== 'loaded' || state.data !== result.result)) {\n      return {\n        kind: 'loaded',\n        data: result.result\n      };\n    }\n  }, [result, state]);\n  if (resultState && resultState !== state) {\n    stateToReturn = resultState;\n    setState(resultState);\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (result.kind === 'result' && isThenable(result.result)) {\n      setState({\n        kind: 'loading'\n      });\n      let isActive = true;\n      result.result.then(result => {\n        if (result === LOADING || !isActive) return;\n        setState({\n          kind: 'loaded',\n          data: result\n        });\n      }, error => {\n        if (!isActive) return;\n        setState({\n          kind: 'error',\n          error\n        });\n      });\n      return () => {\n        isActive = false;\n      };\n    }\n  }, [result]);\n  return stateToReturn;\n}\nfunction mapDataState(state, func) {\n  if (state.kind === 'error' || state.kind === 'loading') {\n    return state;\n  }\n  return {\n    kind: 'loaded',\n    data: func(state.data)\n  };\n}\nfunction mergeDataStates(input) {\n  const entries = Object.entries(input);\n  for (const [, value] of entries) {\n    if (value.kind === 'error') {\n      return {\n        kind: 'error',\n        error: value.error\n      };\n    }\n  }\n  for (const [, value] of entries) {\n    if (value.kind === 'loading') {\n      return {\n        kind: 'loading'\n      };\n    }\n  }\n  return {\n    kind: 'loaded',\n    data: Object.fromEntries(entries.map(([key, val]) => {\n      return [key, val.data];\n    }))\n  };\n}\n\nfunction collectDirectoriesUsedInSchemaInner(schema, directories, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return;\n  }\n  seenSchemas.add(schema);\n  if (schema.kind === 'array') {\n    return collectDirectoriesUsedInSchemaInner(schema.element, directories, seenSchemas);\n  }\n  if (schema.kind === 'child') {\n    return;\n  }\n  if (schema.kind === 'form') {\n    if (schema.formKind === 'asset' && schema.directory !== undefined) {\n      directories.add(fixPath(schema.directory));\n    }\n    if (schema.formKind === 'content' && schema.directories !== undefined) {\n      for (const directory of schema.directories) {\n        directories.add(fixPath(directory));\n      }\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const field of Object.values(schema.fields)) {\n      collectDirectoriesUsedInSchemaInner(field, directories, seenSchemas);\n    }\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    for (const innerSchema of Object.values(schema.values)) {\n      collectDirectoriesUsedInSchemaInner(innerSchema, directories, seenSchemas);\n    }\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction collectDirectoriesUsedInSchema(schema) {\n  const directories = new Set();\n  collectDirectoriesUsedInSchemaInner(schema, directories, new Set());\n  return directories;\n}\nfunction getDirectoriesForTreeKey(schema, directory, slug, format) {\n  const directories = [fixPath(directory)];\n  if (format.dataLocation === 'outer') {\n    directories.push(fixPath(directory) + getDataFileExtension(format));\n  }\n  const toAdd = slug === undefined ? '' : `/${slug}`;\n  for (const directory of collectDirectoriesUsedInSchema(schema)) {\n    directories.push(directory + toAdd);\n  }\n  return directories;\n}\nfunction getTreeKey(directories, tree) {\n  return directories.map(d => {\n    var _getTreeNodeAtPath;\n    return (_getTreeNodeAtPath = getTreeNodeAtPath(tree, d)) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.entry.sha;\n  }).join('-');\n}\n\nvar pkgJson = {\n\tname: \"@keystatic/core\",\n\tversion: \"0.2.12\",\n\tlicense: \"MIT\",\n\trepository: {\n\t\ttype: \"git\",\n\t\turl: \"https://github.com/Thinkmill/keystatic/\",\n\t\tdirectory: \"packages/keystatic\"\n\t},\n\texports: {\n\t\t\"./ui\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.node.esm.js\",\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.react-server.esm.js\",\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./ui/dist/keystatic-core-ui.esm.js\",\n\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.cjs.mjs\",\n\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.cjs.js\"\n\t\t},\n\t\t\".\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./dist/keystatic-core.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./dist/keystatic-core.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./dist/keystatic-core.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./dist/keystatic-core.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./dist/keystatic-core.node.esm.js\",\n\t\t\t\t\"import\": \"./dist/keystatic-core.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./dist/keystatic-core.react-server.esm.js\",\n\t\t\t\t\"import\": \"./dist/keystatic-core.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./dist/keystatic-core.esm.js\",\n\t\t\t\"import\": \"./dist/keystatic-core.cjs.mjs\",\n\t\t\t\"default\": \"./dist/keystatic-core.cjs.js\"\n\t\t},\n\t\t\"./api/utils\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.node.esm.js\",\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.react-server.esm.js\",\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.esm.js\",\n\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.cjs.mjs\",\n\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.cjs.js\"\n\t\t},\n\t\t\"./renderer\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.node.esm.js\",\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.react-server.esm.js\",\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.esm.js\",\n\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.cjs.mjs\",\n\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.cjs.js\"\n\t\t},\n\t\t\"./api/generic\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.node.esm.js\",\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.react-server.esm.js\",\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.esm.js\",\n\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.cjs.mjs\",\n\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.cjs.js\"\n\t\t},\n\t\t\"./reader\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.node.esm.js\",\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.react-server.esm.js\",\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./reader/dist/keystatic-core-reader.esm.js\",\n\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.cjs.mjs\",\n\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.cjs.js\"\n\t\t},\n\t\t\"./reader/github\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.node.esm.js\",\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.react-server.esm.js\",\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.esm.js\",\n\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.cjs.mjs\",\n\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.cjs.js\"\n\t\t},\n\t\t\"./content-components\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.node.esm.js\",\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.react-server.esm.js\",\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.esm.js\",\n\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.cjs.mjs\",\n\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.cjs.js\"\n\t\t},\n\t\t\"./component-blocks\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.node.esm.js\",\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.react-server.esm.js\",\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.esm.js\",\n\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.mjs\",\n\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.js\"\n\t\t},\n\t\t\"./form/fields/markdoc\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.esm.js\",\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.esm.js\",\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.esm.js\",\n\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.mjs\",\n\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\tmain: \"dist/keystatic-core.cjs.js\",\n\tmodule: \"dist/keystatic-core.esm.js\",\n\tfiles: [\n\t\t\"dist\",\n\t\t\"api\",\n\t\t\"reader\",\n\t\t\"renderer\",\n\t\t\"ui\",\n\t\t\"form\",\n\t\t\"component-blocks\",\n\t\t\"content-components\"\n\t],\n\tscripts: {\n\t\tsetup: \"ts-gql build && tsx scripts/l10n.ts && tsx scripts/build-prism.ts\",\n\t\tbuild: \"pnpm run setup && next build\",\n\t\tdev: \"next dev\",\n\t\tstart: \"next start\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@braintree/sanitize-url\": \"^6.0.2\",\n\t\t\"@emotion/css\": \"^11.9.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"@floating-ui/react\": \"^0.24.0\",\n\t\t\"@internationalized/string\": \"^3.1.1\",\n\t\t\"@keystar/ui\": \"^0.4.9\",\n\t\t\"@markdoc/markdoc\": \"^0.3.0\",\n\t\t\"@react-aria/focus\": \"^3.14.3\",\n\t\t\"@react-aria/i18n\": \"^3.8.0\",\n\t\t\"@react-aria/interactions\": \"^3.19.1\",\n\t\t\"@react-aria/overlays\": \"^3.18.1\",\n\t\t\"@react-aria/selection\": \"^3.17.1\",\n\t\t\"@react-aria/utils\": \"^3.21.1\",\n\t\t\"@react-aria/visually-hidden\": \"^3.8.6\",\n\t\t\"@react-stately/collections\": \"^3.10.2\",\n\t\t\"@react-stately/list\": \"^3.10.0\",\n\t\t\"@react-stately/overlays\": \"^3.6.3\",\n\t\t\"@react-stately/utils\": \"^3.8.0\",\n\t\t\"@react-types/shared\": \"^3.21.0\",\n\t\t\"@sindresorhus/slugify\": \"^1.1.2\",\n\t\t\"@ts-gql/tag\": \"^0.7.0\",\n\t\t\"@types/node\": \"16.11.13\",\n\t\t\"@types/react\": \"^18.2.8\",\n\t\t\"@types/react-dom\": \"^18.0.11\",\n\t\t\"@urql/core\": \"^4.1.3\",\n\t\t\"@urql/exchange-auth\": \"^2.1.6\",\n\t\t\"@urql/exchange-graphcache\": \"^6.3.3\",\n\t\t\"@urql/exchange-persisted\": \"^4.1.0\",\n\t\tcookie: \"^0.5.0\",\n\t\temery: \"^1.4.1\",\n\t\t\"escape-string-regexp\": \"^4.0.0\",\n\t\t\"fast-deep-equal\": \"^3.1.3\",\n\t\tgraphql: \"^16.6.0\",\n\t\t\"idb-keyval\": \"^6.2.1\",\n\t\tignore: \"^5.2.4\",\n\t\t\"iron-webcrypto\": \"^0.10.1\",\n\t\t\"is-hotkey\": \"^0.2.0\",\n\t\t\"js-base64\": \"^3.7.5\",\n\t\t\"js-yaml\": \"^4.1.0\",\n\t\t\"lru-cache\": \"^7.14.1\",\n\t\t\"match-sorter\": \"^6.3.1\",\n\t\t\"mdast-util-from-markdown\": \"^0.8.5\",\n\t\t\"mdast-util-gfm-autolink-literal\": \"^0.1.3\",\n\t\t\"mdast-util-gfm-strikethrough\": \"^0.2.3\",\n\t\t\"micromark-extension-gfm-autolink-literal\": \"0.5.7\",\n\t\t\"micromark-extension-gfm-strikethrough\": \"0.6.5\",\n\t\tminimatch: \"^7.1.0\",\n\t\t\"prosemirror-commands\": \"^1.5.1\",\n\t\t\"prosemirror-history\": \"^1.3.0\",\n\t\t\"prosemirror-keymap\": \"^1.2.1\",\n\t\t\"prosemirror-model\": \"^1.19.0\",\n\t\t\"prosemirror-state\": \"^1.4.2\",\n\t\t\"prosemirror-tables\": \"^1.3.4\",\n\t\t\"prosemirror-transform\": \"^1.7.1\",\n\t\t\"prosemirror-view\": \"^1.30.2\",\n\t\t\"scroll-into-view-if-needed\": \"^3.0.3\",\n\t\tslate: \"^0.91.4\",\n\t\t\"slate-history\": \"^0.86.0\",\n\t\t\"slate-react\": \"^0.91.9\",\n\t\turql: \"^4.0.0\",\n\t\tzod: \"^3.20.2\"\n\t},\n\tdevDependencies: {\n\t\t\"@jest/expect\": \"^29.7.0\",\n\t\t\"@jest/globals\": \"^29.7.0\",\n\t\t\"@testing-library/user-event\": \"^14.4.3\",\n\t\t\"@ts-gql/compiler\": \"^0.16.1\",\n\t\t\"@ts-gql/eslint-plugin\": \"^0.8.5\",\n\t\t\"@ts-gql/next\": \"^17.0.0\",\n\t\t\"@types/cookie\": \"^0.5.1\",\n\t\t\"@types/is-hotkey\": \"^0.1.7\",\n\t\t\"@types/js-yaml\": \"^4.0.5\",\n\t\t\"@types/prismjs\": \"^1.26.0\",\n\t\t\"@types/signal-exit\": \"^3.0.1\",\n\t\teslint: \"^8.18.0\",\n\t\t\"fast-glob\": \"^3.2.12\",\n\t\t\"jest-diff\": \"^29.0.1\",\n\t\toutdent: \"^0.8.0\",\n\t\t\"pretty-format\": \"^29.0.1\",\n\t\tprismjs: \"^1.29.0\",\n\t\treact: \"^18.2.0\",\n\t\t\"react-dom\": \"^18.2.0\",\n\t\t\"react-element-to-jsx-string\": \"^15.0.0\",\n\t\t\"resize-observer-polyfill\": \"^1.5.1\",\n\t\t\"signal-exit\": \"^3.0.7\",\n\t\t\"slate-hyperscript\": \"^0.77.0\",\n\t\ttsx: \"^3.8.0\",\n\t\ttypescript: \"^5.2.2\"\n\t},\n\tpeerDependencies: {\n\t\treact: \"^18.2.0\",\n\t\t\"react-dom\": \"^18.2.0\"\n\t},\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"index.ts\",\n\t\t\t\"api/generic.ts\",\n\t\t\t\"api/utils.ts\",\n\t\t\t\"reader/index.ts\",\n\t\t\t\"reader/github.ts\",\n\t\t\t\"renderer.tsx\",\n\t\t\t\"ui.tsx\",\n\t\t\t\"form/fields/markdoc/index.tsx\",\n\t\t\t\"component-blocks/index.tsx\",\n\t\t\t\"content-components.ts\"\n\t\t]\n\t},\n\t\"ts-gql\": {\n\t\tschema: \"./github.graphql\",\n\t\tmode: \"no-transform\",\n\t\taddTypename: false,\n\t\tscalars: {\n\t\t\tGitObjectID: \"string\"\n\t\t}\n\t},\n\timports: {\n\t\t\"#react-cache-in-react-server\": {\n\t\t\t\"react-server\": \"./src/reader/react-server-cache.ts\",\n\t\t\t\"default\": \"./src/reader/noop-cache.ts\"\n\t\t},\n\t\t\"#sha1\": {\n\t\t\tnode: \"./src/sha1/node.ts\",\n\t\t\t\"default\": \"./src/sha1/webcrypto.ts\"\n\t\t},\n\t\t\"#webcrypto\": {\n\t\t\tnode: \"./src/api/webcrypto/node.ts\",\n\t\t\t\"default\": \"./src/api/webcrypto/default.ts\"\n\t\t},\n\t\t\"#api-handler\": {\n\t\t\tnode: \"./src/api/api-node.ts\",\n\t\t\t\"default\": \"./src/api/api-noop.ts\"\n\t\t},\n\t\t\"#field-ui/*\": {\n\t\t\t\"react-server\": \"./src/form/fields/empty-field-ui.tsx\",\n\t\t\t\"default\": \"./src/form/fields/*/ui.tsx\"\n\t\t},\n\t\t\"#component-block-primitives\": {\n\t\t\t\"react-server\": \"./src/form/fields/document/DocumentEditor/primitives/blank-for-react-server.tsx\",\n\t\t\t\"default\": \"./src/form/fields/document/DocumentEditor/primitives/index.tsx\"\n\t\t},\n\t\t\"#cloud-image-preview\": {\n\t\t\t\"react-server\": \"./src/component-blocks/blank-for-react-server.tsx\",\n\t\t\t\"default\": \"./src/component-blocks/cloud-image-preview.tsx\"\n\t\t}\n\t}\n};\n\nfunction object(fields, opts) {\n  return {\n    ...opts,\n    kind: 'object',\n    fields\n  };\n}\n\nfunction pluralize(count, options) {\n  const {\n    singular,\n    plural = singular + 's',\n    inclusive = true\n  } = options;\n  const variant = count === 1 ? singular : plural;\n  return inclusive ? `${count} ${variant}` : variant;\n}\nfunction getBranchPrefix(config) {\n  return config.storage.kind !== 'local' ? config.storage.branchPrefix : undefined;\n}\nfunction isGitHubConfig(config) {\n  return config.storage.kind === 'github';\n}\nfunction isLocalConfig(config) {\n  return config.storage.kind === 'local';\n}\nfunction isCloudConfig(config) {\n  var _config$cloud;\n  if (config.storage.kind !== 'cloud') return false;\n  if (!((_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) || !config.cloud.project.includes('/')) {\n    throw new Error(`Keystatic is set to \\`storage: { kind: 'cloud' }\\` but \\`cloud.project\\` isn't set.\nconfig({\n  storage: { kind: 'cloud' },\n  cloud: { project: 'team/project' },\n})`);\n  }\n  return true;\n}\nfunction getSplitCloudProject(config) {\n  var _config$cloud2;\n  if (!((_config$cloud2 = config.cloud) !== null && _config$cloud2 !== void 0 && _config$cloud2.project)) return undefined;\n  const [team, project] = config.cloud.project.split('/');\n  return {\n    team,\n    project\n  };\n}\nfunction getRepoPath(config) {\n  return `${config.mainOwner}/${config.mainRepo}`;\n}\nfunction getRepoUrl(config) {\n  return `https://github.com/${getRepoPath(config)}`;\n}\nfunction getSlugFromState(collectionConfig, state) {\n  const value = state[collectionConfig.slugField];\n  const field = collectionConfig.schema[collectionConfig.slugField];\n  if (field.kind !== 'form' || field.formKind !== 'slug') {\n    throw new Error(`slugField is not a slug field`);\n  }\n  return field.serializeWithSlug(value).slug;\n}\nfunction getEntriesInCollectionWithTreeKey(config, collection, rootTree) {\n  var _getTreeNodeAtPath$ch, _getTreeNodeAtPath;\n  const collectionConfig = config.collections[collection];\n  const schema = object(collectionConfig.schema);\n  const formatInfo = getCollectionFormat(config, collection);\n  const extension = getDataFileExtension(formatInfo);\n  const glob = getSlugGlobForCollection(config, collection);\n  const collectionPath = getCollectionPath(config, collection);\n  const directory = (_getTreeNodeAtPath$ch = (_getTreeNodeAtPath = getTreeNodeAtPath(rootTree, collectionPath)) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.children) !== null && _getTreeNodeAtPath$ch !== void 0 ? _getTreeNodeAtPath$ch : new Map();\n  const entries = [];\n  const directoriesUsedInSchema = [...collectDirectoriesUsedInSchema(schema)];\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  const possibleEntries = new Map(directory);\n  if (glob === '**') {\n    const handleDirectory = (dir, prefix) => {\n      for (const [key, entry] of dir) {\n        if (entry.children) {\n          possibleEntries.set(`${prefix}${key}`, entry);\n          handleDirectory(entry.children, `${prefix}${key}/`);\n        } else {\n          possibleEntries.set(`${prefix}${key}`, entry);\n        }\n      }\n    };\n    handleDirectory(directory, '');\n  }\n  for (const [key, entry] of possibleEntries) {\n    if (formatInfo.dataLocation === 'index') {\n      var _actualEntry$children;\n      const actualEntry = getTreeNodeAtPath(rootTree, getCollectionItemPath(config, collection, key));\n      if (!(actualEntry !== null && actualEntry !== void 0 && (_actualEntry$children = actualEntry.children) !== null && _actualEntry$children !== void 0 && _actualEntry$children.has('index' + extension))) continue;\n      entries.push({\n        key: getTreeKey([actualEntry.entry.path, ...directoriesUsedInSchema.map(x => `${x}/${key}`)], rootTree),\n        slug: key\n      });\n    } else {\n      if (suffix) {\n        const newEntry = getTreeNodeAtPath(rootTree, getCollectionItemPath(config, collection, key) + extension);\n        if (!newEntry || newEntry.children) continue;\n        entries.push({\n          key: getTreeKey([entry.entry.path, getCollectionItemPath(config, collection, key), ...directoriesUsedInSchema.map(x => `${x}/${key}`)], rootTree),\n          slug: key\n        });\n      }\n      if (entry.children || !key.endsWith(extension)) continue;\n      const slug = key.slice(0, -extension.length);\n      entries.push({\n        key: getTreeKey([entry.entry.path, getCollectionItemPath(config, collection, slug), ...directoriesUsedInSchema.map(x => `${x}/${slug}`)], rootTree),\n        slug\n      });\n    }\n  }\n  return entries;\n}\nconst KEYSTATIC_CLOUD_API_URL = 'https://api.keystatic.cloud';\nconst KEYSTATIC_CLOUD_HEADERS = {\n  'x-keystatic-version': pkgJson.version\n};\nconst textEncoder$1 = new TextEncoder();\nasync function redirectToCloudAuth(from, config) {\n  var _config$cloud3;\n  if (!((_config$cloud3 = config.cloud) !== null && _config$cloud3 !== void 0 && _config$cloud3.project)) {\n    throw new Error('Not a cloud config');\n  }\n  const code_verifier = (0,js_base64__WEBPACK_IMPORTED_MODULE_97__.fromUint8Array)(crypto.getRandomValues(new Uint8Array(32)), true);\n  const code_challenge = (0,js_base64__WEBPACK_IMPORTED_MODULE_97__.fromUint8Array)(new Uint8Array(await crypto.subtle.digest('SHA-256', textEncoder$1.encode(code_verifier))), true);\n  const state = (0,js_base64__WEBPACK_IMPORTED_MODULE_97__.fromUint8Array)(crypto.getRandomValues(new Uint8Array(32)), true);\n  localStorage.setItem('keystatic-cloud-state', JSON.stringify({\n    state,\n    from,\n    code_verifier\n  }));\n  const url = new URL(`${KEYSTATIC_CLOUD_API_URL}/oauth/authorize`);\n  url.searchParams.set('state', state);\n  url.searchParams.set('client_id', config.cloud.project);\n  url.searchParams.set('redirect_uri', `${window.location.origin}/keystatic/cloud/oauth/callback`);\n  url.searchParams.set('response_type', 'code');\n  url.searchParams.set('code_challenge_method', 'S256');\n  url.searchParams.set('code_challenge', code_challenge);\n  url.searchParams.set('keystatic_version', pkgJson.version);\n  window.location.href = url.toString();\n}\n\nconst storedTokenSchema = zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n  token: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n  project: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n  validUntil: zod__WEBPACK_IMPORTED_MODULE_98__.z.number().transform(val => new Date(val))\n});\nfunction getSyncAuth(config) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  if (config.storage.kind === 'github') {\n    const cookies = (0,cookie__WEBPACK_IMPORTED_MODULE_60__.parse)(document.cookie);\n    const accessToken = cookies['keystatic-gh-access-token'];\n    if (!accessToken) {\n      return null;\n    }\n    return {\n      accessToken\n    };\n  }\n  if (config.storage.kind === 'cloud') {\n    return getCloudAuth(config);\n  }\n  return null;\n}\nfunction getCloudAuth(config) {\n  var _config$cloud;\n  if (!((_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project)) return null;\n  const unparsedTokenData = localStorage.getItem('keystatic-cloud-access-token');\n  let tokenData;\n  try {\n    tokenData = storedTokenSchema.parse(JSON.parse(unparsedTokenData));\n  } catch (err) {\n    return null;\n  }\n  if (!tokenData || tokenData.validUntil < new Date() || tokenData.project !== config.cloud.project) {\n    return null;\n  }\n  return {\n    accessToken: tokenData.token\n  };\n}\nasync function getAuth(config) {\n  const token = getSyncAuth(config);\n  if (config.storage.kind === 'github' && !token) {\n    try {\n      const res = await fetch('/api/keystatic/github/refresh-token', {\n        method: 'POST'\n      });\n      if (res.status === 200) {\n        const cookies = (0,cookie__WEBPACK_IMPORTED_MODULE_60__.parse)(document.cookie);\n        const accessToken = cookies['keystatic-gh-access-token'];\n        if (accessToken) {\n          return {\n            accessToken\n          };\n        }\n      }\n    } catch {}\n    return null;\n  }\n  return token;\n}\n\nconst SidebarFooter_viewer = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  fragment SidebarFooter_viewer on User {\n    id\n    name\n    login\n    avatarUrl\n    databaseId\n  }\n`;\nconst ViewerContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(undefined);\nfunction useViewer() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ViewerContext);\n}\n\nfunction parseRepoConfig(repo) {\n  if (typeof repo === 'string') {\n    const [owner, name] = repo.split('/');\n    return {\n      owner,\n      name\n    };\n  }\n  return repo;\n}\nfunction serializeRepoConfig(repo) {\n  if (typeof repo === 'string') {\n    return repo;\n  }\n  return `${repo.owner}/${repo.name}`;\n}\nfunction assertValidRepoConfig(repo) {\n  if (typeof repo === 'string') {\n    if (!repo.includes('/')) {\n      throw new Error(`Invalid repo config: ${repo}. It must be in the form owner/name`);\n    }\n  }\n  if (typeof repo === 'object') {\n    if (!repo.owner && !repo.name) {\n      throw new Error(`Invalid repo config: owner and name are missing`);\n    }\n    if (!repo.owner) {\n      throw new Error(`Invalid repo config: owner is missing`);\n    }\n    if (!repo.name) {\n      throw new Error(`Invalid repo config: name is missing`);\n    }\n  }\n}\n\nfunction scopeEntriesWithPathPrefix(tree, config) {\n  const prefix = getPathPrefix(config.storage);\n  if (!prefix) return tree;\n  const newEntries = [];\n  for (const entry of tree.entries.values()) {\n    if (entry.path.startsWith(prefix)) {\n      newEntries.push({\n        ...entry,\n        path: entry.path.slice(prefix.length)\n      });\n    }\n  }\n  return {\n    entries: new Map(newEntries.map(entry => [entry.path, entry])),\n    tree: treeEntriesToTreeNodes(newEntries)\n  };\n}\n\nfunction fetchLocalTree(sha) {\n  if (treeCache.has(sha)) {\n    return treeCache.get(sha);\n  }\n  const promise = fetch('/api/keystatic/tree', {\n    headers: {\n      'no-cors': '1'\n    }\n  }).then(x => x.json()).then(async entries => hydrateTreeCacheWithEntries(entries));\n  treeCache.set(sha, promise);\n  return promise;\n}\nfunction useSetTreeSha() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SetTreeShaContext);\n}\nconst SetTreeShaContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(() => {\n  throw new Error('SetTreeShaContext not set');\n});\nfunction LocalAppShellProvider(props) {\n  const [currentTreeSha, setCurrentTreeSha] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)('initial');\n  const tree = useData((0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => fetchLocalTree(currentTreeSha), [currentTreeSha]));\n  const allTreeData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => ({\n    unscopedDefault: tree,\n    scoped: {\n      default: tree,\n      current: tree,\n      merged: mergeDataStates({\n        default: tree,\n        current: tree\n      })\n    }\n  }), [tree]);\n  const changedData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (allTreeData.scoped.merged.kind !== 'loaded') {\n      return {\n        collections: new Map(),\n        singletons: new Set()\n      };\n    }\n    return getChangedData(props.config, allTreeData.scoped.merged.data);\n  }, [allTreeData, props.config]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SetTreeShaContext.Provider, {\n    value: setCurrentTreeSha,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChangedContext.Provider, {\n      value: changedData,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TreeContext.Provider, {\n        value: allTreeData,\n        children: props.children\n      })\n    })\n  });\n}\nconst cloudInfoSchema = zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n  user: zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n    email: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n    avatarUrl: zod__WEBPACK_IMPORTED_MODULE_98__.z.string().optional()\n  }),\n  project: zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_98__.z.string()\n  }),\n  team: zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n    slug: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n    images: zod__WEBPACK_IMPORTED_MODULE_98__.z.boolean()\n  })\n});\nconst CloudInfo = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useCloudInfo() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(CloudInfo);\n  return context === 'unauthorized' ? null : context;\n}\nfunction useRawCloudInfo() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(CloudInfo);\n}\nfunction CloudInfoProvider(props) {\n  const data = useData((0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(async () => {\n    var _props$config$cloud, _getCloudAuth;\n    if (!((_props$config$cloud = props.config.cloud) !== null && _props$config$cloud !== void 0 && _props$config$cloud.project)) throw new Error('no cloud project set');\n    const token = (_getCloudAuth = getCloudAuth(props.config)) === null || _getCloudAuth === void 0 ? void 0 : _getCloudAuth.accessToken;\n    if (!token) {\n      return 'unauthorized';\n    }\n    const res = await fetch(`${KEYSTATIC_CLOUD_API_URL}/v1/info`, {\n      headers: {\n        ...KEYSTATIC_CLOUD_HEADERS,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status === 401) return 'unauthorized';\n    return cloudInfoSchema.parse(await res.json());\n  }, [props.config]));\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CloudInfo.Provider, {\n    value: data.kind === 'loaded' ? data.data : null,\n    children: props.children\n  });\n}\nconst GitHubAppShellDataContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction GitHubAppShellDataProvider(props) {\n  const [state] = (0,urql__WEBPACK_IMPORTED_MODULE_99__.useQuery)({\n    query: props.config.storage.kind === 'github' ? GitHubAppShellQuery : CloudAppShellQuery,\n    variables: props.config.storage.kind === 'github' ? parseRepoConfig(props.config.storage.repo) : {\n      name: 'repo-name',\n      owner: 'repo-owner'\n    }\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(GitHubAppShellDataContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ViewerContext.Provider, {\n      value: state.data && 'viewer' in state.data ? state.data.viewer : undefined,\n      children: props.children\n    })\n  });\n}\nconst writePermissions = new Set(['WRITE', 'ADMIN', 'MAINTAIN']);\nfunction GitHubAppShellProvider(props) {\n  var _repo, _repo3, _defaultBranchRef$tar, _currentBranchRef$tar, _currentBranchRef$tar2, _currentBranchRef$tar3, _repo5, _repo8, _repo9, _currentBranchRef$ass, _repo15, _repo16, _repo17, _data$repository3, _data$repository4, _repo18;\n  const router = useRouter();\n  const {\n    data,\n    error\n  } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(GitHubAppShellDataContext);\n  let repo = data === null || data === void 0 ? void 0 : data.repository;\n  if (repo && 'viewerPermission' in repo && repo.viewerPermission && !writePermissions.has(repo.viewerPermission) && 'forks' in repo) {\n    var _repo$forks$nodes$, _repo$forks;\n    repo = (_repo$forks$nodes$ = (_repo$forks = repo.forks) === null || _repo$forks === void 0 || (_repo$forks = _repo$forks.nodes) === null || _repo$forks === void 0 ? void 0 : _repo$forks[0]) !== null && _repo$forks$nodes$ !== void 0 ? _repo$forks$nodes$ : repo;\n  }\n  const defaultBranchRef = (_repo = repo) === null || _repo === void 0 || (_repo = _repo.refs) === null || _repo === void 0 || (_repo = _repo.nodes) === null || _repo === void 0 ? void 0 : _repo.find(x => {\n    var _repo2;\n    return (x === null || x === void 0 ? void 0 : x.name) === ((_repo2 = repo) === null || _repo2 === void 0 || (_repo2 = _repo2.defaultBranchRef) === null || _repo2 === void 0 ? void 0 : _repo2.name);\n  });\n  const currentBranchRef = (_repo3 = repo) === null || _repo3 === void 0 || (_repo3 = _repo3.refs) === null || _repo3 === void 0 || (_repo3 = _repo3.nodes) === null || _repo3 === void 0 ? void 0 : _repo3.find(x => (x === null || x === void 0 ? void 0 : x.name) === props.currentBranch);\n  const defaultBranchTreeSha = (_defaultBranchRef$tar = defaultBranchRef === null || defaultBranchRef === void 0 ? void 0 : defaultBranchRef.target.tree.oid) !== null && _defaultBranchRef$tar !== void 0 ? _defaultBranchRef$tar : null;\n  const currentBranchTreeSha = (_currentBranchRef$tar = currentBranchRef === null || currentBranchRef === void 0 ? void 0 : currentBranchRef.target.tree.oid) !== null && _currentBranchRef$tar !== void 0 ? _currentBranchRef$tar : null;\n  const baseCommit = (_currentBranchRef$tar2 = currentBranchRef === null || currentBranchRef === void 0 || (_currentBranchRef$tar3 = currentBranchRef.target) === null || _currentBranchRef$tar3 === void 0 ? void 0 : _currentBranchRef$tar3.oid) !== null && _currentBranchRef$tar2 !== void 0 ? _currentBranchRef$tar2 : null;\n  const defaultBranchTree = useGitHubTreeData(defaultBranchTreeSha, props.config);\n  const currentBranchTree = useGitHubTreeData(currentBranchTreeSha, props.config);\n  const allTreeData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    const scopedDefault = mapDataState(defaultBranchTree, tree => scopeEntriesWithPathPrefix(tree, props.config));\n    const scopedCurrent = mapDataState(currentBranchTree, tree => scopeEntriesWithPathPrefix(tree, props.config));\n    return {\n      unscopedDefault: currentBranchTree,\n      scoped: {\n        default: scopedDefault,\n        current: scopedCurrent,\n        merged: mergeDataStates({\n          default: scopedDefault,\n          current: scopedCurrent\n        })\n      }\n    };\n  }, [currentBranchTree, defaultBranchTree, props.config]);\n  const changedData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (allTreeData.scoped.merged.kind !== 'loaded') {\n      return {\n        collections: new Map(),\n        singletons: new Set()\n      };\n    }\n    return getChangedData(props.config, allTreeData.scoped.merged.data);\n  }, [allTreeData, props.config]);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    var _error$response, _repo4;\n    if ((error === null || error === void 0 || (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      if (isGitHubConfig(props.config)) {\n        window.location.href = `/api/keystatic/github/login?from=${router.params.map(encodeURIComponent).join('/')}`;\n      } else {\n        redirectToCloudAuth(router.params.map(encodeURIComponent).join('/'), props.config);\n      }\n    }\n    if (!((_repo4 = repo) !== null && _repo4 !== void 0 && _repo4.id) && error !== null && error !== void 0 && error.graphQLErrors.some(err => {\n      var _err$originalError, _err$originalError2;\n      return (err === null || err === void 0 || (_err$originalError = err.originalError) === null || _err$originalError === void 0 ? void 0 : _err$originalError.type) === 'NOT_FOUND' || (err === null || err === void 0 || (_err$originalError2 = err.originalError) === null || _err$originalError2 === void 0 ? void 0 : _err$originalError2.type) === 'FORBIDDEN';\n    })) {\n      window.location.href = `/api/keystatic/github/repo-not-found?from=${router.params.map(encodeURIComponent).join('/')}`;\n    }\n  }, [error, router, (_repo5 = repo) === null || _repo5 === void 0 ? void 0 : _repo5.id, props.config]);\n  const baseInfo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    var _repo$id, _repo6, _repo$isPrivate, _repo7;\n    return {\n      baseCommit: baseCommit || '',\n      repositoryId: (_repo$id = (_repo6 = repo) === null || _repo6 === void 0 ? void 0 : _repo6.id) !== null && _repo$id !== void 0 ? _repo$id : '',\n      isPrivate: (_repo$isPrivate = (_repo7 = repo) === null || _repo7 === void 0 ? void 0 : _repo7.isPrivate) !== null && _repo$isPrivate !== void 0 ? _repo$isPrivate : true\n    };\n  }, [baseCommit, (_repo8 = repo) === null || _repo8 === void 0 ? void 0 : _repo8.id, (_repo9 = repo) === null || _repo9 === void 0 ? void 0 : _repo9.isPrivate]);\n  const pullRequestNumber = currentBranchRef === null || currentBranchRef === void 0 || (_currentBranchRef$ass = currentBranchRef.associatedPullRequests.nodes) === null || _currentBranchRef$ass === void 0 || (_currentBranchRef$ass = _currentBranchRef$ass[0]) === null || _currentBranchRef$ass === void 0 ? void 0 : _currentBranchRef$ass.number;\n  const branchInfo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    var _repo$defaultBranchRe, _repo10, _repo$id2, _repo11, _repo$refs$nodes$map$, _repo12, _repo13, _repo14, _data$repository$owne, _data$repository, _data$repository$name, _data$repository2;\n    return {\n      defaultBranch: (_repo$defaultBranchRe = (_repo10 = repo) === null || _repo10 === void 0 || (_repo10 = _repo10.defaultBranchRef) === null || _repo10 === void 0 ? void 0 : _repo10.name) !== null && _repo$defaultBranchRe !== void 0 ? _repo$defaultBranchRe : '',\n      currentBranch: props.currentBranch,\n      baseCommit: baseCommit || '',\n      repositoryId: (_repo$id2 = (_repo11 = repo) === null || _repo11 === void 0 ? void 0 : _repo11.id) !== null && _repo$id2 !== void 0 ? _repo$id2 : '',\n      allBranches: (_repo$refs$nodes$map$ = (_repo12 = repo) === null || _repo12 === void 0 || (_repo12 = _repo12.refs) === null || _repo12 === void 0 || (_repo12 = _repo12.nodes) === null || _repo12 === void 0 ? void 0 : _repo12.map(x => x === null || x === void 0 ? void 0 : x.name).filter(emery__WEBPACK_IMPORTED_MODULE_1__.isDefined)) !== null && _repo$refs$nodes$map$ !== void 0 ? _repo$refs$nodes$map$ : [],\n      pullRequestNumber,\n      branchNameToId: new Map((_repo13 = repo) === null || _repo13 === void 0 || (_repo13 = _repo13.refs) === null || _repo13 === void 0 || (_repo13 = _repo13.nodes) === null || _repo13 === void 0 ? void 0 : _repo13.filter(emery__WEBPACK_IMPORTED_MODULE_1__.isDefined).map(x => [x.name, x.id])),\n      branchNameToBaseCommit: new Map((_repo14 = repo) === null || _repo14 === void 0 || (_repo14 = _repo14.refs) === null || _repo14 === void 0 || (_repo14 = _repo14.nodes) === null || _repo14 === void 0 ? void 0 : _repo14.flatMap(x => x !== null && x !== void 0 && x.target ? [[x.name, x.target.oid]] : [])),\n      mainOwner: (_data$repository$owne = data === null || data === void 0 || (_data$repository = data.repository) === null || _data$repository === void 0 ? void 0 : _data$repository.owner.login) !== null && _data$repository$owne !== void 0 ? _data$repository$owne : '',\n      mainRepo: (_data$repository$name = data === null || data === void 0 || (_data$repository2 = data.repository) === null || _data$repository2 === void 0 ? void 0 : _data$repository2.name) !== null && _data$repository$name !== void 0 ? _data$repository$name : ''\n    };\n  }, [(_repo15 = repo) === null || _repo15 === void 0 || (_repo15 = _repo15.defaultBranchRef) === null || _repo15 === void 0 ? void 0 : _repo15.name, (_repo16 = repo) === null || _repo16 === void 0 ? void 0 : _repo16.id, (_repo17 = repo) === null || _repo17 === void 0 || (_repo17 = _repo17.refs) === null || _repo17 === void 0 ? void 0 : _repo17.nodes, props.currentBranch, baseCommit, pullRequestNumber, data === null || data === void 0 || (_data$repository3 = data.repository) === null || _data$repository3 === void 0 ? void 0 : _data$repository3.owner.login, data === null || data === void 0 || (_data$repository4 = data.repository) === null || _data$repository4 === void 0 ? void 0 : _data$repository4.name]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(RepoWithWriteAccessContext.Provider, {\n    value: repo && (props.config.storage.kind === 'cloud' || 'viewerPermission' in repo && (_repo18 = repo) !== null && _repo18 !== void 0 && _repo18.viewerPermission && writePermissions.has(repo.viewerPermission)) ? {\n      name: repo.name,\n      owner: repo.owner.login\n    } : null,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AppShellErrorContext.Provider, {\n      value: error,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BranchInfoContext.Provider, {\n        value: branchInfo,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BaseInfoContext.Provider, {\n          value: baseInfo,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChangedContext.Provider, {\n            value: changedData,\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TreeContext.Provider, {\n              value: allTreeData,\n              children: props.children\n            })\n          })\n        })\n      })\n    })\n  });\n}\nconst AppShellErrorContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(undefined);\nconst BaseInfoContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  baseCommit: '',\n  repositoryId: '',\n  isPrivate: true\n});\nconst ChangedContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  collections: new Map(),\n  singletons: new Set()\n});\nconst TreeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  unscopedDefault: {\n    kind: 'loading'\n  },\n  scoped: {\n    current: {\n      kind: 'loading'\n    },\n    default: {\n      kind: 'loading'\n    },\n    merged: {\n      kind: 'loading'\n    }\n  }\n});\nfunction useTree() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(TreeContext).scoped;\n}\nfunction useCurrentUnscopedTree() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(TreeContext).unscopedDefault;\n}\nfunction useChanged() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ChangedContext);\n}\nfunction useBaseCommit() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BaseInfoContext).baseCommit;\n}\nfunction useIsRepoPrivate() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BaseInfoContext).isPrivate;\n}\nfunction useRepositoryId() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BaseInfoContext).repositoryId;\n}\nconst Ref_base = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  fragment Ref_base on Ref {\n    id\n    name\n    target {\n      __typename\n      id\n      oid\n      ... on Commit {\n        tree {\n          id\n          oid\n        }\n      }\n    }\n    associatedPullRequests(states: [OPEN], first: 1) {\n      nodes {\n        id\n        number\n      }\n    }\n  }\n`;\nconst BaseRepo = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  fragment Repo_base on Repository {\n    id\n    isPrivate\n    owner {\n      id\n      login\n    }\n    name\n    defaultBranchRef {\n      id\n      name\n    }\n    refs(refPrefix: \"refs/heads/\", first: 100) {\n      nodes {\n        ...Ref_base\n      }\n    }\n  }\n  ${Ref_base}\n`;\nconst CloudAppShellQuery = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  query CloudAppShell($name: String!, $owner: String!) {\n    repository(owner: $owner, name: $name) {\n      id\n      ...Repo_base\n    }\n  }\n  ${BaseRepo}\n`;\nconst Repo_ghDirect = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  fragment Repo_ghDirect on Repository {\n    id\n    ...Repo_base\n    viewerPermission\n  }\n  ${BaseRepo}\n`;\nconst Repo_primary = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  fragment Repo_primary on Repository {\n    id\n    ...Repo_ghDirect\n    forks(affiliations: [OWNER], first: 1) {\n      nodes {\n        ...Repo_ghDirect\n      }\n    }\n  }\n  ${Repo_ghDirect}\n`;\nconst GitHubAppShellQuery = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n  query GitHubAppShell($name: String!, $owner: String!) {\n    repository(owner: $owner, name: $name) {\n      id\n      ...Repo_primary\n    }\n    viewer {\n      ...SidebarFooter_viewer\n    }\n  }\n  ${Repo_primary}\n  ${SidebarFooter_viewer}\n`;\nconst treeCache = new lru_cache__WEBPACK_IMPORTED_MODULE_100__[\"default\"]({\n  max: 40\n});\nasync function hydrateTreeCacheWithEntries(entries) {\n  const data = {\n    entries: new Map(entries.map(entry => [entry.path, entry])),\n    tree: treeEntriesToTreeNodes(entries)\n  };\n  const sha = await treeSha(data.tree);\n  treeCache.set(sha, data);\n  return data;\n}\nfunction fetchGitHubTreeData(sha, config) {\n  const cached = treeCache.get(sha);\n  if (cached) return cached;\n  const promise = getAuth(config).then(auth => {\n    if (!auth) throw new Error('Not authorized');\n    return fetch(config.storage.kind === 'github' ? `https://api.github.com/repos/${serializeRepoConfig(config.storage.repo)}/git/trees/${sha}?recursive=1` : `${KEYSTATIC_CLOUD_API_URL}/v1/github/trees/${sha}`, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}`,\n        ...(config.storage.kind === 'cloud' ? KEYSTATIC_CLOUD_HEADERS : {})\n      }\n    }).then(x => x.json());\n  }).then(res => hydrateTreeCacheWithEntries(res.tree.map(({\n    url,\n    ...rest\n  }) => rest)));\n  treeCache.set(sha, promise);\n  return promise;\n}\nfunction useGitHubTreeData(sha, config) {\n  return useData((0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => sha ? fetchGitHubTreeData(sha, config) : LOADING, [sha, config]));\n}\nconst RepoWithWriteAccessContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nconst BranchInfoContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  currentBranch: '',\n  allBranches: [],\n  defaultBranch: '',\n  pullRequestNumber: undefined,\n  branchNameToId: new Map(),\n  branchNameToBaseCommit: new Map(),\n  mainOwner: '',\n  mainRepo: ''\n});\nfunction useBranchInfo() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BranchInfoContext);\n}\nfunction getChangedData(config, trees) {\n  var _config$collections, _config$singletons;\n  return {\n    collections: new Map(Object.keys((_config$collections = config.collections) !== null && _config$collections !== void 0 ? _config$collections : {}).map(collection => {\n      const currentBranch = new Map(getEntriesInCollectionWithTreeKey(config, collection, trees.current.tree).map(x => [x.slug, x.key]));\n      const defaultBranch = new Map(getEntriesInCollectionWithTreeKey(config, collection, trees.default.tree).map(x => [x.slug, x.key]));\n      const changed = new Set();\n      const added = new Set();\n      for (const [key, entry] of currentBranch) {\n        const defaultBranchEntry = defaultBranch.get(key);\n        if (defaultBranchEntry === undefined) {\n          added.add(key);\n          continue;\n        }\n        if (entry !== defaultBranchEntry) {\n          changed.add(key);\n        }\n      }\n      const removed = new Set([...defaultBranch.keys()].filter(key => !currentBranch.has(key)));\n      return [collection, {\n        removed,\n        added,\n        changed,\n        totalCount: currentBranch.size\n      }];\n    })),\n    singletons: new Set(Object.keys((_config$singletons = config.singletons) !== null && _config$singletons !== void 0 ? _config$singletons : {}).filter(singleton => {\n      var _getTreeNodeAtPath, _getTreeNodeAtPath2;\n      const singletonPath = getSingletonPath(config, singleton);\n      return ((_getTreeNodeAtPath = getTreeNodeAtPath(trees.current.tree, singletonPath)) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.entry.sha) !== ((_getTreeNodeAtPath2 = getTreeNodeAtPath(trees.default.tree, singletonPath)) === null || _getTreeNodeAtPath2 === void 0 ? void 0 : _getTreeNodeAtPath2.entry.sha);\n    }))\n  };\n}\n\nconst SIDE_PANEL_ID = 'keystatic-side-panel';\nconst MAIN_PANEL_ID = 'keystatic-main-panel';\n\nconst View = props => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n    height: \"100%\",\n    minHeight: 0,\n    minWidth: 0,\n    ...props\n  });\n};\nconst ScrollView = props => {\n  let {\n    isDisabled,\n    ...otherProps\n  } = props;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(View, {\n    \"data-scrollable\": isDisabled ? undefined : true,\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      '&[data-scrollable]': {\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch'\n      }\n    }),\n    ...otherProps\n  });\n};\n\n// Common\n// ----------------------------------------------------------------------------\n\n// Interface\n// ----------------------------------------------------------------------------\n\nconst NAVIGATION_DIVIDER_KEY = '---';\n\n// Storage\n// ----------------------------------------------------------------------------\n\n// ============================================================================\n// Functions\n// ============================================================================\n\nfunction config(config) {\n  return config;\n}\nfunction collection(collection) {\n  return collection;\n}\nfunction singleton(collection) {\n  return collection;\n}\n\n// Config context\n// -----------------------------------------------------------------------------\n\nconst ConfigContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useConfig() {\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ConfigContext);\n  if (!config) {\n    throw new Error('ConfigContext.Provider not found');\n  }\n  return config;\n}\n\n// Meta context\n// -----------------------------------------------------------------------------\n\nconst AppStateContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  basePath: '/keystatic'\n});\nfunction useAppState() {\n  const appState = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(AppStateContext);\n  if (!appState) {\n    throw new Error('AppStateContext.Provider not found');\n  }\n  return appState;\n}\n\n// Page context\n// -----------------------------------------------------------------------------\n\nconst ContentPanelContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)('mobile');\nconst ContentPanelProvider = ContentPanelContext.Provider;\nfunction useContentPanelSize() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ContentPanelContext);\n}\nfunction useContentPanelQuery(options) {\n  const sizes = ['mobile', 'tablet', 'desktop', 'wide'];\n  const size = useContentPanelSize();\n  const startIndex = 'above' in options ? sizes.indexOf(options.above) + 1 : 0;\n  const endIndex = 'below' in options ? sizes.indexOf(options.below) - 1 : sizes.length - 1;\n  const range = sizes.slice(startIndex, endIndex + 1);\n  return range.includes(size);\n}\n\n/** @private only used to initialize context */\nfunction useContentPanelState(ref) {\n  let [contentSize, setContentSize] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)('mobile');\n  const onResize = () => {\n    setContentSize(size => {\n      let contentPane = ref.current;\n      if (!contentPane) {\n        return size;\n      }\n      if (contentPane.offsetWidth >= _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpoints.wide) {\n        return 'wide';\n      }\n      if (contentPane.offsetWidth >= _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpoints.desktop) {\n        return 'desktop';\n      }\n      if (contentPane.offsetWidth >= _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpoints.tablet) {\n        return 'tablet';\n      }\n      return 'mobile';\n    });\n  };\n  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_101__.useResizeObserver)({\n    ref,\n    onResize\n  });\n  return contentSize;\n}\n\nfunction useNavItems() {\n  var _config$ui;\n  let {\n    basePath\n  } = useAppState();\n  let config = useConfig();\n  let stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  let changeMap = useChanged();\n  const collectionKeys = Object.keys(config.collections || {});\n  const singletonKeys = Object.keys(config.singletons || {});\n  const items = ((_config$ui = config.ui) === null || _config$ui === void 0 ? void 0 : _config$ui.navigation) || {\n    ...(!!collectionKeys.length && {\n      [stringFormatter.format('collections')]: collectionKeys\n    }),\n    ...(!!singletonKeys.length && {\n      [stringFormatter.format('singletons')]: singletonKeys\n    })\n  };\n  const options = {\n    basePath,\n    changeMap,\n    config\n  };\n  if (Array.isArray(items)) {\n    return items.map(key => populateItemData(key, options));\n  }\n  return Object.entries(items).map(([section, keys]) => ({\n    title: section,\n    children: keys.map(key => populateItemData(key, options))\n  }));\n}\nfunction populateItemData(key, options) {\n  let {\n    basePath,\n    changeMap,\n    config\n  } = options;\n\n  // divider\n  if (key === NAVIGATION_DIVIDER_KEY) {\n    return {\n      isDivider: true\n    };\n  }\n\n  // collection\n  if (config.collections && key in config.collections) {\n    const href = `${basePath}/collection/${encodeURIComponent(key)}`;\n    const changes = changeMap.collections.get(key);\n    const changed = changes ? changes.changed.size + changes.added.size + changes.removed.size : 0;\n    const label = config.collections[key].label;\n    return {\n      key,\n      href,\n      label,\n      changed,\n      entryCount: changes === null || changes === void 0 ? void 0 : changes.totalCount\n    };\n  }\n\n  // singleton\n  if (config.singletons && key in config.singletons) {\n    const href = `${basePath}/singleton/${encodeURIComponent(key)}`;\n    const changed = changeMap.singletons.has(key);\n    const label = config.singletons[key].label;\n    return {\n      key,\n      href,\n      label,\n      changed\n    };\n  }\n  throw new Error(`Unknown navigation key: \"${key}\".`);\n}\n\nfunction useBrand() {\n  var _config$ui, _config$ui2;\n  let {\n    colorScheme\n  } = (0,_keystar_ui_core__WEBPACK_IMPORTED_MODULE_84__.useProvider)();\n  let config = useConfig();\n  let prefersDark = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.useMediaQuery)('(prefers-color-scheme: dark)');\n  let brandMark = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ZapLogo, {});\n  let brandName = 'Keystatic';\n  if ((_config$ui = config.ui) !== null && _config$ui !== void 0 && (_config$ui = _config$ui.brand) !== null && _config$ui !== void 0 && _config$ui.mark) {\n    let BrandMark = config.ui.brand.mark;\n    let resolvedColorScheme = colorScheme === 'auto' ? prefersDark ? 'dark' : 'light' : colorScheme;\n    brandMark = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BrandMark, {\n      colorScheme: resolvedColorScheme\n    });\n  }\n  if ('repo' in config.storage) {\n    brandName = serializeRepoConfig(config.storage.repo);\n  }\n  if (config.cloud) {\n    brandName = config.cloud.project;\n  }\n  if ((_config$ui2 = config.ui) !== null && _config$ui2 !== void 0 && (_config$ui2 = _config$ui2.brand) !== null && _config$ui2 !== void 0 && _config$ui2.name) {\n    brandName = config.ui.brand.name;\n  }\n  return {\n    brandMark,\n    brandName\n  };\n}\nfunction ZapLogo() {\n  let id = 'brand-mark-gradient';\n  let size = 24;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"path\", {\n      d: \"M18 8L14 24L12 32L30 14L18 8Z\",\n      fill: \"currentColor\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"path\", {\n      d: \"M2 18L20 0L18 8L2 18Z\",\n      fill: \"currentColor\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"path\", {\n      d: \"M18 8L2 18L14 24L18 8Z\",\n      fill: `url(#${id})`\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"defs\", {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"linearGradient\", {\n        id: id,\n        x1: \"2\",\n        y1: \"18\",\n        x2: \"20\",\n        y2: \"14\",\n        gradientUnits: \"userSpaceOnUse\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"stop\", {\n          stopColor: \"currentColor\",\n          stopOpacity: \"0.2\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"stop\", {\n          offset: \"1\",\n          stopColor: \"currentColor\"\n        })]\n      })\n    })]\n  });\n}\n\nfunction BranchPicker() {\n  const {\n    allBranches,\n    currentBranch,\n    defaultBranch\n  } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BranchInfoContext);\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const router = useRouter();\n  const config = useConfig();\n  const branchPrefix = getBranchPrefix(config);\n  const items = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    let defaultItems = allBranches.map(name => ({\n      id: name,\n      name\n    }));\n    if (defaultBranch) {\n      return [{\n        id: defaultBranch,\n        name: defaultBranch,\n        description: stringFormatter.format('defaultBranch')\n      }, ...defaultItems.filter(i => i.name !== defaultBranch)];\n    }\n    return defaultItems;\n  }, [allBranches, defaultBranch, stringFormatter]);\n  const filteredBranches = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => items.filter(item => item.name === defaultBranch || !branchPrefix || item.name.startsWith(branchPrefix) || item.name === currentBranch), [branchPrefix, currentBranch, defaultBranch, items]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_47__.Combobox, {\n    \"aria-label\": stringFormatter.format('currentBranch'),\n    defaultItems: filteredBranches // use `defaultItems` so the component handles filtering\n    ,\n    loadingState: filteredBranches.length === 0 ? 'loading' : undefined,\n    selectedKey: currentBranch,\n    onSelectionChange: key => {\n      if (typeof key === 'string') {\n        router.push(router.href.replace(/\\/branch\\/[^/]+/, '/branch/' + encodeURIComponent(key)));\n      }\n    },\n    menuTrigger: \"focus\",\n    flex: true,\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_47__.Item, {\n      textValue: item.name,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_gitBranchIcon__WEBPACK_IMPORTED_MODULE_95__.gitBranchIcon\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        truncate: true,\n        children: item.name\n      }), 'description' in item && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        slot: \"description\",\n        children: item.description\n      })]\n    }, item.id)\n  });\n}\nfunction CreateBranchDialog(props) {\n  const config = useConfig();\n  const branchInfo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BranchInfoContext);\n  const isDefaultBranch = branchInfo.defaultBranch === branchInfo.currentBranch;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const [{\n    error,\n    fetching\n  }, createBranch] = useCreateBranchMutation();\n  const repositoryId = useRepositoryId();\n  const createBranchSubmitButtonId = 'create-branch-submit-button';\n  const [branchName, setBranchName] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)('');\n  const [baseBranch, setBaseBranch] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(branchInfo.defaultBranch);\n  const branchPrefix = getBranchPrefix(config);\n  const propsForBranchPrefix = branchPrefix ? {\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      '& input': {\n        paddingInlineStart: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xsmall\n      }\n    }),\n    startElement: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      alignItems: \"center\",\n      paddingStart: \"regular\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        color: \"neutralSecondary\",\n        children: branchPrefix\n      })\n    })\n  } : {};\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n    size: \"small\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: async event => {\n        var _result$data;\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        const fullBranchName = (branchPrefix !== null && branchPrefix !== void 0 ? branchPrefix : '') + branchName;\n        const name = `refs/heads/${fullBranchName}`;\n        const result = await createBranch({\n          input: {\n            name,\n            oid: branchInfo.branchNameToBaseCommit.get(baseBranch),\n            repositoryId\n          }\n        });\n        if ((_result$data = result.data) !== null && _result$data !== void 0 && (_result$data = _result$data.createRef) !== null && _result$data !== void 0 && _result$data.__typename) {\n          props.onCreate(fullBranchName);\n        }\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n        children: stringFormatter.format('newBranch')\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n        children: isDefaultBranch ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n          value: branchName,\n          onChange: setBranchName,\n          label: stringFormatter.format('branchName')\n          // description=\"Your new branch will be based on the currently checked out branch, which is the default branch for this repository.\"\n          ,\n          autoFocus: true,\n          errorMessage: prettyErrorForCreateBranchMutation(error),\n          ...propsForBranchPrefix\n        }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Grid, {\n          gap: \"xlarge\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n            label: stringFormatter.format('branchName'),\n            value: branchName,\n            onChange: setBranchName,\n            autoFocus: true,\n            errorMessage: prettyErrorForCreateBranchMutation(error),\n            ...propsForBranchPrefix\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_radio__WEBPACK_IMPORTED_MODULE_96__.RadioGroup, {\n            label: stringFormatter.format('basedOn'),\n            value: baseBranch,\n            onChange: setBaseBranch,\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_radio__WEBPACK_IMPORTED_MODULE_96__.Radio, {\n              value: branchInfo.defaultBranch,\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                children: [branchInfo.defaultBranch, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                  visuallyHidden: true,\n                  children: \".\"\n                })]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                slot: \"description\",\n                children: stringFormatter.format('theDefaultBranchInYourRepository')\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_radio__WEBPACK_IMPORTED_MODULE_96__.Radio, {\n              value: branchInfo.currentBranch,\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                children: [branchInfo.currentBranch, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                  visuallyHidden: true,\n                  children: \".\"\n                })]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                slot: \"description\",\n                children: stringFormatter.format('theCurrentlyCheckedOutBranch')\n              })]\n            })]\n          })]\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Footer, {\n        UNSAFE_style: {\n          justifyContent: 'flex-end'\n        },\n        children: fetching && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_63__.ProgressCircle, {\n          \"aria-labelledby\": createBranchSubmitButtonId,\n          isIndeterminate: true,\n          size: \"small\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          onPress: props.onDismiss,\n          isDisabled: fetching,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          isDisabled: fetching,\n          prominence: \"high\",\n          type: \"submit\",\n          id: createBranchSubmitButtonId,\n          children: stringFormatter.format('create')\n        })]\n      })]\n    })\n  });\n}\n\n// Data\n// -----------------------------------------------------------------------------\n\n// https://git-scm.com/docs/git-check-ref-format\nconst invalidAnywhere = [' ', '~', '^', ':', '*', '?', '[', '..', '@{', '\\\\'];\nconst invalidStart = ['.', '/'];\nconst invalidEnd = ['.', '/', '.lock'];\nfunction prettyErrorForCreateBranchMutation(error) {\n  if (!error) {\n    return undefined;\n  }\n  if (error.message.includes('is not a valid ref name')) {\n    let refnameMatch = error.message.match(/\"([^\"]+)\"/);\n    let branchname = refnameMatch ? refnameMatch[1].replace('refs/heads/', '') : '';\n\n    // start rules\n    for (let char of invalidStart) {\n      if (branchname.startsWith(char)) {\n        return `Cannot start with \"${char}\"`;\n      }\n    }\n\n    // end rules\n    for (let char of invalidEnd) {\n      if (branchname.endsWith(char)) {\n        return `Cannot end with \"${char}\"`;\n      }\n    }\n\n    // anywhere rules\n    let invalidMatches = invalidAnywhere.filter(c => branchname.includes(c));\n    if (invalidMatches.length > 0) {\n      let options = {\n        style: 'long',\n        type: 'conjunction'\n      };\n      let formatter = new Intl.ListFormat('en-US', options);\n      let list = invalidMatches.map(char => `\"${char}\"`);\n      return `Some characters are not allowed: ${formatter.format(list)}`;\n    }\n\n    // unknown\n    return 'Invalid branch name';\n  }\n  return error.message;\n}\nfunction useCreateBranchMutation() {\n  return (0,urql__WEBPACK_IMPORTED_MODULE_99__.useMutation)((0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n      mutation CreateBranch($input: CreateRefInput!) {\n        createRef(input: $input) {\n          __typename\n          ref {\n            ...Ref_base\n          }\n        }\n      }\n      ${Ref_base}\n    `);\n}\n\nconst ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  theme: 'auto',\n  setTheme: () => {\n    throw new Error('ThemeContext was not initialized.');\n  }\n});\nconst ThemeProvider = ThemeContext.Provider;\nconst STORAGE_KEY = 'keystatic-color-scheme';\n\n// only for initializing the provider, for consumption use `useThemeContext()`\nfunction useTheme() {\n  let [theme, setThemeValue] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => {\n    let storedValue = localStorage.getItem(STORAGE_KEY);\n    if (storedValue === 'light' || storedValue === 'dark') {\n      return storedValue;\n    }\n    return 'auto';\n  });\n  let setTheme = theme => {\n    localStorage.setItem(STORAGE_KEY, theme);\n    setThemeValue(theme);\n  };\n  return {\n    theme,\n    setTheme\n  };\n}\nfunction useThemeContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ThemeContext);\n}\n\nfunction focusWithPreviousSelection(editor) {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMRange(editor, editor.selection));\n  }\n  slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n}\nconst blockElementSpacing = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n  marginBlock: '0.75em',\n  '&:first-child': {\n    marginBlockStart: 0\n  },\n  '&:last-child': {\n    marginBlockEnd: 0\n  }\n});\nconst ForceValidationContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createContext(false);\nForceValidationContext.Provider;\n\n// this ensures that when changes happen, they are immediately shown\n// this stops the problem of a cursor resetting to the end when a change is made\n// because the changes are applied asynchronously\nfunction useElementWithSetNodes(editor, element) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n    element,\n    elementWithChanges: element\n  });\n  if (state.element !== element) {\n    setState({\n      element,\n      elementWithChanges: element\n    });\n  }\n  const elementRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(element);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    elementRef.current = element;\n  });\n  const setNodes = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(changesOrCallback => {\n    const currentElement = elementRef.current;\n    const changes = typeof changesOrCallback === 'function' ? changesOrCallback(currentElement) : changesOrCallback;\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, changes, {\n      at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, currentElement)\n    });\n    setState({\n      element: currentElement,\n      elementWithChanges: {\n        ...currentElement,\n        ...changes\n      }\n    });\n  }, [editor]);\n  return [state.elementWithChanges, setNodes];\n}\nfunction useEventCallback(callback) {\n  const callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(callback);\n  const cb = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((...args) => {\n    return callbackRef.current(...args);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    callbackRef.current = callback;\n  });\n  return cb;\n}\nfunction insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, nodes) {\n  var _pathRefForEmptyNodeA;\n  let pathRefForEmptyNodeAtCursor;\n  const entry = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: node => node.type === 'heading' || node.type === 'paragraph'\n  });\n  if (entry && slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(entry[0]) === '') {\n    pathRefForEmptyNodeAtCursor = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.pathRef(editor, entry[1]);\n  }\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, nodes);\n  let path = (_pathRefForEmptyNodeA = pathRefForEmptyNodeAtCursor) === null || _pathRefForEmptyNodeA === void 0 ? void 0 : _pathRefForEmptyNodeA.unref();\n  if (path) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n      at: path\n    });\n    // even though the selection is in the right place after the removeNodes\n    // for some reason the editor blurs so we need to focus it again\n    slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n  }\n}\n\nconst tableCellChildren = ['paragraph', 'code', 'heading', 'ordered-list', 'unordered-list', 'divider', 'image'];\nconst blockquoteChildren = [...tableCellChildren, 'table'];\nconst paragraphLike = [...blockquoteChildren, 'blockquote'];\nconst insideOfLayouts = [...paragraphLike, 'component-block'];\nfunction blockContainer(args) {\n  return {\n    kind: 'blocks',\n    allowedChildren: new Set(args.allowedChildren),\n    blockToWrapInlinesIn: args.allowedChildren[0],\n    invalidPositionHandleMode: args.invalidPositionHandleMode\n  };\n}\nfunction inlineContainer(args) {\n  return {\n    kind: 'inlines',\n    invalidPositionHandleMode: args.invalidPositionHandleMode\n  };\n}\nconst editorSchema = {\n  editor: blockContainer({\n    allowedChildren: [...insideOfLayouts, 'layout'],\n    invalidPositionHandleMode: 'move'\n  }),\n  layout: blockContainer({\n    allowedChildren: ['layout-area'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'layout-area': blockContainer({\n    allowedChildren: insideOfLayouts,\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  blockquote: blockContainer({\n    allowedChildren: blockquoteChildren,\n    invalidPositionHandleMode: 'move'\n  }),\n  paragraph: inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  code: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  divider: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  heading: inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'component-block': blockContainer({\n    allowedChildren: ['component-block-prop', 'component-inline-prop'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'component-inline-prop': inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'component-block-prop': blockContainer({\n    allowedChildren: insideOfLayouts,\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'ordered-list': blockContainer({\n    allowedChildren: ['list-item'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'unordered-list': blockContainer({\n    allowedChildren: ['list-item'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'list-item': blockContainer({\n    allowedChildren: ['list-item-content', 'ordered-list', 'unordered-list'],\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'list-item-content': inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  image: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  table: blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-head', 'table-body']\n  }),\n  'table-body': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-row']\n  }),\n  'table-row': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-cell']\n  }),\n  'table-cell': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: tableCellChildren\n  }),\n  'table-head': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-row']\n  })\n};\nconst inlineContainerTypes = new Set(Object.entries(editorSchema).filter(([, value]) => value.kind === 'inlines').map(([type]) => type));\nfunction isInlineContainer(node) {\n  return node.type !== undefined && inlineContainerTypes.has(node.type);\n}\nconst blockTypes = new Set(Object.keys(editorSchema).filter(x => x !== 'editor'));\nfunction isBlock(node) {\n  return blockTypes.has(node.type);\n}\n\n// to print the editor schema in Graphviz if you want to visualize it\n// function printEditorSchema(editorSchema: EditorSchema) {\n//   return `digraph G {\n//   concentrate=true;\n//   ${Object.keys(editorSchema)\n//     .map(key => {\n//       let val = editorSchema[key];\n//       if (val.kind === 'inlines') {\n//         return `\"${key}\" -> inlines`;\n//       }\n//       if (val.kind === 'blocks') {\n//         return `\"${key}\" -> {${[...val.allowedChildren].map(x => JSON.stringify(x)).join(' ')}}`;\n//       }\n//     })\n//     .join('\\n  ')}\n// }`;\n// }\n\nfunction getWholeDocumentFeaturesForChildField(editorDocumentFeatures, options) {\n  var _options$formatting, _options$formatting2, _options$formatting3, _options$formatting4, _options$formatting5, _options$formatting6, _options$formatting7;\n  const inlineMarksFromOptions = (_options$formatting = options.formatting) === null || _options$formatting === void 0 ? void 0 : _options$formatting.inlineMarks;\n  const inlineMarks = Object.fromEntries(Object.keys(editorDocumentFeatures.formatting.inlineMarks).map(_mark => {\n    const mark = _mark;\n    return [mark, inlineMarksFromOptions === 'inherit' || (inlineMarksFromOptions === null || inlineMarksFromOptions === void 0 ? void 0 : inlineMarksFromOptions[mark]) === 'inherit' ? editorDocumentFeatures.formatting.inlineMarks[mark] : false];\n  }));\n  const headingLevels = (_options$formatting2 = options.formatting) === null || _options$formatting2 === void 0 ? void 0 : _options$formatting2.headingLevels;\n  return {\n    formatting: {\n      inlineMarks,\n      softBreaks: ((_options$formatting3 = options.formatting) === null || _options$formatting3 === void 0 ? void 0 : _options$formatting3.softBreaks) === 'inherit' && editorDocumentFeatures.formatting.softBreaks,\n      alignment: {\n        center: editorDocumentFeatures.formatting.alignment.center && ((_options$formatting4 = options.formatting) === null || _options$formatting4 === void 0 ? void 0 : _options$formatting4.alignment) === 'inherit',\n        end: editorDocumentFeatures.formatting.alignment.end && ((_options$formatting5 = options.formatting) === null || _options$formatting5 === void 0 ? void 0 : _options$formatting5.alignment) === 'inherit'\n      },\n      blockTypes: ((_options$formatting6 = options.formatting) === null || _options$formatting6 === void 0 ? void 0 : _options$formatting6.blockTypes) === 'inherit' ? editorDocumentFeatures.formatting.blockTypes : {\n        blockquote: false,\n        code: false\n      },\n      headings: headingLevels === 'inherit' ? editorDocumentFeatures.formatting.headings : {\n        levels: headingLevels ? editorDocumentFeatures.formatting.headings.levels.filter(level => headingLevels.includes(level)) : [],\n        schema: editorDocumentFeatures.formatting.headings.schema\n      },\n      listTypes: ((_options$formatting7 = options.formatting) === null || _options$formatting7 === void 0 ? void 0 : _options$formatting7.listTypes) === 'inherit' ? editorDocumentFeatures.formatting.listTypes : {\n        ordered: false,\n        unordered: false\n      }\n    },\n    dividers: options.dividers === 'inherit' ? editorDocumentFeatures.dividers : false,\n    images: options.images === 'inherit' && editorDocumentFeatures.images,\n    layouts: [],\n    links: options.links === 'inherit' && editorDocumentFeatures.links,\n    tables: options.tables === 'inherit' && editorDocumentFeatures.tables\n  };\n}\nfunction getDocumentFeaturesForChildField(editorDocumentFeatures, options) {\n  var _options$formatting8, _options$formatting10, _options$formatting11, _options$formatting12, _options$formatting13, _options$formatting14;\n  // an important note for this: normalization based on document features\n  // is done based on the document features returned here\n  // and the editor document features\n  // so the result for any given child prop will be the things that are\n  // allowed by both these document features\n  // AND the editor document features\n  const inlineMarksFromOptions = (_options$formatting8 = options.formatting) === null || _options$formatting8 === void 0 ? void 0 : _options$formatting8.inlineMarks;\n  const inlineMarks = inlineMarksFromOptions === 'inherit' ? 'inherit' : Object.fromEntries(Object.keys(editorDocumentFeatures.formatting.inlineMarks).map(mark => {\n    return [mark, !!(inlineMarksFromOptions || {})[mark]];\n  }));\n  if (options.kind === 'inline') {\n    var _options$formatting9;\n    return {\n      kind: 'inline',\n      inlineMarks,\n      documentFeatures: {\n        links: options.links === 'inherit'\n      },\n      softBreaks: ((_options$formatting9 = options.formatting) === null || _options$formatting9 === void 0 ? void 0 : _options$formatting9.softBreaks) === 'inherit'\n    };\n  }\n  const headingLevels = (_options$formatting10 = options.formatting) === null || _options$formatting10 === void 0 ? void 0 : _options$formatting10.headingLevels;\n  return {\n    kind: 'block',\n    inlineMarks,\n    softBreaks: ((_options$formatting11 = options.formatting) === null || _options$formatting11 === void 0 ? void 0 : _options$formatting11.softBreaks) === 'inherit',\n    documentFeatures: {\n      layouts: [],\n      dividers: options.dividers === 'inherit' ? editorDocumentFeatures.dividers : false,\n      formatting: {\n        alignment: ((_options$formatting12 = options.formatting) === null || _options$formatting12 === void 0 ? void 0 : _options$formatting12.alignment) === 'inherit' ? editorDocumentFeatures.formatting.alignment : {\n          center: false,\n          end: false\n        },\n        blockTypes: ((_options$formatting13 = options.formatting) === null || _options$formatting13 === void 0 ? void 0 : _options$formatting13.blockTypes) === 'inherit' ? editorDocumentFeatures.formatting.blockTypes : {\n          blockquote: false,\n          code: false\n        },\n        headings: headingLevels === 'inherit' ? editorDocumentFeatures.formatting.headings : {\n          levels: headingLevels ? editorDocumentFeatures.formatting.headings.levels.filter(level => headingLevels.includes(level)) : [],\n          schema: editorDocumentFeatures.formatting.headings.schema\n        },\n        listTypes: ((_options$formatting14 = options.formatting) === null || _options$formatting14 === void 0 ? void 0 : _options$formatting14.listTypes) === 'inherit' ? editorDocumentFeatures.formatting.listTypes : {\n          ordered: false,\n          unordered: false\n        }\n      },\n      links: options.links === 'inherit',\n      images: options.images === 'inherit' ? editorDocumentFeatures.images : false,\n      tables: options.tables === 'inherit'\n    },\n    componentBlocks: options.componentBlocks === 'inherit'\n  };\n}\nfunction getSchemaAtPropPathInner(path, value, schema) {\n  // because we're checking the length here\n  // the non-null asserts on shift below are fine\n  if (path.length === 0) {\n    return schema;\n  }\n  if (schema.kind === 'child' || schema.kind === 'form') {\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    const key = path.shift();\n    if (key === 'discriminant') {\n      return getSchemaAtPropPathInner(path, value.discriminant, schema.discriminant);\n    }\n    if (key === 'value') {\n      const propVal = schema.values[value.discriminant];\n      return getSchemaAtPropPathInner(path, value.value, propVal);\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    const key = path.shift();\n    return getSchemaAtPropPathInner(path, value[key], schema.fields[key]);\n  }\n  if (schema.kind === 'array') {\n    const index = path.shift();\n    return getSchemaAtPropPathInner(path, value[index], schema.element);\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction getSchemaAtPropPath(path, value, props) {\n  return getSchemaAtPropPathInner([...path], value, {\n    kind: 'object',\n    fields: props\n  });\n}\nfunction getAncestorSchemas(rootSchema, path, value) {\n  const ancestors = [];\n  const currentPath = [...path];\n  let currentProp = rootSchema;\n  let currentValue = value;\n  while (currentPath.length) {\n    ancestors.push(currentProp);\n    const key = currentPath.shift(); // this code only runs when path.length is truthy so this non-null assertion is fine\n    if (currentProp.kind === 'array') {\n      currentProp = currentProp.element;\n      currentValue = currentValue[key];\n    } else if (currentProp.kind === 'conditional') {\n      currentProp = currentProp.values[value.discriminant];\n      currentValue = currentValue.value;\n    } else if (currentProp.kind === 'object') {\n      currentValue = currentValue[key];\n      currentProp = currentProp.fields[key];\n    } else if (currentProp.kind === 'child' || currentProp.kind === 'form') {\n      throw new Error(`unexpected prop \"${key}\"`);\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(currentProp);\n    }\n  }\n  return ancestors;\n}\nfunction getPlaceholderTextForPropPath(propPath, fields, formProps) {\n  const field = getSchemaAtPropPath(propPath, formProps, fields);\n  if ((field === null || field === void 0 ? void 0 : field.kind) === 'child' && (field.options.kind === 'block' && field.options.editIn !== 'modal' || field.options.kind === 'inline')) {\n    return field.options.placeholder;\n  }\n  return '';\n}\nfunction cloneDescendent(node) {\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node)) {\n    return {\n      ...node,\n      children: node.children.map(cloneDescendent)\n    };\n  }\n  return {\n    ...node\n  };\n}\n\nconst allMarks = ['bold', 'italic', 'underline', 'strikethrough', 'code', 'superscript', 'subscript', 'keyboard'];\nconst isElementActive = (editor, format) => {\n  const [match] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n  return !!match;\n};\nfunction clearFormatting(editor) {\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n    match: node => node.type === 'heading' || node.type === 'blockquote' || node.type === 'code'\n  });\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, allMarks, {\n    match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText\n  });\n}\nfunction moveChildren(editor, parent, to, shouldMoveNode = () => true) {\n  const parentPath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.isPath(parent) ? parent : parent[1];\n  const parentNode = slate__WEBPACK_IMPORTED_MODULE_104__.Path.isPath(parent) ? slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, parentPath) : parent[0];\n  if (!isBlock(parentNode)) return;\n  for (let i = parentNode.children.length - 1; i >= 0; i--) {\n    if (shouldMoveNode(parentNode.children[i], i)) {\n      const childPath = [...parentPath, i];\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n        at: childPath,\n        to\n      });\n    }\n  }\n}\n\n/**\n * This is equivalent to Editor.after except that it ignores points that have no content\n * like the point in a void text node, an empty text node and the last point in a text node\n */\n// TODO: this would probably break if you were trying to get the last point in the editor?\nfunction EditorAfterButIgnoringingPointsWithNoContent(editor, at, {\n  distance = 1\n} = {}) {\n  const anchor = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.point(editor, at, {\n    edge: 'end'\n  });\n  const focus = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, []);\n  const range = {\n    anchor,\n    focus\n  };\n  let d = 0;\n  let target;\n  for (const p of slate__WEBPACK_IMPORTED_MODULE_104__.Editor.positions(editor, {\n    at: range\n  })) {\n    if (d > distance) {\n      break;\n    }\n\n    // this is the important change\n    const node = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, p.path);\n    if (node.text.length === p.offset) {\n      continue;\n    }\n    if (d !== 0) {\n      target = p;\n    }\n    d++;\n  }\n  return target;\n}\nfunction nodeTypeMatcher(...args) {\n  if (args.length === 1) {\n    const type = args[0];\n    return node => node.type === type;\n  }\n  const set = new Set(args);\n  return node => typeof node.type === 'string' && set.has(node.type);\n}\nfunction getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks) {\n  const ancestorComponentProp = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: nodeTypeMatcher('component-block-prop', 'component-inline-prop')\n  });\n  if (ancestorComponentProp) {\n    const propPath = ancestorComponentProp[0].propPath;\n    const ancestorComponent = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, ancestorComponentProp[1]);\n    if (ancestorComponent[0].type === 'component-block') {\n      const component = ancestorComponent[0].component;\n      const componentBlock = componentBlocks[component];\n      if (componentBlock && propPath) {\n        const childField = getSchemaAtPropPath(propPath, ancestorComponent[0].props, componentBlock.schema);\n        if ((childField === null || childField === void 0 ? void 0 : childField.kind) === 'child') {\n          return getDocumentFeaturesForChildField(editorDocumentFeatures, childField.options);\n        }\n      }\n    }\n  }\n}\n\nconst BlockPopoverContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useBlockPopoverContext() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BlockPopoverContext);\n  if (!context) {\n    throw new Error('useBlockPopoverContext must be used within a BlockPopoverTrigger');\n  }\n  return context;\n}\nconst typeMatcher = nodeTypeMatcher('code', 'component-block', 'image', 'layout', 'link', 'table', 'heading');\nconst ActiveBlockPopoverContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(undefined);\nfunction useActiveBlockPopover() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ActiveBlockPopoverContext);\n}\nfunction ActiveBlockPopoverProvider(props) {\n  const nodeWithPopover = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(props.editor, {\n    match: typeMatcher\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ActiveBlockPopoverContext.Provider, {\n    value: nodeWithPopover === null || nodeWithPopover === void 0 ? void 0 : nodeWithPopover[0],\n    children: props.children\n  });\n}\nconst BlockPopoverTrigger = ({\n  children,\n  element\n}) => {\n  const [trigger, popover] = children;\n  const activePopoverElement = useActiveBlockPopover();\n  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const state = (0,_react_stately_overlays__WEBPACK_IMPORTED_MODULE_105__.useOverlayTriggerState)({\n    isOpen: activePopoverElement === element\n  });\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => ({\n    state,\n    triggerRef\n  }), [state, triggerRef]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverContext.Provider, {\n    value: context,\n    children: [/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.cloneElement)(trigger, {\n      ref: triggerRef\n    }), popover]\n  });\n};\nfunction BlockPopover(props) {\n  const {\n    state\n  } = useBlockPopoverContext();\n  let wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  return (\n    /*#__PURE__*/\n    /* @ts-expect-error FIXME: resolve ref inconsistencies */\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_24__.Overlay, {\n      isOpen: state.isOpen,\n      nodeRef: wrapperRef,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopoverWrapper, {\n        wrapperRef: wrapperRef,\n        ...props\n      })\n    })\n  );\n}\nconst BlockPopoverWrapper = ({\n  children,\n  placement: preferredPlacement = 'bottom'\n}) => {\n  let popoverRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  let {\n    state,\n    triggerRef\n  } = useBlockPopoverContext();\n  let {\n    placement,\n    popoverProps\n  } = useBlockPopover({\n    isNonModal: true,\n    isKeyboardDismissDisabled: false,\n    placement: preferredPlacement,\n    triggerRef,\n    popoverRef\n  }, state);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    ref: popoverRef,\n    ...popoverProps,\n    \"data-open\": state.isOpen,\n    \"data-placement\": placement,\n    contentEditable: false,\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      backgroundColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.background.surface,\n      // TODO: component token?\n      borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.medium,\n      // TODO: component token?\n      border: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.border.regular} solid ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.border.emphasis}`,\n      boxSizing: 'content-box',\n      // resolves measurement/scroll issues related to border\n      // boxShadow: `0 0 0 ${tokenSchema.size.border.regular} ${tokenSchema.color.border.emphasis}`,\n      minHeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.element.regular,\n      minWidth: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.element.regular,\n      opacity: 0,\n      outline: 0,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      // use filter:drop-shadow instead of box-shadow so the arrow is included\n      filter: `drop-shadow(0 1px 4px ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.shadow.regular})`,\n      // filter bug in safari: https://stackoverflow.com/questions/56478925/safari-drop-shadow-filter-remains-visible-even-with-hidden-element\n      willChange: 'filter',\n      userSelect: 'none',\n      // placement\n      '&[data-placement=\"top\"]': {\n        marginBottom: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular,\n        transform: `translateY(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular})`\n      },\n      '&[data-placement=\"bottom\"]': {\n        marginTop: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular,\n        transform: `translateY(calc(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular} * -1))`\n      },\n      '&[data-open=\"true\"]': {\n        opacity: 1,\n        transform: `translateX(0) translateY(0)`,\n        // enter animation\n        transition: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.transition)(['opacity', 'transform'], {\n          easing: 'easeOut'\n        })\n      }\n    }),\n    children: typeof children === 'function' ? children(state.close) : children\n  });\n};\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nfunction useBlockPopover(props, state) {\n  var _triggerRef$current2;\n  let {\n    triggerRef,\n    popoverRef,\n    isNonModal,\n    isKeyboardDismissDisabled,\n    ...otherProps\n  } = props;\n  let [isSticky, setSticky] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  let {\n    overlayProps,\n    underlayProps\n  } = (0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__.useOverlay)({\n    isOpen: state.isOpen,\n    onClose: state.close,\n    shouldCloseOnBlur: true,\n    isDismissable: !isNonModal,\n    isKeyboardDismissDisabled: false\n  }, popoverRef);\n\n  // stick the popover to the bottom of the viewport instead of flipping\n  const containerPadding = 8;\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (state.isOpen) {\n      const checkForStickiness = () => {\n        var _popoverRef$current, _triggerRef$current;\n        const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n        let popoverRect = (_popoverRef$current = popoverRef.current) === null || _popoverRef$current === void 0 ? void 0 : _popoverRef$current.getBoundingClientRect();\n        let triggerRect = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getBoundingClientRect();\n        if (popoverRect && triggerRect) {\n          setSticky(triggerRect.bottom + popoverRect.height + containerPadding * 2 > vh && triggerRect.top < vh);\n        }\n      };\n      checkForStickiness();\n      window.addEventListener('scroll', checkForStickiness);\n      return () => {\n        checkForStickiness();\n        window.removeEventListener('scroll', checkForStickiness);\n      };\n    }\n  }, [popoverRef, triggerRef, state.isOpen]);\n  let {\n    overlayProps: positionProps,\n    arrowProps,\n    placement,\n    updatePosition\n  } = (0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__.useOverlayPosition)({\n    ...otherProps,\n    containerPadding,\n    shouldFlip: false,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: undefined\n  });\n\n  // force update position when the trigger changes\n  let previousBoundingRect = usePrevious((_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getBoundingClientRect());\n  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_101__.useLayoutEffect)(() => {\n    if (previousBoundingRect) {\n      var _triggerRef$current3;\n      const currentBoundingRect = (_triggerRef$current3 = triggerRef.current) === null || _triggerRef$current3 === void 0 ? void 0 : _triggerRef$current3.getBoundingClientRect();\n      if (currentBoundingRect) {\n        const hasChanged = previousBoundingRect.height !== currentBoundingRect.height || previousBoundingRect.width !== currentBoundingRect.width || previousBoundingRect.x !== currentBoundingRect.x || previousBoundingRect.y !== currentBoundingRect.y;\n        if (hasChanged) {\n          updatePosition();\n        }\n      }\n    }\n  }, [previousBoundingRect, triggerRef, updatePosition]);\n\n  // make sure popovers are below modal dialogs and their blanket\n  if (positionProps.style) {\n    positionProps.style.zIndex = 1;\n  }\n\n  // switching to position: fixed will undoubtedly bite me later, but this hack works for now\n  if (isSticky) {\n    positionProps.style = {\n      ...positionProps.style,\n      // @ts-expect-error\n      maxHeight: null,\n      position: 'fixed',\n      // @ts-expect-error\n      top: null,\n      bottom: containerPadding\n    };\n  }\n  return {\n    arrowProps,\n    placement,\n    popoverProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_101__.mergeProps)(overlayProps, positionProps),\n    underlayProps,\n    updatePosition\n  };\n}\nfunction usePrevious(value) {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst BlockWrapper = props => {\n  let {\n    attributes,\n    children,\n    draggable = false\n  } = props;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    draggable: draggable,\n    className: blockElementSpacing,\n    ...attributes,\n    children: children\n  });\n};\n\nconst NotEditable = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function NotEditable({\n  className,\n  ...props\n}, ref) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    ...props,\n    ref: ref,\n    className: [(0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      userSelect: 'none',\n      whiteSpace: 'initial'\n    }), className].join(' '),\n    contentEditable: false\n  });\n});\n\nconst ToolbarSeparator = () => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Divider, {\n    orientation: \"vertical\",\n    flexShrink: 0\n  });\n};\n\nfunction parseImageData(data) {\n  try {\n    const parsed = JSON.parse(data);\n    if (typeof parsed === 'object' && parsed !== null && 'src' in parsed && typeof parsed.src === 'string') {\n      return {\n        src: parsed.src,\n        alt: 'alt' in parsed && typeof parsed.alt === 'string' ? parsed.alt : '',\n        height: 'height' in parsed && typeof parsed.height === 'number' && Number.isInteger(parsed.height) ? parsed.height : undefined,\n        width: 'width' in parsed && typeof parsed.width === 'number' && Number.isInteger(parsed.width) ? parsed.width : undefined\n      };\n    }\n  } catch (err) {}\n  const pattern = /^\\s*!\\[(.*)\\]\\(([a-z0-9_\\-/:.]+)\\)\\s*$/;\n  const match = data.match(pattern);\n  if (match) {\n    return {\n      src: match[2],\n      alt: match[1]\n    };\n  }\n  return {\n    src: data,\n    alt: ''\n  };\n}\nfunction useImageDimensions(src) {\n  const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({});\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!src || !isValidURL$1(src)) {\n      setDimensions({});\n      return;\n    }\n    let shouldSet = true;\n    loadImageDimensions(src).then(dimensions => {\n      if (shouldSet) setDimensions(dimensions);\n    });\n    return () => {\n      shouldSet = false;\n    };\n  }, [src]);\n  return dimensions;\n}\nfunction loadImageDimensions(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => {\n      resolve({\n        width: img.width,\n        height: img.height\n      });\n    };\n    img.onerror = () => {\n      reject();\n    };\n    img.src = url;\n  });\n}\nconst imageDataSchema = zod__WEBPACK_IMPORTED_MODULE_98__.z.object({\n  src: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n  alt: zod__WEBPACK_IMPORTED_MODULE_98__.z.string(),\n  width: zod__WEBPACK_IMPORTED_MODULE_98__.z.number(),\n  height: zod__WEBPACK_IMPORTED_MODULE_98__.z.number()\n});\nasync function loadImageData(url, config) {\n  const auth = getCloudAuth(config);\n  if (auth) {\n    const res = await fetch(`${KEYSTATIC_CLOUD_API_URL}/v1/image?${new URLSearchParams({\n      url\n    })}`, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}`,\n        ...KEYSTATIC_CLOUD_HEADERS\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      const parsed = imageDataSchema.safeParse(data);\n      if (parsed.success) {\n        return parsed.data;\n      }\n    }\n  }\n  return loadImageDimensions(url).then(dimensions => ({\n    src: url,\n    alt: '',\n    ...dimensions\n  }));\n}\nfunction ImageDimensionsInput(props) {\n  const dimensions = useImageDimensions(props.src);\n  const [constrainProportions, setConstrainProportions] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(true);\n  const revertLabel = `Revert to original (${dimensions.width} × ${dimensions.height})`;\n  const dimensionsMatchOriginal = dimensions.width === props.image.width && dimensions.height === props.image.height;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n    gap: \"regular\",\n    alignItems: \"end\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_57__.NumberField, {\n      label: \"Width\",\n      width: \"scale.1600\",\n      formatOptions: {\n        maximumFractionDigits: 0\n      },\n      value: props.image.width,\n      onChange: width => {\n        if (constrainProportions) {\n          props.onChange({\n            width,\n            height: Math.round(width / getAspectRatio(props.image))\n          });\n        } else {\n          props.onChange({\n            width\n          });\n        }\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ToggleButton, {\n        isSelected: constrainProportions,\n        \"aria-label\": \"Constrain proportions\",\n        prominence: \"low\",\n        onPress: () => {\n          setConstrainProportions(state => !state);\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: constrainProportions ? _keystar_ui_icon_icons_link2Icon__WEBPACK_IMPORTED_MODULE_64__.link2Icon : _keystar_ui_icon_icons_link2OffIcon__WEBPACK_IMPORTED_MODULE_65__.link2OffIcon\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        children: \"Constrain proportions\"\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_57__.NumberField, {\n      label: \"Height\",\n      width: \"scale.1600\",\n      formatOptions: {\n        maximumFractionDigits: 0\n      },\n      value: props.image.height,\n      onChange: height => {\n        if (constrainProportions) {\n          props.onChange({\n            height,\n            width: Math.round(height * getAspectRatio(props.image))\n          });\n        } else {\n          props.onChange({\n            height\n          });\n        }\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        \"aria-label\": revertLabel,\n        isDisabled: dimensionsMatchOriginal || !dimensions.width || !dimensions.height,\n        onPress: () => {\n          props.onChange({\n            height: dimensions.height,\n            width: dimensions.width\n          });\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_undo2Icon__WEBPACK_IMPORTED_MODULE_67__.undo2Icon\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        maxWidth: \"100%\",\n        children: revertLabel\n      })]\n    })]\n  });\n}\nconst emptyImageData = {\n  src: '',\n  alt: ''\n};\nfunction ImageDialog$1(props) {\n  const {\n    image,\n    onCancel,\n    onChange,\n    onClose\n  } = props;\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(image !== null && image !== void 0 ? image : emptyImageData);\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(image ? 'good' : '');\n  const formId = (0,_keystar_ui_utils__WEBPACK_IMPORTED_MODULE_68__.useId)();\n  const imageLibraryURL = useImageLibraryURL();\n  const onPaste = event => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    setState(parseImageData(text));\n  };\n  const config = useConfig();\n  const hasSetFields = !!(state.alt || state.width || state.height);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!state.src) {\n      setStatus('');\n      return;\n    }\n    if (!isValidURL$1(state.src)) {\n      return;\n    }\n    if (hasSetFields) {\n      setStatus('good');\n      return;\n    }\n    setStatus('loading');\n    loadImageData(state.src, config).then(newData => {\n      setState(state => ({\n        ...state,\n        ...newData\n      }));\n      setStatus('good');\n    }).catch(() => {\n      setStatus('error');\n    });\n  }, [config, hasSetFields, state.src]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n      children: \"Cloud image\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.VStack, {\n        elementType: \"form\",\n        id: formId,\n        gap: \"xlarge\",\n        onSubmit: e => {\n          e.preventDefault();\n          if (status !== 'good') return;\n          onChange(state);\n          onClose();\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n          label: \"Image URL\",\n          autoFocus: true,\n          onPaste: onPaste,\n          onKeyDown: e => {\n            if (e.code === 'Backspace' || e.code === 'Delete') {\n              setState(emptyImageData);\n            } else {\n              e.continuePropagation();\n            }\n          },\n          value: state.src,\n          description: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            children: [\"Copy an image URL from the\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_62__.TextLink, {\n              prominence: \"high\",\n              href: imageLibraryURL,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: \"Image Library\"\n            }), ' ', \"and paste it into this field.\"]\n          }),\n          endElement: status === 'loading' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n            height: \"element.regular\",\n            width: \"element.regular\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_63__.ProgressCircle, {\n              size: \"small\",\n              \"aria-label\": \"Checking\\u2026\",\n              isIndeterminate: true\n            })\n          }) : state.src ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ClearButton, {\n            onPress: () => setState(emptyImageData),\n            preventFocus: true\n          }) : null\n        }), status === 'good' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextArea, {\n            label: \"Alt text\",\n            value: state.alt,\n            onChange: alt => setState(state => ({\n              ...state,\n              alt\n            }))\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageDimensionsInput, {\n            src: state.src,\n            image: state,\n            onChange: dimensions => {\n              setState(state => ({\n                ...state,\n                ...dimensions\n              }));\n            }\n          })]\n        }) : null]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n        onPress: onCancel,\n        children: \"Cancel\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n        prominence: \"high\",\n        type: \"submit\",\n        form: formId,\n        isDisabled: status !== 'good',\n        children: image ? 'Done' : 'Insert'\n      })]\n    })]\n  });\n}\nfunction Placeholder$1(props) {\n  const state = (0,_react_stately_overlays__WEBPACK_IMPORTED_MODULE_105__.useOverlayTriggerState)({\n    defaultOpen: false\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (props.selected) {\n      state.open();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.selected]);\n  const closeAndCleanup = () => {\n    state.close();\n    props.onRemove();\n  };\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(NotEditable, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      alignItems: \"center\",\n      backgroundColor: \"surface\",\n      borderRadius: \"regular\",\n      gap: \"regular\",\n      height: \"element.large\",\n      paddingX: \"large\",\n      onClick: () => state.open(),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_55__.imageIcon\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        children: [\"Cloud image\", state.isOpen ? '' : '(click to configure)']\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: closeAndCleanup,\n      children: state.isOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageDialog$1, {\n        onChange: props.onChange,\n        onCancel: closeAndCleanup,\n        onClose: state.close\n      })\n    })]\n  });\n}\nfunction ImagePreview({\n  image,\n  onChange,\n  onRemove,\n  selected\n}) {\n  const maxHeight = 368; // size.scale.4600 — TODO: it'd be nice to get this from some token artefact\n  const maxWidth = 734; // roughly the max width that an editor container will allow\n\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(NotEditable, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.VStack, {\n        backgroundColor: selected ? 'accent' : 'surface',\n        borderRadius: \"medium\",\n        border: selected ? 'color.alias.borderFocused' : 'neutral',\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          backgroundColor: \"canvas\",\n          justifyContent: \"center\",\n          UNSAFE_style: {\n            maxHeight\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"img\", {\n            alt: image.alt,\n            src: imageWithTransforms({\n              source: image.src,\n              // 2x for retina etc.\n              height: maxHeight * 2,\n              width: maxWidth * 2\n            }),\n            style: {\n              objectFit: 'contain'\n            }\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n          padding: \"large\",\n          gap: \"xlarge\",\n          borderTop: selected ? 'color.alias.borderFocused' : 'neutral',\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.VStack, {\n            flex: \"1\",\n            gap: \"medium\",\n            justifyContent: \"center\",\n            children: [image.alt ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n              truncate: 2,\n              children: image.alt\n            }) : null, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n              color: \"neutralTertiary\",\n              size: \"small\",\n              children: [image.width, \" \\xD7 \", image.height]\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n            gap: \"regular\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogTrigger, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                    src: _keystar_ui_icon_icons_pencilIcon__WEBPACK_IMPORTED_MODULE_66__.pencilIcon\n                  })\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                  children: \"Edit Image Options\"\n                })]\n              }), onClose => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageDialog$1, {\n                image: image,\n                onChange: onChange,\n                onCancel: onClose,\n                onClose: onClose\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                onPress: onRemove,\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                  src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                children: \"Remove Image\"\n              })]\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\nfunction CloudImagePreview(props) {\n  var _props$fields$width$v, _props$fields$height$;\n  const selected = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSelected)();\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  if (!props.fields.src.value) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Placeholder$1, {\n      onChange: props.onChange,\n      onRemove: () => {\n        focusWithPreviousSelection(editor);\n        props.onRemove();\n      },\n      selected: selected\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImagePreview, {\n    image: {\n      src: props.fields.src.value,\n      alt: props.fields.alt.value,\n      width: (_props$fields$width$v = props.fields.width.value) !== null && _props$fields$width$v !== void 0 ? _props$fields$width$v : undefined,\n      height: (_props$fields$height$ = props.fields.height.value) !== null && _props$fields$height$ !== void 0 ? _props$fields$height$ : undefined\n    },\n    onChange: props.onChange,\n    onRemove: props.onRemove,\n    selected: selected\n  });\n}\nfunction CloudImagePreviewForNewEditor(props) {\n  var _props$value$width, _props$value$height;\n  if (!props.value.src) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Placeholder$1\n    // @ts-ignore\n    , {\n      onChange: props.onChange,\n      onRemove: props.onRemove,\n      selected: props.isSelected\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImagePreview, {\n    image: {\n      src: props.value.src,\n      alt: props.value.alt,\n      width: (_props$value$width = props.value.width) !== null && _props$value$width !== void 0 ? _props$value$width : undefined,\n      height: (_props$value$height = props.value.height) !== null && _props$value$height !== void 0 ? _props$value$height : undefined\n    }\n    // @ts-ignore\n    ,\n    onChange: props.onChange,\n    onRemove: props.onRemove,\n    selected: props.isSelected\n  });\n}\n\n// Utils\n// -----------------------------------------------------------------------------\n\nfunction imageWithTransforms(options) {\n  let {\n    fit = 'scale-down',\n    source,\n    height,\n    width\n  } = options;\n  if (!/^https?:\\/\\/[^\\.]+\\.keystatic\\.net/.test(source)) {\n    return source;\n  }\n  return `${source}?` + new URLSearchParams({\n    fit,\n    height: height.toString(),\n    width: width.toString()\n  }).toString();\n}\nfunction isValidURL$1(str) {\n  try {\n    new URL(str);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction useImageLibraryURL() {\n  const config = useConfig();\n  const split = getSplitCloudProject(config);\n  if (!split) return 'https://keystatic.cloud/';\n  return `https://keystatic.cloud/teams/${split.team}/project/${split.project}/images`;\n}\nfunction getAspectRatio(state) {\n  if (!state.width || !state.height) return 1;\n  return state.width / state.height;\n}\nconst cloudImageToolbarIcon = _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_55__.imageIcon;\n\n// Theme controls\n// -----------------------------------------------------------------------------\n\nconst THEME_MODE = {\n  light: {\n    icon: _keystar_ui_icon_icons_sunIcon__WEBPACK_IMPORTED_MODULE_93__.sunIcon,\n    label: 'Light'\n  },\n  dark: {\n    icon: _keystar_ui_icon_icons_moonIcon__WEBPACK_IMPORTED_MODULE_92__.moonIcon,\n    label: 'Dark'\n  },\n  auto: {\n    icon: _keystar_ui_icon_icons_monitorIcon__WEBPACK_IMPORTED_MODULE_91__.monitorIcon,\n    label: 'System'\n  }\n};\nconst themeItems = Object.entries(THEME_MODE).map(([id, {\n  icon,\n  label\n}]) => ({\n  id,\n  icon,\n  label\n}));\nfunction ThemeMenu() {\n  let {\n    theme,\n    setTheme\n  } = useThemeContext();\n  let matchesDark = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.useMediaQuery)('(prefers-color-scheme: dark)');\n  let icon = THEME_MODE[theme].icon;\n  if (theme === 'auto') {\n    icon = matchesDark ? _keystar_ui_icon_icons_moonIcon__WEBPACK_IMPORTED_MODULE_92__.moonIcon : _keystar_ui_icon_icons_sunIcon__WEBPACK_IMPORTED_MODULE_93__.sunIcon;\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.MenuTrigger, {\n    align: \"end\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      \"aria-label\": \"theme\",\n      prominence: \"low\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: icon\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Menu, {\n      items: themeItems,\n      onSelectionChange: ([key]) => setTheme(key),\n      disallowEmptySelection: true,\n      selectedKeys: [theme],\n      selectionMode: \"single\",\n      children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_107__.Item, {\n        textValue: item.label,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: item.icon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: item.label\n        })]\n      })\n    })]\n  });\n}\n\n// User controls\n// -----------------------------------------------------------------------------\n\nfunction UserActions() {\n  let config = useConfig();\n  let userData = useUserData();\n  let router = useRouter();\n  if (!userData) {\n    return null;\n  }\n  if (userData === 'unauthorized') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      onPress: () => {\n        redirectToCloudAuth(router.params.map(encodeURIComponent).join('/'), config);\n      },\n      flex: true,\n      children: \"Sign into Cloud\"\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(UserMenu, {\n    ...userData\n  });\n}\nfunction UserMenu(user) {\n  let config = useConfig();\n  const cloudInfo = useCloudInfo();\n  const imageLibraryUrl = useImageLibraryURL();\n  const menuItems = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    var _config$cloud;\n    let items = [{\n      key: 'logout',\n      label: 'Log out',\n      icon: _keystar_ui_icon_icons_logOutIcon__WEBPACK_IMPORTED_MODULE_86__.logOutIcon\n    }];\n    if ((_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) {\n      items.unshift({\n        key: 'manage',\n        label: 'Account',\n        icon: _keystar_ui_icon_icons_userIcon__WEBPACK_IMPORTED_MODULE_94__.userIcon,\n        href: 'https://keystatic.cloud/account',\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    if (cloudInfo !== null && cloudInfo !== void 0 && cloudInfo.team.images) {\n      items.unshift({\n        key: 'image-library',\n        label: 'Image library',\n        icon: _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_55__.imageIcon,\n        href: imageLibraryUrl,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    return items;\n  }, [cloudInfo, config, imageLibraryUrl]);\n  if (!user) {\n    return null;\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.MenuTrigger, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(UserDetailsButton, {\n      ...user\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Menu, {\n        items: menuItems,\n        minWidth: \"scale.2400\",\n        onAction: key => {\n          switch (key) {\n            case 'logout':\n              switch (config.storage.kind) {\n                case 'github':\n                  window.location.href = '/api/keystatic/github/logout';\n                  break;\n                case 'cloud':\n                case 'local':\n                  localStorage.removeItem('keystatic-cloud-access-token');\n                  window.location.reload();\n                  break;\n              }\n          }\n        },\n        children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_107__.Item, {\n          textValue: item.label,\n          href: item.href,\n          rel: item.rel,\n          target: item.target,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n            src: item.icon\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            children: item.label\n          })]\n        }, item.key)\n      })\n    })]\n  });\n}\nconst UserDetailsButton = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function UserDetailsButton(props, ref) {\n  let {\n    avatarUrl,\n    login,\n    name,\n    ...otherProps\n  } = props;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    ...otherProps,\n    ref: ref,\n    \"aria-label\": \"User menu\",\n    prominence: \"low\",\n    flexGrow: 1,\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      justifyContent: 'start',\n      textAlign: 'start'\n    }),\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      alignItems: \"center\",\n      gap: \"regular\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_avatar__WEBPACK_IMPORTED_MODULE_85__.Avatar, {\n        src: avatarUrl,\n        name: name !== null && name !== void 0 ? name : undefined,\n        size: \"small\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.ClearSlots, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          direction: \"column\",\n          gap: \"small\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            size: \"small\",\n            weight: \"semibold\",\n            color: \"neutralEmphasis\",\n            children: name\n          }), name === login ? null : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            size: \"small\",\n            color: \"neutralTertiary\",\n            children: login\n          })]\n        })\n      })]\n    })\n  });\n});\n\n// Git controls\n// -----------------------------------------------------------------------------\n\nfunction GitMenu() {\n  var _appShellData$data, _appShellData$data$re;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const data = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(BranchInfoContext);\n  const [newBranchDialogVisible, toggleNewBranchDialog] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(v => !v, false);\n  const [deleteBranchDialogVisible, toggleDeleteBranchDialog] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(v => !v, false);\n  const [, deleteBranch] = (0,urql__WEBPACK_IMPORTED_MODULE_99__.useMutation)((0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_59__.gql)`\n      mutation DeleteBranch($refId: ID!) {\n        deleteRef(input: { refId: $refId }) {\n          __typename\n        }\n      }\n    `);\n  const repoURL = getRepoUrl(data);\n  const appShellData = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(GitHubAppShellDataContext);\n  const fork = (appShellData === null || appShellData === void 0 || (_appShellData$data = appShellData.data) === null || _appShellData$data === void 0 ? void 0 : _appShellData$data.repository) && 'forks' in appShellData.data.repository && ((_appShellData$data$re = appShellData.data.repository.forks.nodes) === null || _appShellData$data$re === void 0 ? void 0 : _appShellData$data$re[0]);\n  const gitMenuItems = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    let isDefaultBranch = data.currentBranch === data.defaultBranch;\n    let items = [];\n    let branchSection = [{\n      key: 'new-branch',\n      icon: _keystar_ui_icon_icons_gitBranchPlusIcon__WEBPACK_IMPORTED_MODULE_88__.gitBranchPlusIcon,\n      label: stringFormatter.format('newBranch')\n    }];\n    let prSection = [];\n    let repoSection = [{\n      key: 'repo',\n      icon: _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_89__.githubIcon,\n      href: repoURL,\n      target: '_blank',\n      rel: 'noopener noreferrer',\n      label: 'Github repo' // TODO: l10n\n    }];\n    if (!isDefaultBranch) {\n      if (data.pullRequestNumber === undefined) {\n        prSection.push({\n          key: 'create-pull-request',\n          icon: _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_87__.gitPullRequestIcon,\n          href: `${repoURL}/pull/new/${data.currentBranch}`,\n          target: '_blank',\n          rel: 'noopener noreferrer',\n          label: stringFormatter.format('createPullRequest')\n        });\n      } else {\n        prSection.push({\n          key: 'view-pull-request',\n          icon: _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_87__.gitPullRequestIcon,\n          href: `${repoURL}/pull/${data.pullRequestNumber}`,\n          target: '_blank',\n          rel: 'noopener noreferrer',\n          label: `Pull Request #${data.pullRequestNumber}`\n        });\n      }\n      if (data.pullRequestNumber === undefined) {\n        branchSection.push({\n          key: 'delete-branch',\n          icon: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon,\n          label: stringFormatter.format('deleteBranch')\n        });\n      }\n    }\n    if (fork) {\n      repoSection.push({\n        key: 'fork',\n        icon: _keystar_ui_icon_icons_gitForkIcon__WEBPACK_IMPORTED_MODULE_90__.gitForkIcon,\n        href: `https://github.com/${fork.owner.login}/${fork.name}`,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        label: 'View fork' // TODO: l10n\n      });\n    }\n    if (branchSection.length) {\n      items.push({\n        key: 'branch-section',\n        label: stringFormatter.format('branches'),\n        children: branchSection\n      });\n    }\n    if (prSection.length) {\n      items.push({\n        key: 'pr-section',\n        label: stringFormatter.format('pullRequests'),\n        children: prSection\n      });\n    }\n    if (repoSection.length) {\n      items.push({\n        key: 'repo-section',\n        label: 'Repository',\n        // TODO: l10n\n        children: repoSection\n      });\n    }\n    return items;\n  }, [fork, data.currentBranch, data.defaultBranch, data.pullRequestNumber, repoURL, stringFormatter]);\n  const router = useRouter();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.ActionMenu, {\n      \"aria-label\": \"git actions\",\n      align: \"end\",\n      items: gitMenuItems,\n      onAction: key => {\n        switch (key) {\n          case 'new-branch':\n            toggleNewBranchDialog();\n            break;\n          case 'delete-branch':\n            {\n              toggleDeleteBranchDialog();\n              break;\n            }\n        }\n      },\n      children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_107__.Section, {\n        items: item.children,\n        \"aria-label\": item.label,\n        children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_107__.Item, {\n          textValue: item.label,\n          href: item.href,\n          rel: item.rel,\n          target: item.target,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n            src: item.icon\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            children: item.label\n          })]\n        }, item.key)\n      }, item.key)\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: toggleNewBranchDialog,\n      children: newBranchDialogVisible && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CreateBranchDialog, {\n        onDismiss: toggleNewBranchDialog,\n        onCreate: branchName => {\n          toggleNewBranchDialog();\n          router.push(router.href.replace(/\\/branch\\/[^/]+/, '/branch/' + encodeURIComponent(branchName)));\n        }\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: toggleDeleteBranchDialog,\n      children: deleteBranchDialogVisible && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.AlertDialog, {\n        title: \"Delete branch\",\n        tone: \"critical\",\n        cancelLabel: \"Cancel\",\n        primaryActionLabel: \"Yes, delete\",\n        autoFocusButton: \"cancel\",\n        onPrimaryAction: async () => {\n          await deleteBranch({\n            refId: data.branchNameToId.get(data.currentBranch)\n          });\n          router.push(router.href.replace(/\\/branch\\/[^/]+/, '/branch/' + encodeURIComponent(data.defaultBranch)));\n        },\n        children: [\"Are you sure you want to delete the \\\"\", data.currentBranch, \"\\\" branch? This cannot be undone.\"]\n      })\n    })]\n  });\n}\n\n// Utils\n// -----------------------------------------------------------------------------\n\nfunction useUserData() {\n  const config = useConfig();\n  const user = useViewer();\n  const rawCloudInfo = useRawCloudInfo();\n  if (rawCloudInfo) {\n    if (rawCloudInfo === 'unauthorized') {\n      return rawCloudInfo;\n    }\n    return {\n      avatarUrl: rawCloudInfo.user.avatarUrl,\n      login: rawCloudInfo.user.email,\n      name: rawCloudInfo.user.name\n    };\n  }\n  if (isGitHubConfig(config) && user) {\n    var _user$name;\n    return {\n      avatarUrl: user.avatarUrl,\n      login: user.login,\n      name: (_user$name = user.name) !== null && _user$name !== void 0 ? _user$name : user.login\n    };\n  }\n  return undefined;\n}\n\nconst SidebarContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useSidebar() {\n  let context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SidebarContext);\n  if (!context) {\n    throw new Error('useSidebar must be within a SidebarProvider');\n  }\n  return context;\n}\nconst breakpointNames = (0,emery__WEBPACK_IMPORTED_MODULE_1__.typedKeys)(_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpoints);\nfunction SidebarProvider(props) {\n  const matchedBreakpoints = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.useBreakpoint)();\n  const state = (0,_react_stately_overlays__WEBPACK_IMPORTED_MODULE_105__.useOverlayTriggerState)({\n    defaultOpen: matchedBreakpoints.includes('desktop')\n  });\n  let breakpointIndex = breakpointNames.indexOf(matchedBreakpoints[0]);\n  let previousIndex = (0,_keystar_ui_utils__WEBPACK_IMPORTED_MODULE_68__.usePrevious)(breakpointIndex) || 0;\n  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_101__.useUpdateEffect)(() => {\n    let larger = previousIndex < breakpointIndex;\n    if (larger && breakpointIndex >= 2) {\n      state.open();\n    } else if (breakpointIndex < 2) {\n      state.close();\n    }\n  }, [matchedBreakpoints]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarContext.Provider, {\n    value: state,\n    children: props.children\n  });\n}\nfunction SidebarPanel() {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.VStack, {\n    backgroundColor: \"surface\",\n    height: \"100%\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarHeader, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarGitActions, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarNav, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarFooter, {})]\n  });\n}\nfunction SidebarHeader() {\n  let isLocalNoCloud = useIsLocalNoCloud();\n  let {\n    brandMark,\n    brandName\n  } = useBrand();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n    alignItems: \"center\",\n    gap: \"regular\",\n    paddingY: \"regular\",\n    paddingX: \"medium\",\n    height: {\n      mobile: 'element.large',\n      tablet: 'element.xlarge'\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n      flex: true,\n      alignItems: \"center\",\n      gap: \"regular\",\n      UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        // let consumers use \"currentColor\" in SVG for their brand mark\n        color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.neutralEmphasis,\n        // ensure that the brand mark doesn't get squashed\n        '& :first-child': {\n          flexShrink: 0\n        }\n      }),\n      children: [brandMark, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        color: \"inherit\",\n        weight: \"medium\",\n        truncate: true,\n        children: brandName\n      })]\n    }), isLocalNoCloud && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ThemeMenu, {})]\n  });\n}\n\n// when local mode w/o cloud there's no user actions, so we hide the footer and\n// move the theme menu to the header\nfunction SidebarFooter() {\n  let isLocalNoCloud = useIsLocalNoCloud();\n  if (isLocalNoCloud) {\n    return null;\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n    alignItems: \"center\",\n    paddingY: \"regular\",\n    paddingX: \"medium\",\n    gap: \"regular\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(UserActions, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ThemeMenu, {})]\n  });\n}\n\n// no git actions in local mode\nfunction SidebarGitActions() {\n  let config = useConfig();\n  if (isLocalConfig(config)) {\n    return null;\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.HStack, {\n    gap: \"regular\",\n    paddingY: \"regular\",\n    paddingX: \"medium\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BranchPicker, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(GitMenu, {})]\n  });\n}\nfunction SidebarDialog() {\n  const state = useSidebar();\n  const router = useRouter();\n\n  // close the sidebar when the route changes\n  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_101__.useUpdateEffect)(() => {\n    state.close();\n  }, [router.href]);\n  let dialogRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  let {\n    modalProps,\n    underlayProps\n  } = (0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__.useModalOverlay)({\n    isDismissable: true\n  }, state, dialogRef);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_24__.Blanket, {\n      ...underlayProps,\n      isOpen: state.isOpen,\n      zIndex: 10\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"div\", {\n      \"data-visible\": state.isOpen,\n      id: SIDE_PANEL_ID,\n      ref: dialogRef,\n      ...modalProps,\n      // styles\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        backgroundColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.background.surface,\n        boxShadow: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.shadow.large} ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.shadow.regular}`,\n        display: 'flex',\n        flexDirection: 'column',\n        inset: 0,\n        insetInlineEnd: 'auto',\n        // ensure that there's always enough of gutter for the user to press\n        // and exit the sidebar\n        maxWidth: `calc(100% - ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.element.medium})`,\n        minWidth: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.scale[3000],\n        outline: 0,\n        pointerEvents: 'none',\n        position: 'fixed',\n        transform: 'translateX(-100%)',\n        visibility: 'hidden',\n        zIndex: 10,\n        // exit animation\n        transition: [(0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.transition)('transform', {\n          easing: 'easeIn',\n          duration: 'short'\n          // delay: 'short',\n        }), (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.transition)('visibility', {\n          delay: 'regular',\n          duration: 0,\n          easing: 'linear'\n        })].join(', '),\n        '&[data-visible=true]': {\n          transform: 'translateX(0)',\n          // enter animation\n          transition: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.transition)('transform', {\n            easing: 'easeOut'\n          }),\n          pointerEvents: 'auto',\n          visibility: 'visible'\n        }\n      }),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarHeader, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarGitActions, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarNav, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SidebarFooter, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__.DismissButton, {\n        onDismiss: state.close\n      })]\n    })]\n  });\n}\nfunction SidebarNav() {\n  const {\n    basePath\n  } = useAppState();\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const navItems = useNavItems();\n  const isCurrent = useIsCurrent();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.ScrollView, {\n    flex: true,\n    paddingY: \"large\",\n    paddingEnd: \"medium\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_82__.NavList, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_82__.NavItem, {\n        href: basePath,\n        \"aria-current\": isCurrent(basePath, {\n          exact: true\n        }),\n        children: stringFormatter.format('dashboard')\n      }), navItems.map(item => renderItemOrGroup(item, isCurrent))]\n    })\n  });\n}\n\n// Utils\n// ----------------------------------------------------------------------------\n\nfunction useIsLocalNoCloud() {\n  const config = useConfig();\n  return isLocalConfig(config) && !config.cloud;\n}\nfunction useIsCurrent() {\n  const router = useRouter();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((href, {\n    exact = false\n  } = {}) => {\n    if (exact) {\n      return href === router.href ? 'page' : undefined;\n    }\n    return href === router.href || router.href.startsWith(`${href}/`) ? 'page' : undefined;\n  }, [router.href]);\n}\n\n// Renderers\n// ----------------------------------------------------------------------------\nlet dividerCount = 0;\nfunction renderItemOrGroup(itemOrGroup, isCurrent) {\n  if ('isDivider' in itemOrGroup) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Divider, {}, dividerCount++);\n  }\n  if ('children' in itemOrGroup) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_82__.NavGroup, {\n      title: itemOrGroup.title,\n      children: itemOrGroup.children.map(child => renderItemOrGroup(child, isCurrent))\n    }, itemOrGroup.title);\n  }\n  let changeElement = (() => {\n    if (!itemOrGroup.changed) {\n      return null;\n    }\n    return typeof itemOrGroup.changed === 'number' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_badge__WEBPACK_IMPORTED_MODULE_81__.Badge, {\n      tone: \"accent\",\n      marginStart: \"auto\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        children: itemOrGroup.changed\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        visuallyHidden: true,\n        children: pluralize(itemOrGroup.changed, {\n          singular: 'change',\n          plural: 'changes',\n          inclusive: false\n        })\n      })]\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_status_light__WEBPACK_IMPORTED_MODULE_83__.StatusLight, {\n      tone: \"accent\",\n      marginStart: \"auto\",\n      \"aria-label\": \"Changed\",\n      role: \"status\"\n    });\n  })();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_82__.NavItem, {\n    href: itemOrGroup.href,\n    \"aria-current\": isCurrent(itemOrGroup.href),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      truncate: true,\n      title: itemOrGroup.label,\n      children: itemOrGroup.label\n    }), changeElement]\n  }, itemOrGroup.key);\n}\n\nconst PageContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  containerWidth: 'medium'\n});\nconst PageRoot = ({\n  children,\n  containerWidth = 'medium'\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PageContext.Provider, {\n    value: {\n      containerWidth\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      elementType: \"main\",\n      direction: \"column\",\n      id: MAIN_PANEL_ID,\n      flex: true,\n      height: \"100%\"\n      // fix flexbox issues\n      ,\n      minHeight: 0,\n      minWidth: 0,\n      children: children\n    })\n  });\n};\nconst PageHeader = ({\n  children\n}) => {\n  const sidebarState = useSidebar();\n  const menuButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const {\n    direction\n  } = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocale)();\n  let icon = sidebarState.isOpen ? _keystar_ui_icon_icons_panelLeftCloseIcon__WEBPACK_IMPORTED_MODULE_78__.panelLeftCloseIcon : _keystar_ui_icon_icons_panelLeftOpenIcon__WEBPACK_IMPORTED_MODULE_77__.panelLeftOpenIcon;\n  if (direction === 'rtl') {\n    icon = sidebarState.isOpen ? _keystar_ui_icon_icons_panelRightCloseIcon__WEBPACK_IMPORTED_MODULE_80__.panelRightCloseIcon : _keystar_ui_icon_icons_panelRightOpenIcon__WEBPACK_IMPORTED_MODULE_79__.panelRightOpenIcon;\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n    borderBottom: \"muted\",\n    elementType: \"header\",\n    height: {\n      mobile: 'element.large',\n      tablet: 'element.xlarge'\n    },\n    flexShrink: 0,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n      minHeight: 0,\n      minWidth: 0,\n      paddingX: {\n        mobile: 'medium',\n        tablet: 'xlarge',\n        desktop: 'xxlarge'\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n        alignItems: \"center\",\n        gap: {\n          mobile: 'small',\n          tablet: 'regular'\n        },\n        height: {\n          mobile: 'element.large',\n          tablet: 'element.xlarge'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n          prominence: \"low\",\n          \"aria-label\": \"Open app navigation\",\n          \"aria-pressed\": sidebarState.isOpen,\n          isHidden: sidebarState.isOpen ? {\n            above: 'tablet'\n          } : undefined,\n          onPress: sidebarState.toggle,\n          ref: menuButtonRef,\n          UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n            marginInlineStart: `calc(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular} * -1)`\n          }),\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n            src: icon\n          })\n        }), children]\n      })\n    })\n  });\n};\nconst PageBody = ({\n  children,\n  isScrollable\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ScrollView, {\n    isDisabled: !isScrollable,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PageContainer\n    // padding on the container so descendants can use sticky positioning\n    // with simple relative offsets\n    , {\n      paddingY: \"xxlarge\",\n      children: children\n    })\n  });\n};\nconst PageContainer = props => {\n  const {\n    containerWidth\n  } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PageContext);\n  const maxWidth = containerWidth === 'none' ? undefined : `container.${containerWidth}`;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n    minHeight: 0,\n    minWidth: 0,\n    maxWidth: maxWidth\n    // marginX=\"auto\"\n    ,\n    paddingX: {\n      mobile: 'medium',\n      tablet: 'xlarge',\n      desktop: 'xxlarge'\n    },\n    ...props\n  });\n};\n\nclass FieldDataError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'FieldDataError';\n  }\n}\n\nfunction assertRequired(value, validation, label) {\n  if (value === null && validation !== null && validation !== void 0 && validation.isRequired) {\n    throw new FieldDataError(`${label} is required`);\n  }\n}\nfunction basicFormFieldWithSimpleReaderParse(config) {\n  return {\n    kind: 'form',\n    Input: config.Input,\n    defaultValue: config.defaultValue,\n    parse: config.parse,\n    serialize: config.serialize,\n    validate: config.validate,\n    reader: {\n      parse(value) {\n        return config.validate(config.parse(value));\n      }\n    }\n  };\n}\n\nconst arrayValuesToElementKeys = new WeakMap();\nlet counter = 0;\nfunction getKeysForArrayValue(value) {\n  if (!arrayValuesToElementKeys.has(value)) {\n    arrayValuesToElementKeys.set(value, Array.from({\n      length: value.length\n    }, getNewArrayElementKey));\n  }\n  return arrayValuesToElementKeys.get(value);\n}\nfunction setKeysForArrayValue(value, elementIds) {\n  arrayValuesToElementKeys.set(value, elementIds);\n}\nfunction getNewArrayElementKey() {\n  return (counter++).toString();\n}\nconst getInitialPropsValue = _getInitialPropsValue;\nfunction _getInitialPropsValue(schema) {\n  switch (schema.kind) {\n    case 'form':\n      return schema.defaultValue();\n    case 'child':\n      return schema.options.kind === 'block' ? [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }] : null;\n    case 'conditional':\n      {\n        const defaultValue = schema.discriminant.defaultValue();\n        return {\n          discriminant: defaultValue,\n          value: getInitialPropsValue(schema.values[defaultValue.toString()])\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = getInitialPropsValue(schema.fields[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        return [];\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction getInitialPropsValueFromInitializer(schema, initializer) {\n  switch (schema.kind) {\n    case 'form':\n      return initializer === undefined ? schema.defaultValue() : initializer;\n    case 'child':\n      return initializer !== null && initializer !== void 0 ? initializer : schema.options.kind === 'block' ? [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }] : null;\n    case 'conditional':\n      {\n        const defaultValue = initializer === undefined ? schema.discriminant.defaultValue() : initializer.discriminant;\n        return {\n          discriminant: defaultValue,\n          value: getInitialPropsValueFromInitializer(schema.values[defaultValue.toString()], initializer === undefined ? undefined : initializer.value)\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = getInitialPropsValueFromInitializer(schema.fields[key], initializer === undefined ? undefined : initializer[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        return (initializer !== null && initializer !== void 0 ? initializer : []).map(x => getInitialPropsValueFromInitializer(schema.element, x.value));\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction updateValue(schema, currentValue, updater) {\n  if (updater === undefined) return currentValue;\n  switch (schema.kind) {\n    case 'form':\n      return updater;\n    case 'child':\n      return updater;\n    case 'conditional':\n      {\n        return {\n          discriminant: updater.discriminant,\n          value: updater.discriminant === currentValue.discriminant ? updateValue(schema.values[updater.discriminant.toString()], currentValue.value, updater.value) : getInitialPropsValueFromInitializer(schema.values[updater.discriminant.toString()], updater.value)\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = updateValue(schema.fields[key], currentValue[key], updater[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        const currentArrVal = currentValue;\n        const newVal = updater;\n        const uniqueKeys = new Set();\n        for (const x of newVal) {\n          if (x.key !== undefined) {\n            if (uniqueKeys.has(x.key)) {\n              throw new Error('Array elements must have unique keys');\n            }\n            uniqueKeys.add(x.key);\n          }\n        }\n        const keys = newVal.map(x => {\n          if (x.key !== undefined) return x.key;\n          let elementKey = getNewArrayElementKey();\n          // just in case someone gives a key that is above our counter\n          while (uniqueKeys.has(elementKey)) {\n            elementKey = getNewArrayElementKey();\n          }\n          uniqueKeys.add(elementKey);\n          return elementKey;\n        });\n        const prevKeys = getKeysForArrayValue(currentArrVal);\n        const prevValuesByKey = new Map(currentArrVal.map((value, i) => {\n          return [prevKeys[i], value];\n        }));\n        const val = newVal.map((x, i) => {\n          const id = keys[i];\n          if (prevValuesByKey.has(id)) {\n            return updateValue(schema.element, prevValuesByKey.get(id), x.value);\n          }\n          return getInitialPropsValueFromInitializer(schema.element, x.value);\n        });\n        setKeysForArrayValue(val, keys);\n        return val;\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nfunction getValueAtPropPath(value, inputPath) {\n  const path = [...inputPath];\n  while (path.length) {\n    const key = path.shift();\n    value = value[key];\n  }\n  return value;\n}\nfunction traverseProps(schema, value, visitor, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    visitor(schema, value, path);\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const [key, childProp] of Object.entries(schema.fields)) {\n      traverseProps(childProp, value[key], visitor, [...path, key]);\n    }\n    visitor(schema, value, path);\n    return;\n  }\n  if (schema.kind === 'array') {\n    for (const [idx, val] of value.entries()) {\n      traverseProps(schema.element, val, visitor, path.concat(idx));\n    }\n    return visitor(schema, value, path);\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = value.discriminant;\n    visitor(schema, discriminant, path.concat('discriminant'));\n    traverseProps(schema.values[discriminant.toString()], value.value, visitor, path.concat('value'));\n    visitor(schema, value, path);\n    return;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\nfunction transformProps(schema, value, visitors, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    if (visitors[schema.kind]) {\n      return visitors[schema.kind](schema, value, path);\n    }\n    return value;\n  }\n  if (schema.kind === 'object') {\n    const val = Object.fromEntries(Object.entries(schema.fields).map(([key, val]) => {\n      return [key, transformProps(val, value[key], visitors, [...path, key])];\n    }));\n    if (visitors.object) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    const val = value.map((val, idx) => transformProps(schema.element, val, visitors, path.concat(idx)));\n    if (visitors.array) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = transformProps(schema.discriminant, value.discriminant, visitors, path.concat('discriminant'));\n    const conditionalVal = transformProps(schema.values[discriminant.toString()], value.value, visitors, path.concat('value'));\n    const val = {\n      discriminant,\n      value: conditionalVal\n    };\n    if (visitors.conditional) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\nfunction replaceValueAtPropPath(schema, value, newValue, path) {\n  if (path.length === 0) {\n    return newValue;\n  }\n  const [key, ...newPath] = path;\n  if (schema.kind === 'object') {\n    return {\n      ...value,\n      [key]: replaceValueAtPropPath(schema.fields[key], value[key], newValue, newPath)\n    };\n  }\n  if (schema.kind === 'conditional') {\n    const conditionalValue = value;\n    // replaceValueAtPropPath should not be used to only update the discriminant of a conditional field\n    // if you want to update the discriminant of a conditional field, replace the value of the whole conditional field\n    (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assert)(key === 'value');\n    return {\n      discriminant: conditionalValue.discriminant,\n      value: replaceValueAtPropPath(schema.values[key], conditionalValue.value, newValue, newPath)\n    };\n  }\n  if (schema.kind === 'array') {\n    const prevVal = value;\n    const newVal = [...prevVal];\n    setKeysForArrayValue(newVal, getKeysForArrayValue(prevVal));\n    newVal[key] = replaceValueAtPropPath(schema.element, newVal[key], newValue, newPath);\n    return newVal;\n  }\n\n  // we should never reach here since form or child fields don't contain other fields\n  // so the only thing that can happen to them is to be replaced which happens at the start of this function when path.length === 0\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assert)(schema.kind !== 'form' && schema.kind !== 'child');\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\n\n// a v important note\n// marks in the markdown ast/html are represented quite differently to how they are in slate\n// if you had the markdown **something https://keystonejs.com something**\n// the bold node is the parent of the link node\n// but in slate, marks are only represented on text nodes\n\nconst currentlyActiveMarks = new Set();\nconst currentlyDisabledMarks = new Set();\nlet currentLink = null;\nfunction addMarkToChildren(mark, cb) {\n  const wasPreviouslyActive = currentlyActiveMarks.has(mark);\n  currentlyActiveMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyActive) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction setLinkForChildren(href, cb) {\n  // we'll only use the outer link\n  if (currentLink !== null) {\n    return cb();\n  }\n  currentLink = href;\n  try {\n    return cb();\n  } finally {\n    currentLink = null;\n  }\n}\nfunction addMarksToChildren(marks, cb) {\n  const marksToRemove = new Set();\n  for (const mark of marks) {\n    if (!currentlyActiveMarks.has(mark)) {\n      marksToRemove.add(mark);\n    }\n    currentlyActiveMarks.add(mark);\n  }\n  try {\n    return cb();\n  } finally {\n    for (const mark of marksToRemove) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction forceDisableMarkForChildren(mark, cb) {\n  const wasPreviouslyDisabled = currentlyDisabledMarks.has(mark);\n  currentlyDisabledMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyDisabled) {\n      currentlyDisabledMarks.delete(mark);\n    }\n  }\n}\n\n/**\n * This type is more strict than `Element & { type: 'link'; }` because `children`\n * is constrained to only contain Text nodes. This can't be assumed generally around the editor\n * (because of potentially future inline components or nested links(which are normalized away but the editor needs to not break if it happens))\n * but where this type is used, we're only going to allow links to contain Text and that's important\n * so that we know a block will never be inside an inline because Slate gets unhappy when that happens\n * (really the link inline should probably be a mark rather than an inline,\n * non-void inlines are probably always bad but that would imply changing the document\n * structure which would be such unnecessary breakage)\n */\n\nfunction getInlineNodes(text) {\n  const node = {\n    text\n  };\n  for (const mark of currentlyActiveMarks) {\n    if (!currentlyDisabledMarks.has(mark)) {\n      node[mark] = true;\n    }\n  }\n  if (currentLink !== null) {\n    return [{\n      text: ''\n    }, {\n      type: 'link',\n      href: currentLink,\n      children: [node]\n    }, {\n      text: ''\n    }];\n  }\n  return [node];\n}\n\nclass VariableChildFields extends Error {\n  constructor() {\n    super('There are a variable number of child fields');\n  }\n}\nfunction findSingleChildField(schema) {\n  try {\n    const result = _findConstantChildFields(schema, [], new Set());\n    if (result.length === 1) {\n      return result[0];\n    }\n    return;\n  } catch (err) {\n    if (err instanceof VariableChildFields) {\n      return;\n    }\n    throw err;\n  }\n}\nfunction _findConstantChildFields(schema, path, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return [];\n  }\n  seenSchemas.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        relativePath: path,\n        options: schema.options,\n        kind: 'child'\n      }];\n    case 'conditional':\n      {\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'array':\n      {\n        if (schema.asChildTag) {\n          const child = _findConstantChildFields(schema.element, [], seenSchemas);\n          if (child.length > 1) {\n            return [];\n          }\n          return [{\n            kind: 'array',\n            asChildTag: schema.asChildTag,\n            field: schema,\n            relativePath: path,\n            child: child[0]\n          }];\n        }\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'object':\n      {\n        const paths = [];\n        for (const [key, value] of Object.entries(schema.fields)) {\n          paths.push(..._findConstantChildFields(value, path.concat(key), seenSchemas));\n        }\n        return paths;\n      }\n  }\n}\nfunction couldContainChildField(schema, seen = new Set()) {\n  if (seen.has(schema)) {\n    return false;\n  }\n  seen.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return false;\n    case 'child':\n      return true;\n    case 'conditional':\n      return Object.values(schema.values).some(value => couldContainChildField(value, seen));\n    case 'object':\n      return Object.keys(schema.fields).some(key => couldContainChildField(schema.fields[key], seen));\n    case 'array':\n      return couldContainChildField(schema.element, seen);\n  }\n}\n\nfunction inlineNodeFromMarkdoc(node) {\n  if (node.type === 'inline') {\n    return inlineChildrenFromMarkdoc(node.children);\n  }\n  if (node.type === 'link') {\n    return setLinkForChildren(node.attributes.href, () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'text') {\n    return getInlineNodes(node.attributes.content);\n  }\n  if (node.type === 'strong') {\n    return addMarkToChildren('bold', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'code') {\n    return addMarkToChildren('code', () => getInlineNodes(node.attributes.content));\n  }\n  if (node.type === 'em') {\n    return addMarkToChildren('italic', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 's') {\n    return addMarkToChildren('strikethrough', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'u') {\n      return addMarkToChildren('underline', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'kbd') {\n      return addMarkToChildren('keyboard', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sub') {\n      return addMarkToChildren('subscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sup') {\n      return addMarkToChildren('superscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n  }\n  if (node.type === 'softbreak') {\n    return getInlineNodes(' ');\n  }\n  if (node.type === 'hardbreak') {\n    return getInlineNodes('\\n');\n  }\n  if (node.tag === 'component-inline-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n    return {\n      type: 'component-inline-prop',\n      children: inlineFromMarkdoc(node.children),\n      propPath: node.attributes.propPath\n    };\n  }\n  throw new Error(`Unknown inline node type: ${node.type}`);\n}\nfunction inlineChildrenFromMarkdoc(nodes) {\n  return nodes.flatMap(inlineNodeFromMarkdoc);\n}\nfunction inlineFromMarkdoc(nodes) {\n  const transformedNodes = nodes.flatMap(inlineNodeFromMarkdoc);\n  const nextNodes = [];\n  let lastNode;\n  for (const [idx, node] of transformedNodes.entries()) {\n    var _lastNode;\n    if (node.type === undefined && node.text === '' && ((_lastNode = lastNode) === null || _lastNode === void 0 ? void 0 : _lastNode.type) === undefined && idx !== transformedNodes.length - 1) {\n      continue;\n    }\n    nextNodes.push(node);\n    lastNode = node;\n  }\n  if (!nextNodes.length) {\n    nextNodes.push({\n      text: ''\n    });\n  }\n  return nextNodes;\n}\nfunction fromMarkdoc(node, componentBlocks) {\n  const nodes = node.children.flatMap(x => fromMarkdocNode(x, componentBlocks));\n  if (nodes.length === 0) {\n    return [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  }\n  if (nodes[nodes.length - 1].type !== 'paragraph') {\n    nodes.push({\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    });\n  }\n  return nodes;\n}\nfunction fromMarkdocNode(node, componentBlocks) {\n  if (node.type === 'blockquote') {\n    return {\n      type: 'blockquote',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'fence') {\n    const {\n      language,\n      content,\n      ...rest\n    } = node.attributes;\n    return {\n      type: 'code',\n      children: [{\n        text: content.replace(/\\n$/, '')\n      }],\n      ...(typeof language === 'string' ? {\n        language\n      } : {}),\n      ...rest\n    };\n  }\n  if (node.type === 'heading') {\n    return {\n      ...node.attributes,\n      level: node.attributes.level,\n      type: 'heading',\n      children: inlineFromMarkdoc(node.children)\n    };\n  }\n  if (node.type === 'list') {\n    return {\n      type: node.attributes.ordered ? 'ordered-list' : 'unordered-list',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'item') {\n    var _node$children$;\n    const children = [{\n      type: 'list-item-content',\n      children: node.children.length ? inlineFromMarkdoc([node.children[0]]) : [{\n        text: ''\n      }]\n    }];\n    if (((_node$children$ = node.children[1]) === null || _node$children$ === void 0 ? void 0 : _node$children$.type) === 'list') {\n      const list = node.children[1];\n      children.push({\n        type: list.attributes.ordered ? 'ordered-list' : 'unordered-list',\n        children: list.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      });\n    }\n    return {\n      type: 'list-item',\n      children\n    };\n  }\n  if (node.type === 'paragraph') {\n    if (node.children.length === 1 && node.children[0].type === 'inline' && node.children[0].children.length === 1 && node.children[0].children[0].type === 'image') {\n      var _image$attributes$tit;\n      const image = node.children[0].children[0];\n      return {\n        type: 'image',\n        src: decodeURI(image.attributes.src),\n        alt: image.attributes.alt,\n        title: (_image$attributes$tit = image.attributes.title) !== null && _image$attributes$tit !== void 0 ? _image$attributes$tit : '',\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    const children = inlineFromMarkdoc(node.children);\n    if (children.length === 1 && children[0].type === 'component-inline-prop') {\n      return children[0];\n    }\n    return {\n      type: 'paragraph',\n      children,\n      textAlign: node.attributes.textAlign\n    };\n  }\n  if (node.type === 'hr') {\n    return {\n      type: 'divider',\n      children: [{\n        text: ''\n      }]\n    };\n  }\n  if (node.type === 'table') {\n    return {\n      type: 'table',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tbody') {\n    return {\n      type: 'table-body',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'thead') {\n    if (!node.children.length) return [];\n    return {\n      type: 'table-head',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tr') {\n    return {\n      type: 'table-row',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'td') {\n    return {\n      type: 'table-cell',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'th') {\n    return {\n      type: 'table-cell',\n      header: true,\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'table') {\n      return fromMarkdocNode(node.children[0], componentBlocks);\n    }\n    if (node.tag === 'layout') {\n      return {\n        type: 'layout',\n        layout: node.attributes.layout,\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'layout-area') {\n      return {\n        type: 'layout-area',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block') {\n      return {\n        type: 'component-block',\n        component: node.attributes.component,\n        props: node.attributes.props,\n        children: node.children.length === 0 ? [{\n          type: 'component-inline-prop',\n          children: [{\n            text: ''\n          }]\n        }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n      return {\n        type: 'component-block-prop',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks)),\n        propPath: node.attributes.propPath\n      };\n    }\n    if (node.tag) {\n      const componentBlock = componentBlocks[node.tag];\n      if (componentBlock) {\n        const singleChildField = findSingleChildField({\n          kind: 'object',\n          fields: componentBlock.schema\n        });\n        if (singleChildField) {\n          const newAttributes = JSON.parse(JSON.stringify(node.attributes));\n          const children = [];\n          toChildrenAndProps$1(node.children, children, newAttributes, singleChildField, [], componentBlocks);\n          return {\n            type: 'component-block',\n            component: node.tag,\n            props: newAttributes,\n            children\n          };\n        }\n        return {\n          type: 'component-block',\n          component: node.tag,\n          props: node.attributes,\n          children: node.children.length === 0 ? [{\n            type: 'component-inline-prop',\n            children: [{\n              text: ''\n            }]\n          }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n        };\n      }\n    }\n    throw new Error(`Unknown tag: ${node.tag}`);\n  }\n  return inlineNodeFromMarkdoc(node);\n}\nfunction toChildrenAndProps$1(fromMarkdoc, resultingChildren, value, singleChildField, parentPropPath, componentBlocks) {\n  if (singleChildField.kind === 'child') {\n    const children = fromMarkdoc.flatMap(x => fromMarkdocNode(x, componentBlocks));\n    resultingChildren.push({\n      type: `component-${singleChildField.options.kind}-prop`,\n      propPath: [...parentPropPath, ...singleChildField.relativePath],\n      children\n    });\n  }\n  if (singleChildField.kind === 'array') {\n    const arr = [];\n    for (let [idx, child] of fromMarkdoc.entries()) {\n      if (child.type === 'paragraph') {\n        child = child.children[0].children[0];\n      }\n      if (child.type !== 'tag') {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found type: ${child.type}`);\n      }\n      if (child.tag !== singleChildField.asChildTag) {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found tag: ${child.tag}`);\n      }\n      const attributes = JSON.parse(JSON.stringify(child.attributes));\n      if (singleChildField.child) {\n        toChildrenAndProps$1(child.children, resultingChildren, attributes, singleChildField.child, [...parentPropPath, ...singleChildField.relativePath, idx], componentBlocks);\n      }\n      arr.push(attributes);\n    }\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    parent[key] = arr;\n  }\n}\n\nfunction areArraysEqual(a, b) {\n  return a.length === b.length && a.every((x, i) => x === b[i]);\n}\nfunction normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, inlineMarks, softBreaks) {\n  const marksToRemove = Object.keys(node).filter(x => x !== 'text' && x !== 'insertMenu' && inlineMarks[x] !== true);\n  if (marksToRemove.length) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, marksToRemove, {\n      at: path\n    });\n    return true;\n  }\n  if (!softBreaks) {\n    const hasSoftBreaks = node.text.includes('\\n');\n    if (hasSoftBreaks) {\n      const [parentNode] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, path);\n      if (parentNode.type !== 'code') {\n        for (const position of slate__WEBPACK_IMPORTED_MODULE_104__.Editor.positions(editor, {\n          at: path\n        })) {\n          const character = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, position.path).text[position.offset];\n          if (character === '\\n') {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n              at: position\n            });\n            return true;\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction normalizeInlineBasedOnLinks([node, path], editor, links) {\n  if (node.type === 'link' && !links) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertText(editor, ` (${node.href})`, {\n      at: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, path)\n    });\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  return false;\n}\nfunction normalizeElementBasedOnDocumentFeatures([node, path], editor, {\n  formatting,\n  dividers,\n  layouts,\n  links,\n  images,\n  tables\n}) {\n  if (node.type === 'heading' && (!formatting.headings.levels.length || !formatting.headings.levels.includes(node.level)) || node.type === 'ordered-list' && !formatting.listTypes.ordered || node.type === 'unordered-list' && !formatting.listTypes.unordered || node.type === 'code' && !formatting.blockTypes.code || node.type === 'blockquote' && !formatting.blockTypes.blockquote || node.type === 'image' && !images || node.type === 'table' && !tables || node.type === 'layout' && (layouts.length === 0 || !layouts.some(layout => areArraysEqual(layout, node.layout)))) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  if ((node.type === 'paragraph' || node.type === 'heading') && (!formatting.alignment.center && node.textAlign === 'center' || !formatting.alignment.end && node.textAlign === 'end' || 'textAlign' in node && node.textAlign !== 'center' && node.textAlign !== 'end')) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'textAlign', {\n      at: path\n    });\n    return true;\n  }\n  if (node.type === 'divider' && !dividers) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  return normalizeInlineBasedOnLinks([node, path], editor, links);\n}\nfunction withDocumentFeaturesNormalization(documentFeatures, editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = ([node, path]) => {\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node)) {\n      normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, documentFeatures.formatting.inlineMarks, documentFeatures.formatting.softBreaks);\n    } else if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node)) {\n      normalizeElementBasedOnDocumentFeatures([node, path], editor, documentFeatures);\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nfunction getSrcPrefix(publicPath, slug) {\n  return typeof publicPath === 'string' ? `${publicPath.replace(/\\/*$/, '')}/${slug === undefined ? '' : slug + '/'}` : '';\n}\n\nfunction deserializeFiles(nodes, componentBlocks, files, otherFiles, mode, documentFeatures, slug) {\n  return nodes.map(node => {\n    if (node.type === 'component-block') {\n      const componentBlock = componentBlocks[node.component];\n      if (!componentBlock) return node;\n      const schema = object(componentBlock.schema);\n      return {\n        ...node,\n        props: deserializeProps(schema, node.props, files, otherFiles, mode, slug)\n      };\n    }\n    if (node.type === 'image' && typeof node.src === 'string' && mode === 'edit') {\n      var _ref;\n      const prefix = getSrcPrefixForImageBlock(documentFeatures, slug);\n      const filename = node.src.slice(prefix.length);\n      const content = (_ref = typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? otherFiles.get(fixPath(documentFeatures.images.directory)) : files) === null || _ref === void 0 ? void 0 : _ref.get(filename);\n      if (!content) {\n        return {\n          type: 'paragraph',\n          children: [{\n            text: `Missing image ${filename}`\n          }]\n        };\n      }\n      return {\n        type: 'image',\n        src: {\n          filename,\n          content\n        },\n        alt: node.alt,\n        title: node.title,\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    if (typeof node.type === 'string') {\n      const children = deserializeFiles(node.children, componentBlocks, files, otherFiles, mode, documentFeatures, slug);\n      return {\n        ...node,\n        children\n      };\n    }\n    return node;\n  });\n}\nfunction deserializeProps(schema, value, files, otherFiles, mode, slug) {\n  return transformProps(schema, value, {\n    form: (schema, value) => {\n      if (schema.formKind === 'asset') {\n        var _otherFiles$get;\n        if (mode === 'read') {\n          return schema.reader.parse(value);\n        }\n        const filename = schema.filename(value, {\n          slug,\n          suggestedFilenamePrefix: undefined\n        });\n        return schema.parse(value, {\n          asset: filename ? schema.directory ? (_otherFiles$get = otherFiles.get(schema.directory)) === null || _otherFiles$get === void 0 ? void 0 : _otherFiles$get.get(filename) : files.get(filename) : undefined,\n          slug\n        });\n      }\n      if (schema.formKind === 'content') {\n        throw new Error('Not implemented');\n      }\n      if (mode === 'read') {\n        return schema.reader.parse(value);\n      }\n      return schema.parse(value, undefined);\n    }\n  });\n}\nfunction getSrcPrefixForImageBlock(documentFeatures, slug) {\n  return getSrcPrefix(typeof documentFeatures.images === 'object' ? documentFeatures.images.publicPath : undefined, slug);\n}\n\nfunction serializeProps(rootValue, rootSchema,\n// note you might have a slug without a slug field when serializing props inside a component block or etc. in the editor\nslugField, slug, shouldSuggestFilenamePrefix) {\n  const extraFiles = [];\n  return {\n    value: transformProps(rootSchema, rootValue, {\n      form(schema, value, propPath) {\n        if (propPath.length === 1 && slugField === propPath[0]) {\n          if (schema.formKind !== 'slug') {\n            throw new Error('slugField is a not a slug field');\n          }\n          return schema.serializeWithSlug(value).value;\n        }\n        if (schema.formKind === 'asset') {\n          const {\n            asset,\n            value: forYaml\n          } = schema.serialize(value, {\n            suggestedFilenamePrefix: shouldSuggestFilenamePrefix ? getPropPathPortion(propPath, rootSchema, rootValue) : undefined,\n            slug\n          });\n          if (asset) {\n            extraFiles.push({\n              path: asset.filename,\n              contents: asset.content,\n              parent: schema.directory\n            });\n          }\n          return forYaml;\n        }\n        if (schema.formKind === 'content') {\n          const {\n            other,\n            external,\n            content,\n            value: forYaml\n          } = schema.serialize(value, {\n            slug\n          });\n          if (content) {\n            extraFiles.push({\n              path: getPropPathPortion(propPath, rootSchema, rootValue) + schema.contentExtension,\n              contents: content,\n              parent: undefined\n            });\n          }\n          for (const [key, contents] of other) {\n            extraFiles.push({\n              path: getPropPathPortion(propPath, rootSchema, rootValue) + '/' + key,\n              contents,\n              parent: undefined\n            });\n          }\n          const allowedDirectories = new Set(schema.directories);\n          for (const [directory, contents] of external) {\n            if (!allowedDirectories.has(directory)) {\n              throw new Error(`Invalid directory ${directory} in content field serialization`);\n            }\n            for (const [filename, fileContents] of contents) {\n              extraFiles.push({\n                path: filename,\n                contents: fileContents,\n                parent: directory\n              });\n            }\n          }\n          return forYaml;\n        }\n        return schema.serialize(value).value;\n      },\n      object(_schema, value) {\n        return Object.fromEntries(Object.entries(value).filter(([_, val]) => val !== undefined));\n      },\n      array(_schema, value) {\n        return value.map(val => val === undefined ? null : val);\n      },\n      child() {\n        return undefined;\n      }\n    }),\n    extraFiles\n  };\n}\nfunction getPropPathPortion(path, schema, value) {\n  const end = [];\n  for (const portion of path) {\n    if (schema.kind === 'array') {\n      value = value[portion];\n      if (schema.slugField && schema.element.kind === 'object') {\n        const slug = getSlugFromState({\n          schema: schema.element.fields,\n          slugField: schema.slugField\n        }, value);\n        end.push(slug);\n      } else {\n        end.push(portion);\n      }\n      schema = schema.element;\n      continue;\n    }\n    end.push(portion);\n    if (schema.kind === 'object') {\n      value = value[portion];\n      schema = schema.fields[portion];\n      continue;\n    }\n    if (schema.kind === 'conditional') {\n      if (portion === 'discriminant') {\n        schema = schema.discriminant;\n      } else if (portion === 'value') {\n        schema = schema.values[value.discriminant];\n      }\n      value = value[portion];\n      continue;\n    }\n    throw new Error(`unexpected ${schema.kind}`);\n  }\n  return end.join('/');\n}\n\nfunction toInline(nodes) {\n  return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('inline', {}, nodes.flatMap(toMarkdocInline));\n}\nconst markToMarkdoc = {\n  bold: {\n    type: 'strong'\n  },\n  code: {\n    type: 'code'\n  },\n  italic: {\n    type: 'em'\n  },\n  underline: {\n    type: 'tag',\n    tag: 'u'\n  },\n  keyboard: {\n    type: 'tag',\n    tag: 'kbd'\n  },\n  strikethrough: {\n    type: 's'\n  },\n  subscript: {\n    type: 'tag',\n    tag: 'sub'\n  },\n  superscript: {\n    type: 'tag',\n    tag: 'sup'\n  }\n};\nfunction toMarkdocInline(node) {\n  var _exec, _exec2;\n  if (node.type === 'link') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('link', {\n      href: node.href\n    }, node.children.flatMap(toMarkdocInline));\n  }\n  if (node.type !== undefined) {\n    throw new Error(`unexpected inline node type: ${node.type}`);\n  }\n  const marks = Object.keys(node).filter(mark => mark !== 'text' && mark !== 'code').sort();\n  const leadingWhitespace = (_exec = /^\\s+/.exec(node.text)) === null || _exec === void 0 ? void 0 : _exec[0];\n  const trailingWhitespace = (_exec2 = /\\s+$/.exec(node.text)) === null || _exec2 === void 0 ? void 0 : _exec2[0];\n  let children = node.code ? [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('code', {\n    content: node.text.trim()\n  }, [])] : [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('text', {\n    content: node.text.trim()\n  })];\n  for (const mark of marks) {\n    const config = markToMarkdoc[mark];\n    if (config) {\n      children = [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node(config.type, {}, children, config.tag)];\n    }\n  }\n  if (leadingWhitespace !== null && leadingWhitespace !== void 0 && leadingWhitespace.length) {\n    children.unshift(new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('text', {\n      content: leadingWhitespace\n    }, []));\n  }\n  if (trailingWhitespace !== null && trailingWhitespace !== void 0 && trailingWhitespace.length) {\n    children.push(new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('text', {\n      content: trailingWhitespace\n    }, []));\n  }\n  return children;\n}\nfunction toMarkdocDocument(nodes, _config) {\n  const extraFiles = [];\n  const config = {\n    ..._config,\n    extraFiles\n  };\n  const node = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('document', {}, nodes.flatMap(x => toMarkdoc(x, config)));\n  return {\n    node,\n    extraFiles\n  };\n}\nfunction toChildrenAndProps(childrenAsMarkdoc, resultingChildren, value, singleChildField) {\n  if (singleChildField.kind === 'child') {\n    const child = childrenAsMarkdoc.find(x => areArraysEqual(x.propPath, singleChildField.relativePath));\n    if (child) {\n      resultingChildren.push(...child.children);\n    }\n    return;\n  }\n  if (singleChildField.kind === 'array') {\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    const valueAtPropPath = parent[key];\n    delete parent[key];\n    const childNodes = new Map();\n    for (const child of childrenAsMarkdoc) {\n      const innerPropPath = child.propPath.slice(singleChildField.relativePath.length + 1);\n      const num = child.propPath[singleChildField.relativePath.length];\n      if (childNodes.get(num) === undefined) {\n        childNodes.set(num, []);\n      }\n      childNodes.get(num).push({\n        children: child.children,\n        propPath: innerPropPath\n      });\n    }\n    resultingChildren.push(...valueAtPropPath.map((x, i) => {\n      var _childNodes$get;\n      const newChildrenAsMarkdoc = (_childNodes$get = childNodes.get(i)) !== null && _childNodes$get !== void 0 ? _childNodes$get : [];\n      const children = [];\n      toChildrenAndProps(newChildrenAsMarkdoc, children, x, singleChildField.child);\n      return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', x, children, singleChildField.asChildTag);\n    }));\n  }\n}\nfunction toMarkdoc(node, config) {\n  if (node.type === 'paragraph') {\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('paragraph', node.textAlign ? {\n      textAlign: node.textAlign\n    } : {}, [toInline(node.children)]);\n    if (node.textAlign) {\n      markdocNode.annotations.push({\n        name: 'textAlign',\n        value: node.textAlign,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  if (node.type === 'image') {\n    config.extraFiles.push({\n      contents: node.src.content,\n      path: node.src.filename,\n      parent: typeof config.documentFeatures.images === 'object' && typeof config.documentFeatures.images.directory === 'string' ? fixPath(config.documentFeatures.images.directory) : undefined\n    });\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('paragraph', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('inline', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('image', {\n      src: encodeURI(`${getSrcPrefixForImageBlock(config.documentFeatures, config.slug)}${node.src.filename}`),\n      alt: node.alt,\n      title: node.title\n    })])]);\n  }\n  if (node.type === 'code') {\n    const extraAttributes = {};\n    const {\n      children,\n      language,\n      type,\n      ...rest\n    } = node;\n    const schema = typeof config.documentFeatures.formatting.blockTypes.code === 'object' ? config.documentFeatures.formatting.blockTypes.code.schema : undefined;\n    if (schema && Object.keys(schema.fields).length > 0) {\n      const serialized = serializeProps(getInitialPropsValueFromInitializer(schema, rest), schema, undefined, config.slug, false);\n      Object.assign(extraAttributes, serialized.value);\n      config.extraFiles.push(...serialized.extraFiles);\n    }\n    let content = children[0].text + '\\n';\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('fence', {\n      content,\n      language,\n      ...extraAttributes\n    }, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('text', {\n      content\n    })]);\n    for (const [key, value] of Object.entries(extraAttributes)) {\n      markdocNode.annotations.push({\n        name: key,\n        value,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  const _toMarkdoc = node => toMarkdoc(node, config);\n  if (node.type === 'blockquote') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('blockquote', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'divider') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('hr');\n  }\n  if (node.type === 'table') {\n    const head = node.children.find(x => x.type === 'table-head');\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('table', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('thead', {}, head ? head.children.map(_toMarkdoc) : []), _toMarkdoc(node.children.find(x => x.type === 'table-body'))])], 'table');\n  }\n  if (node.type === 'table-body') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tbody', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'table-row') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tr', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'table-cell') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node(node.header ? 'th' : 'td', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'heading') {\n    const extraAttributes = {};\n    if (node.textAlign) {\n      extraAttributes.textAlign = node.textAlign;\n    }\n    const {\n      children,\n      level,\n      textAlign,\n      type,\n      ...rest\n    } = node;\n    const schema = config.documentFeatures.formatting.headings.schema;\n    if (Object.keys(schema.fields).length > 0) {\n      Object.assign(extraAttributes, serializeProps(getInitialPropsValueFromInitializer(schema, rest), schema, undefined, config.slug, false).value);\n    }\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('heading', {\n      level: node.level,\n      ...extraAttributes\n    }, [toInline(node.children)]);\n    for (const [key, value] of Object.entries(extraAttributes)) {\n      markdocNode.annotations.push({\n        name: key,\n        value,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  if (node.type === 'ordered-list') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('list', {\n      ordered: true\n    }, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'unordered-list') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('list', {\n      ordered: false\n    }, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'layout') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', {\n      layout: node.layout\n    }, node.children.map(_toMarkdoc), 'layout');\n  }\n  if (node.type === 'layout-area') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', {}, node.children.flatMap(_toMarkdoc), 'layout-area');\n  }\n  if (node.type === 'component-block') {\n    const isVoid = node.children.length === 1 && node.children[0].type === 'component-inline-prop' && node.children[0].propPath === undefined;\n    const componentBlock = config.componentBlocks[node.component];\n    const childrenAsMarkdoc = [];\n    for (const child of node.children) {\n      if ((child.type === 'component-block-prop' || child.type === 'component-inline-prop') && child.propPath !== undefined) {\n        childrenAsMarkdoc.push({\n          type: child.type,\n          propPath: child.propPath,\n          children: child.type === 'component-block-prop' ? child.children.flatMap(_toMarkdoc) : [toInline(child.children)]\n        });\n      }\n    }\n    let attributes = node.props;\n    if (componentBlock) {\n      const serialized = serializeProps(node.props, {\n        kind: 'object',\n        fields: componentBlock.schema\n      }, undefined, config.slug, false);\n      attributes = serialized.value;\n      config.extraFiles.push(...serialized.extraFiles);\n      const singleChildField = findSingleChildField({\n        kind: 'object',\n        fields: componentBlock.schema\n      });\n      if (singleChildField) {\n        const children = [];\n        toChildrenAndProps(childrenAsMarkdoc, children, attributes, singleChildField);\n        return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', attributes, children, node.component);\n      }\n    }\n    const children = isVoid ? [] : childrenAsMarkdoc.map(x => new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', {\n      propPath: x.propPath\n    }, x.children, x.type));\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', attributes, children, node.component);\n  }\n  if (node.type === 'component-block-prop' || node.type === 'component-inline-prop') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('tag', {\n      propPath: node.propPath\n    }, node.type === 'component-inline-prop' ? [toInline(node.children)] : node.children.flatMap(_toMarkdoc), node.type);\n  }\n  if (node.type === 'list-item') {\n    const listItemContent = node.children[0];\n    if (listItemContent.type !== 'list-item-content') {\n      throw new Error('list item content must contain a list-item-content');\n    }\n    const inline = toInline(listItemContent.children);\n    const children = [inline];\n    const nestedList = node.children[1];\n    if (nestedList) {\n      children.push(toMarkdoc(nestedList, config));\n    }\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__.Ast.Node('item', {}, children);\n  }\n  if (node.type === 'list-item-content') {\n    throw new Error('list-item-content in unexpected position');\n  }\n  debugger;\n  throw new Error(`unexpected node type: ${node.type}`);\n}\n\nfunction validateText(val, min, max, fieldLabel, slugInfo) {\n  if (val.length < min) {\n    if (min === 1) {\n      return `${fieldLabel} must not be empty`;\n    } else {\n      return `${fieldLabel} must be at least ${min} characters long`;\n    }\n  }\n  if (val.length > max) {\n    return `${fieldLabel} must be no longer than ${max} characters`;\n  }\n  if (slugInfo) {\n    if (val === '') {\n      return `${fieldLabel} must not be empty`;\n    }\n    if (val === '..') {\n      return `${fieldLabel} must not be ..`;\n    }\n    if (val === '.') {\n      return `${fieldLabel} must not be .`;\n    }\n    if (slugInfo.glob === '**') {\n      const split = val.split('/');\n      if (split.some(s => s === '..')) {\n        return `${fieldLabel} must not contain ..`;\n      }\n      if (split.some(s => s === '.')) {\n        return `${fieldLabel} must not be .`;\n      }\n    }\n    if ((slugInfo.glob === '*' ? /[\\\\/]/ : /[\\\\]/).test(val)) {\n      return `${fieldLabel} must not contain slashes`;\n    }\n    if (/^\\s|\\s$/.test(val)) {\n      return `${fieldLabel} must not start or end with spaces`;\n    }\n    if (slugInfo.slugs.has(val)) {\n      return `${fieldLabel} must be unique`;\n    }\n  }\n}\n\nfunction AddToPathProvider(props) {\n  const path = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PathContext);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PathContext.Provider, {\n    value: (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => path.concat(props.part), [path, props.part]),\n    children: props.children\n  });\n}\nconst SlugFieldContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(undefined);\nconst SlugFieldProvider = SlugFieldContext.Provider;\nconst PathContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)([]);\nconst PathContextProvider = PathContext.Provider;\n\nfunction TextFieldInput(props) {\n  const TextFieldComponent = props.multiline ? _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextArea : _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField;\n  const [blurred, setBlurred] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const slugContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SlugFieldContext);\n  const path = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(PathContext);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TextFieldComponent, {\n    label: props.label,\n    description: props.description,\n    autoFocus: props.autoFocus,\n    value: props.value,\n    onChange: props.onChange,\n    onBlur: () => setBlurred(true),\n    isRequired: props.min > 0,\n    errorMessage: props.forceValidation || blurred ? validateText(props.value, props.min, props.max, props.label, path.length === 1 && (slugContext === null || slugContext === void 0 ? void 0 : slugContext.field) === path[0] ? slugContext : undefined) : undefined\n  });\n}\n\nfunction parseAsNormalField(value) {\n  if (value === undefined) {\n    return '';\n  }\n  if (typeof value !== 'string') {\n    throw new FieldDataError('Must be a string');\n  }\n  return value;\n}\nconst emptySet = new Set();\nfunction text({\n  label,\n  defaultValue = '',\n  validation: {\n    length: {\n      max = Infinity,\n      min = 0\n    } = {}\n  } = {},\n  description,\n  multiline = false\n}) {\n  function validate(value, slugField) {\n    const message = validateText(value, min, max, label, slugField);\n    if (message !== undefined) {\n      throw new FieldDataError(message);\n    }\n    return value;\n  }\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TextFieldInput, {\n        label: label,\n        description: description,\n        min: min,\n        max: max,\n        multiline: multiline,\n        ...props\n      });\n    },\n    defaultValue() {\n      return typeof defaultValue === 'string' ? defaultValue : defaultValue();\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return args.slug;\n      }\n      return parseAsNormalField(value);\n    },\n    serialize(value) {\n      return {\n        value: value === '' ? undefined : value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        slug: value,\n        value: undefined\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseAsNormalField(value);\n        return validate(parsed, undefined);\n      },\n      parseWithSlug(_value, args) {\n        validate(parseAsNormalField(args.slug), {\n          glob: args.glob,\n          slugs: emptySet\n        });\n        return null;\n      }\n    },\n    validate(value, args) {\n      return validate(value, args === null || args === void 0 ? void 0 : args.slugField);\n    }\n  };\n}\n\nconst FIELD_GRID_COLUMNS = 12;\nconst FieldContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  span: FIELD_GRID_COLUMNS\n});\nconst useFieldContext = () => (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(FieldContext);\nconst FieldContextProvider = FieldContext.Provider;\n\nfunction ObjectFieldInput({\n  schema,\n  autoFocus,\n  fields,\n  forceValidation\n}) {\n  validateLayout(schema);\n  const firstFocusable = autoFocus ? findFocusableObjectFieldKey(schema) : undefined;\n  const inner = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Grid, {\n    columns: `repeat(${FIELD_GRID_COLUMNS}, minmax(auto, 1fr))`,\n    columnGap: \"medium\",\n    rowGap: \"xlarge\",\n    children: Object.entries(fields).map(([key, propVal], index) => {\n      var _schema$layout$index, _schema$layout;\n      let span = (_schema$layout$index = (_schema$layout = schema.layout) === null || _schema$layout === void 0 ? void 0 : _schema$layout[index]) !== null && _schema$layout$index !== void 0 ? _schema$layout$index : FIELD_GRID_COLUMNS;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FieldContextProvider, {\n        value: {\n          span\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n          className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n            gridColumn: `span ${span}`,\n            [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.containerQueries.below.tablet]: {\n              gridColumn: `span ${FIELD_GRID_COLUMNS}`\n            }\n          }),\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AddToPathProvider, {\n            part: key,\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InnerFormValueContentFromPreviewProps, {\n              forceValidation: forceValidation,\n              autoFocus: key === firstFocusable,\n              marginBottom: \"xlarge\",\n              ...propVal\n            })\n          })\n        })\n      }, key);\n    })\n  });\n  const id = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  if (!schema.label) {\n    return inner;\n  }\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Grid, {\n    role: \"group\",\n    gap: \"medium\",\n    marginY: \"xlarge\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": schema.description ? descriptionId : undefined,\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      color: \"neutralEmphasis\",\n      size: \"medium\",\n      weight: \"semibold\",\n      id: labelId,\n      children: schema.label\n    }), !!schema.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      id: descriptionId,\n      size: \"regular\",\n      color: \"neutralSecondary\",\n      children: schema.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {}), inner]\n  });\n}\nfunction validateLayout(schema) {\n  if (!schema.layout) {\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(schema.layout.length === Object.keys(schema.fields).length, 'A column \"span\" is required for every field in the layout');\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(schema.layout.every(span => span > 0), 'The layout must not contain empty columns');\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(schema.layout.every(span => span <= 12), 'Fields may not span more than 12 columns');\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(schema.layout.reduce((acc, cur) => acc + cur, 0) % 12 === 0, 'The layout must span exactly 12 columns');\n}\nfunction findFocusableObjectFieldKey(schema) {\n  for (const [key, innerProp] of Object.entries(schema.fields)) {\n    const childFocusable = canFieldBeFocused(innerProp);\n    if (childFocusable) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction canFieldBeFocused(schema) {\n  if (schema.kind === 'array' || schema.kind === 'conditional' || schema.kind === 'form') {\n    return true;\n  }\n  if (schema.kind === 'child') {\n    return false;\n  }\n  if (schema.kind === 'object') {\n    for (const innerProp of Object.values(schema.fields)) {\n      if (canFieldBeFocused(innerProp)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nfunction ConditionalFieldInput({\n  schema,\n  autoFocus,\n  discriminant,\n  onChange,\n  value,\n  forceValidation\n}) {\n  const schemaDiscriminant = schema.discriminant;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n    gap: \"xlarge\",\n    direction: \"column\",\n    children: [(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AddToPathProvider, {\n      part: \"discriminant\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(schemaDiscriminant.Input, {\n        autoFocus: !!autoFocus,\n        value: discriminant,\n        onChange: onChange,\n        forceValidation: forceValidation\n      })\n    }), [autoFocus, schemaDiscriminant, discriminant, onChange, forceValidation]), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AddToPathProvider, {\n      part: \"value\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InnerFormValueContentFromPreviewProps, {\n        forceValidation: forceValidation,\n        ...value\n      })\n    })]\n  });\n}\n\nfunction castToMemoizedInfoForSchema(val) {\n  return val;\n}\nfunction getOrInsert(map, key, val) {\n  if (!map.has(key)) {\n    map.set(key, val(key));\n  }\n  return map.get(key);\n}\nconst childFieldData = new WeakMap();\nfunction storeChildFieldData(value) {\n  let key = {};\n  childFieldData.set(key, value);\n  return key;\n}\nfunction getChildFieldData(props) {\n  const val = childFieldData.get(props._);\n  if (!val) {\n    throw new Error('expected child field data to exist');\n  }\n  return val;\n}\nfunction createGetPreviewProps(rootSchema, rootOnChange, getChildFieldElement) {\n  const memoizedInfoForSchema = castToMemoizedInfoForSchema({\n    form(schema, onChange) {\n      return newVal => onChange(() => newVal);\n    },\n    array(schema, onChange) {\n      return {\n        rawOnChange: onChange,\n        inner: new Map(),\n        onChange(updater) {\n          onChange(value => updateValue(schema, value, updater));\n        }\n      };\n    },\n    child(schema, onChange) {\n      return newVal => onChange(() => newVal);\n    },\n    conditional(schema, onChange) {\n      return {\n        onChange: (discriminant, value) => onChange(val => updateValue(schema, val, {\n          discriminant,\n          value\n        })),\n        onChangeForValue: cb => onChange(val => ({\n          discriminant: val.discriminant,\n          value: cb(val.value)\n        }))\n      };\n    },\n    object(schema, onChange) {\n      return {\n        onChange: updater => {\n          onChange(value => updateValue(schema, value, updater));\n        },\n        innerOnChanges: Object.fromEntries(Object.keys(schema.fields).map(key => {\n          return [key, newVal => {\n            onChange(val => ({\n              ...val,\n              [key]: newVal(val[key])\n            }));\n          }];\n        }))\n      };\n    }\n  });\n  const previewPropsFactories = {\n    form(schema, value, onChange) {\n      return {\n        value: value,\n        onChange,\n        schema: schema\n      };\n    },\n    child(schema, value, onChange, path) {\n      return {\n        element: getChildFieldElement(path),\n        schema: schema,\n        _: storeChildFieldData({\n          value,\n          onChange\n        })\n      };\n    },\n    object(schema, value, memoized, path, getInnerProp) {\n      const fields = {};\n      for (const key of Object.keys(schema.fields)) {\n        fields[key] = getInnerProp(schema.fields[key], value[key], memoized.innerOnChanges[key], key);\n      }\n      const previewProps = {\n        fields,\n        onChange: memoized.onChange,\n        schema: schema\n      };\n      return previewProps;\n    },\n    array(schema, value, memoized, path, getInnerProp) {\n      const arrayValue = value;\n      const keys = getKeysForArrayValue(arrayValue);\n      const unusedKeys = new Set(getKeysForArrayValue(value));\n      const props = {\n        elements: arrayValue.map((val, i) => {\n          const key = keys[i];\n          unusedKeys.delete(key);\n          const element = getOrInsert(memoized.inner, key, () => {\n            const onChange = val => {\n              memoized.rawOnChange(prev => {\n                const keys = getKeysForArrayValue(prev);\n                const index = keys.indexOf(key);\n                const newValue = [...prev];\n                newValue[index] = val(newValue[index]);\n                setKeysForArrayValue(newValue, keys);\n                return newValue;\n              });\n            };\n            const element = getInnerProp(schema.element, val, onChange, key);\n            return {\n              element,\n              elementWithKey: {\n                ...element,\n                key\n              },\n              onChange\n            };\n          });\n          const currentInnerProp = getInnerProp(schema.element, val, element.onChange, key);\n          if (element.element !== currentInnerProp) {\n            element.element = currentInnerProp;\n            element.elementWithKey = {\n              ...currentInnerProp,\n              key\n            };\n          }\n          return element.elementWithKey;\n        }),\n        schema: schema,\n        onChange: memoized.onChange\n      };\n      for (const key of unusedKeys) {\n        memoized.inner.delete(key);\n      }\n      return props;\n    },\n    conditional(schema, value, memoized, path, getInnerProp) {\n      const props = {\n        discriminant: value.discriminant,\n        onChange: memoized.onChange,\n        value: getInnerProp(schema.values[value.discriminant.toString()], value.value, memoized.onChangeForValue, 'value'),\n        schema: schema\n      };\n      return props;\n    }\n  };\n  function getPreviewPropsForProp(schema, value, memoedThing, path, getInnerProp) {\n    return previewPropsFactories[schema.kind](schema, value, memoedThing, path, getInnerProp);\n  }\n  function getInitialMemoState(schema, value, onChange, path) {\n    const innerState = new Map();\n    const memoizedInfo = memoizedInfoForSchema[schema.kind](schema, onChange);\n    const state = {\n      value,\n      inner: innerState,\n      props: getPreviewPropsForProp(schema, value, memoizedInfo, path, (schema, value, onChange, key) => {\n        const state = getInitialMemoState(schema, value, onChange, path.concat(key));\n        innerState.set(key, state);\n        return state.props;\n      }),\n      schema: schema,\n      cached: memoizedInfo\n    };\n    return state;\n  }\n  function getUpToDateProps(schema, value, onChange, memoState, path) {\n    if (memoState.schema !== schema) {\n      Object.assign(memoState, getInitialMemoState(schema, value, onChange, path));\n      return memoState.props;\n    }\n    if (memoState.value === value) {\n      return memoState.props;\n    }\n    memoState.value = value;\n    const unusedKeys = new Set(memoState.inner.keys());\n    memoState.props = getPreviewPropsForProp(schema, value, memoState.cached, path, (schema, value, onChange, innerMemoStateKey) => {\n      unusedKeys.delete(innerMemoStateKey);\n      if (!memoState.inner.has(innerMemoStateKey)) {\n        const innerState = getInitialMemoState(schema, value, onChange, path.concat(innerMemoStateKey));\n        memoState.inner.set(innerMemoStateKey, innerState);\n        return innerState.props;\n      }\n      return getUpToDateProps(schema, value, onChange, memoState.inner.get(innerMemoStateKey), path.concat(innerMemoStateKey));\n    });\n    for (const key of unusedKeys) {\n      memoState.inner.delete(key);\n    }\n    return memoState.props;\n  }\n  let memoState;\n  return value => {\n    if (memoState === undefined) {\n      memoState = getInitialMemoState(rootSchema, value, rootOnChange, []);\n      return memoState.props;\n    }\n    return getUpToDateProps(rootSchema, value, rootOnChange, memoState, []);\n  };\n}\n\nconst previewPropsToValueConverter = {\n  child(props) {\n    const childFieldData = getChildFieldData(props);\n    return childFieldData.value;\n  },\n  form(props) {\n    return props.value;\n  },\n  array(props) {\n    const values = props.elements.map(x => previewPropsToValue(x));\n    setKeysForArrayValue(values, props.elements.map(x => x.key));\n    return values;\n  },\n  conditional(props) {\n    return {\n      discriminant: props.discriminant,\n      value: previewPropsToValue(props.value)\n    };\n  },\n  object(props) {\n    return Object.fromEntries(Object.entries(props.fields).map(([key, val]) => [key, previewPropsToValue(val)]));\n  }\n};\nfunction previewPropsToValue(props) {\n  return previewPropsToValueConverter[props.schema.kind](props);\n}\nconst valueToUpdaters = {\n  child(value) {\n    return value !== null && value !== void 0 ? value : undefined;\n  },\n  form(value) {\n    return value;\n  },\n  array(value, schema) {\n    const keys = getKeysForArrayValue(value);\n    return value.map((x, i) => ({\n      key: keys[i],\n      value: valueToUpdater(x, schema.element)\n    }));\n  },\n  conditional(value, schema) {\n    return {\n      discriminant: value.discriminant,\n      value: valueToUpdater(value.value, schema.values[value.discriminant.toString()])\n    };\n  },\n  object(value, schema) {\n    return Object.fromEntries(Object.entries(schema.fields).map(([key, schema]) => [key, valueToUpdater(value[key], schema)]));\n  }\n};\nfunction valueToUpdater(value, schema) {\n  return valueToUpdaters[schema.kind](value, schema);\n}\nfunction setValueToPreviewProps(value, props) {\n  if (isKind(props, 'child')) {\n    const {\n      onChange\n    } = getChildFieldData(props);\n    onChange(value);\n    return;\n  }\n  if (isKind(props, 'form') || isKind(props, 'object') || isKind(props, 'array')) {\n    props.onChange(valueToUpdater(value, props.schema));\n    return;\n  }\n  if (isKind(props, 'conditional')) {\n    const updater = valueToUpdater(value, props.schema);\n    props.onChange(updater.discriminant, updater.value);\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(props);\n}\n\n// this exists because for props.schema.kind === 'form', ts doesn't narrow props, only props.schema\nfunction isKind(props, kind) {\n  return props.schema.kind === kind;\n}\n\nfunction validateArrayLength(schema, val, path) {\n  var _schema$validation, _schema$validation2;\n  if (((_schema$validation = schema.validation) === null || _schema$validation === void 0 || (_schema$validation = _schema$validation.length) === null || _schema$validation === void 0 ? void 0 : _schema$validation.min) !== undefined && val.length < schema.validation.length.min) {\n    return new PropValidationError(new FieldDataError(`Must have at least ${schema.validation.length.min} element${schema.validation.length.min === 1 ? '' : 's'}`), path, schema);\n  }\n  if (((_schema$validation2 = schema.validation) === null || _schema$validation2 === void 0 || (_schema$validation2 = _schema$validation2.length) === null || _schema$validation2 === void 0 ? void 0 : _schema$validation2.max) !== undefined && val.length > schema.validation.length.max) {\n    return new PropValidationError(new FieldDataError(`Must have at most ${schema.validation.length.max} element${schema.validation.length.max === 1 ? '' : 's'}}`), path, schema);\n  }\n}\n\nclass PropValidationError extends Error {\n  constructor(cause, path, schema) {\n    super(`field error at ${path.join('.')}`, {\n      cause\n    });\n    this.path = path;\n    this.schema = schema;\n    this.cause = cause;\n  }\n}\nfunction toFormFieldStoredValue(val) {\n  if (val === null) {\n    return undefined;\n  }\n  return val;\n}\nconst isArray = Array.isArray;\nfunction parseProps(schema, _value, path, pathWithArrayFieldSlugs, parseFormField, /** This should be true for the reader and false elsewhere */\nvalidateArrayFieldLength) {\n  let value = toFormFieldStoredValue(_value);\n  if (schema.kind === 'form') {\n    try {\n      return parseFormField(schema, value, path, pathWithArrayFieldSlugs);\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n  }\n  if (schema.kind === 'child') {\n    return null;\n  }\n  if (schema.kind === 'conditional') {\n    if (value === undefined) {\n      return getInitialPropsValue(schema);\n    }\n    try {\n      if (typeof value !== 'object' || value === null || isArray(value)) {\n        throw new FieldDataError('Must be an object');\n      }\n      for (const key of Object.keys(value)) {\n        if (key !== 'discriminant' && key !== 'value') {\n          throw new FieldDataError(`Must only contain keys \"discriminant\" and \"value\", not \"${key}\"`);\n        }\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const parsedDiscriminant = parseProps(schema.discriminant, value.discriminant, path.concat('discriminant'), pathWithArrayFieldSlugs.concat('discriminant'), parseFormField, validateArrayFieldLength);\n    return {\n      discriminant: parsedDiscriminant,\n      value: parseProps(schema.values[parsedDiscriminant], value.value, path.concat('value'), pathWithArrayFieldSlugs.concat('value'), parseFormField, validateArrayFieldLength)\n    };\n  }\n  if (schema.kind === 'object') {\n    if (value === undefined) {\n      value = {};\n    }\n    try {\n      if (typeof value !== 'object' || value === null || isArray(value)) {\n        throw new FieldDataError('Must be an object');\n      }\n      const allowedKeysSet = new Set(Object.keys(schema.fields));\n      for (const key of Object.keys(value)) {\n        if (!allowedKeysSet.has(key)) {\n          throw new FieldDataError(`Key on object value \"${key}\" is not allowed`);\n        }\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const val = {};\n    const errors = [];\n    for (const key of Object.keys(schema.fields)) {\n      let individualVal = value[key];\n      try {\n        const propVal = parseProps(schema.fields[key], individualVal, path.concat(key), pathWithArrayFieldSlugs.concat(key), parseFormField, validateArrayFieldLength);\n        val[key] = propVal;\n      } catch (err) {\n        errors.push(err);\n      }\n    }\n    if (errors.length) {\n      throw new AggregateError(errors);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    if (value === undefined) {\n      return [];\n    }\n    try {\n      if (!isArray(value)) {\n        throw new FieldDataError('Must be an array');\n      }\n    } catch (err) {\n      throw new PropValidationError(err, path, schema);\n    }\n    const errors = [];\n    try {\n      if (validateArrayFieldLength) {\n        const error = validateArrayLength(schema, value, path);\n        if (error !== undefined) {\n          errors.push(error);\n        }\n      }\n      return value.map((innerVal, i) => {\n        try {\n          let slug = i.toString();\n          if (schema.slugField && typeof innerVal === 'object' && innerVal !== null && !isArray(innerVal)) {\n            if (schema.element.kind !== 'object') {\n              throw new Error('slugField on array fields requires the an object field element');\n            }\n            const slugField = schema.element.fields[schema.slugField];\n            if (!slugField) {\n              throw new Error(`slugField \"${schema.slugField}\" does not exist on object field`);\n            }\n            if (slugField.kind !== 'form') {\n              throw new Error(`slugField \"${schema.slugField}\" is not a form field`);\n            }\n            if (slugField.formKind !== 'slug') {\n              throw new Error(`slugField \"${schema.slugField}\" is not a slug field`);\n            }\n            let parsedSlugFieldValue;\n            try {\n              parsedSlugFieldValue = slugField.parse(toFormFieldStoredValue(innerVal[schema.slugField]), undefined);\n            } catch (err) {\n              throw new AggregateError([err]);\n            }\n            slug = slugField.serializeWithSlug(parsedSlugFieldValue).slug;\n          }\n          return parseProps(schema.element, innerVal, path.concat(i), pathWithArrayFieldSlugs.concat(slug), parseFormField, validateArrayFieldLength);\n        } catch (err) {\n          errors.push(err);\n        }\n      });\n    } finally {\n      if (errors.length) {\n        throw new AggregateError(errors);\n      }\n    }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nfunction flattenErrors(error) {\n  if (error instanceof AggregateError) {\n    return error.errors.flatMap(flattenErrors);\n  }\n  return [error];\n}\nfunction formatFormDataError(error) {\n  const flatErrors = flattenErrors(error);\n  return flatErrors.map(error => {\n    if (error instanceof PropValidationError) {\n      const path = error.path.join('.');\n      return `${path}: ${error.cause instanceof FieldDataError ? error.cause.message : `Unexpected error: ${error.cause}`}`;\n    }\n    return `Unexpected error: ${error}`;\n  }).join('\\n');\n}\nfunction toFormattedFormDataError(error) {\n  const formatted = formatFormDataError(error);\n  return new Error(`Field validation failed:\\n` + formatted);\n}\n\nfunction clientSideValidateProp(schema, value, slugField) {\n  try {\n    validateValueWithSchema(schema, value, slugField);\n    return true;\n  } catch (error) {\n    console.warn(toFormattedFormDataError(error));\n    return false;\n  }\n}\nfunction validateValueWithSchema(schema, value, slugField, path = []) {\n  switch (schema.kind) {\n    case 'child':\n      {\n        return;\n      }\n    case 'form':\n      {\n        try {\n          if (slugField && path[path.length - 1] === (slugField === null || slugField === void 0 ? void 0 : slugField.field)) {\n            schema.validate(value, {\n              slugField: {\n                slugs: slugField.slugs,\n                glob: slugField.glob\n              }\n            });\n            return;\n          }\n          schema.validate(value, undefined);\n        } catch (err) {\n          throw new PropValidationError(err, path, schema);\n        }\n        return;\n      }\n    case 'conditional':\n      {\n        schema.discriminant.validate(value.discriminant);\n        validateValueWithSchema(schema.values[value.discriminant], value.value, undefined, path.concat('value'));\n        return;\n      }\n    case 'object':\n      {\n        const errors = [];\n        for (const [key, childProp] of Object.entries(schema.fields)) {\n          try {\n            validateValueWithSchema(childProp, value[key], key === (slugField === null || slugField === void 0 ? void 0 : slugField.field) ? slugField : undefined, path.concat(key));\n          } catch (err) {\n            errors.push(err);\n          }\n        }\n        if (errors.length > 0) {\n          throw new AggregateError(errors);\n        }\n        return;\n      }\n    case 'array':\n      {\n        let slugInfo;\n        if (schema.slugField !== undefined && schema.element.kind === 'object') {\n          const innerSchema = schema.element.fields;\n          const {\n            slugField\n          } = schema;\n          slugInfo = {\n            slugField,\n            slugs: value.map(val => getSlugFromState({\n              schema: innerSchema,\n              slugField\n            }, val))\n          };\n        }\n        const errors = [];\n        const val = value;\n        const error = validateArrayLength(schema, value, path);\n        if (error !== undefined) {\n          errors.push(error);\n        }\n        for (const [idx, innerVal] of val.entries()) {\n          try {\n            validateValueWithSchema(schema.element, innerVal, slugInfo === undefined ? undefined : {\n              field: slugInfo.slugField,\n              slugs: new Set(slugInfo.slugs.filter((_, i) => idx !== i)),\n              glob: '*'\n            }, path.concat(idx));\n          } catch (err) {\n            errors.push(err);\n          }\n        }\n        if (errors.length > 0) {\n          throw new AggregateError(errors);\n        }\n        return;\n      }\n  }\n}\n\nfunction ArrayFieldInput(props) {\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const [modalState, setModalState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n    state: 'closed'\n  });\n  const onModalChange = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(cb => {\n    setModalState(state => {\n      if (state.state === 'open') {\n        return {\n          state: 'open',\n          forceValidation: state.forceValidation,\n          value: cb(state.value),\n          index: state.index\n        };\n      }\n      return state;\n    });\n  }, [setModalState]);\n  const formId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  const modalStateIndex = modalState.state === 'open' ? modalState.index : undefined;\n  const slugInfo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (props.schema.slugField === undefined || modalState.state !== 'open' || props.schema.element.kind !== 'object') {\n      return;\n    }\n    const val = previewPropsToValue(props);\n    const schema = props.schema.element.fields;\n    const slugField = props.schema.slugField;\n    const slugs = new Set(val.filter((x, i) => i !== modalStateIndex).map(x => getSlugFromState({\n      schema,\n      slugField\n    }, x)));\n    return {\n      slugs,\n      field: slugField,\n      glob: '*'\n    };\n  }, [modalStateIndex, props, modalState.state]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n    elementType: \"section\",\n    gap: \"medium\",\n    role: \"group\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": props.schema.description ? descriptionId : undefined,\n    direction: \"column\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldLabel, {\n      elementType: \"h3\",\n      id: labelId,\n      children: props.schema.label\n    }), props.schema.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      id: descriptionId,\n      size: \"small\",\n      color: \"neutralSecondary\",\n      children: props.schema.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      autoFocus: props.autoFocus,\n      onPress: () => {\n        setModalState({\n          state: 'open',\n          value: getInitialPropsValue(props.schema.element),\n          forceValidation: false,\n          index: undefined\n        });\n      },\n      alignSelf: \"start\",\n      children: stringFormatter.format('add')\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ArrayFieldListView, {\n      ...props,\n      labelId: labelId,\n      onOpenItem: idx => {\n        console.log(previewPropsToValue(props.elements[idx]));\n        setModalState({\n          state: 'open',\n          value: previewPropsToValue(props.elements[idx]),\n          forceValidation: false,\n          index: idx\n        });\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ArrayFieldValidationMessages, {\n      ...props\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: () => {\n        setModalState({\n          state: 'closed'\n        });\n      },\n      children: (() => {\n        if (modalState.state !== 'open' || props.schema.element.kind === 'child') {\n          return;\n        }\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n            children: \"Edit item\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n              id: formId,\n              elementType: \"form\",\n              onSubmit: event => {\n                if (event.target !== event.currentTarget) return;\n                event.preventDefault();\n                if (modalState.state !== 'open') return;\n                if (!clientSideValidateProp(props.schema.element, modalState.value, undefined)) {\n                  setModalState(state => ({\n                    ...state,\n                    forceValidation: true\n                  }));\n                  return;\n                }\n                if (modalState.index === undefined) {\n                  props.onChange([...props.elements.map(x => ({\n                    key: x.key\n                  })), {\n                    key: undefined,\n                    value: valueToUpdater(modalState.value, props.schema.element)\n                  }]);\n                } else {\n                  setValueToPreviewProps(modalState.value, props.elements[modalState.index]);\n                }\n                setModalState({\n                  state: 'closed'\n                });\n              },\n              direction: \"column\",\n              gap: \"xxlarge\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ArrayFieldItemModalContent, {\n                onChange: onModalChange,\n                schema: props.schema.element,\n                value: modalState.value,\n                slugField: slugInfo\n              })\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n              onPress: () => {\n                setModalState({\n                  state: 'closed'\n                });\n              },\n              children: stringFormatter.format('cancel')\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n              form: formId,\n              prominence: \"high\",\n              type: \"submit\",\n              children: modalState.index === undefined ? stringFormatter.format('add') : 'Done'\n            })]\n          })]\n        });\n      })()\n    })]\n  });\n}\nfunction ArrayFieldValidationMessages(props) {\n  var _props$schema$validat, _props$schema$validat2;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: props.forceValidation && (((_props$schema$validat = props.schema.validation) === null || _props$schema$validat === void 0 || (_props$schema$validat = _props$schema$validat.length) === null || _props$schema$validat === void 0 ? void 0 : _props$schema$validat.min) !== undefined && props.elements.length < props.schema.validation.length.min ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldMessage, {\n      children: [\"Must have at least \", props.schema.validation.length.min, \" item\", props.schema.validation.length.min === 1 ? '' : 's']\n    }) : ((_props$schema$validat2 = props.schema.validation) === null || _props$schema$validat2 === void 0 || (_props$schema$validat2 = _props$schema$validat2.length) === null || _props$schema$validat2 === void 0 ? void 0 : _props$schema$validat2.max) !== undefined && props.elements.length > props.schema.validation.length.max ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldMessage, {\n      children: [\"Must have at most \", props.schema.validation.length.max, \" item\", props.schema.validation.length.max === 1 ? '' : 's']\n    }) : undefined)\n  });\n}\nfunction ArrayFieldListView(props) {\n  let onMove = (keys, target) => {\n    const targetIndex = props.elements.findIndex(x => x.key === target.key);\n    if (targetIndex === -1) return;\n    const allKeys = props.elements.map(x => ({\n      key: x.key\n    }));\n    const indexToMoveTo = target.dropPosition === 'before' ? targetIndex : targetIndex + 1;\n    const indices = keys.map(key => allKeys.findIndex(x => x.key === key));\n    props.onChange(move(allKeys, indices, indexToMoveTo));\n  };\n  const dragType = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => Math.random().toString(36), []);\n  let {\n    dragAndDropHooks\n  } = (0,_keystar_ui_drag_and_drop__WEBPACK_IMPORTED_MODULE_13__.useDragAndDrop)({\n    getItems(keys) {\n      // Use a drag type so the items can only be reordered within this list\n      // and not dragged elsewhere.\n      return [...keys].map(key => {\n        key = JSON.stringify(key);\n        return {\n          [dragType]: key,\n          'text/plain': key\n        };\n      });\n    },\n    getAllowedDropOperations() {\n      return ['move', 'cancel'];\n    },\n    async onDrop(e) {\n      if (e.target.type !== 'root' && e.target.dropPosition !== 'on') {\n        let keys = [];\n        for (let item of e.items) {\n          if (item.kind === 'text') {\n            let key;\n            if (item.types.has(dragType)) {\n              key = JSON.parse(await item.getText(dragType));\n              keys.push(key);\n            } else if (item.types.has('text/plain')) {\n              // Fallback for Chrome Android case: https://bugs.chromium.org/p/chromium/issues/detail?id=1293803\n              // Multiple drag items are contained in a single string so we need to split them out\n              key = await item.getText('text/plain');\n              keys = key.split('\\n').map(val => val.replaceAll('\"', ''));\n            }\n          }\n        }\n        onMove(keys, e.target);\n      }\n    },\n    getDropOperation(target) {\n      if (target.type === 'root' || target.dropPosition === 'on') {\n        return 'cancel';\n      }\n      return 'move';\n    }\n  });\n  const onRemoveKey = useEventCallback(key => {\n    props.onChange(props.elements.map(x => ({\n      key: x.key\n    })).filter(val => val.key !== key));\n  });\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_16__.ListView, {\n    \"aria-labelledby\": props.labelId,\n    items: props.elements,\n    dragAndDropHooks: dragAndDropHooks,\n    height: props.elements.length ? undefined : 'scale.2000',\n    renderEmptyState: () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      direction: \"column\",\n      gap: \"large\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      padding: \"regular\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        elementType: \"h3\",\n        align: \"center\",\n        color: \"neutralSecondary\",\n        size: \"large\",\n        weight: \"medium\",\n        children: \"Empty list\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n        align: \"center\",\n        color: \"neutralTertiary\",\n        children: \"Add the first item to see it here.\"\n      })]\n    }),\n    onAction: key => {\n      const idx = props.elements.findIndex(x => x.key === key);\n      if (idx === -1) return;\n      props.onOpenItem(idx);\n    },\n    children: item => {\n      var _props$schema$itemLab, _props$schema;\n      const label = ((_props$schema$itemLab = (_props$schema = props.schema).itemLabel) === null || _props$schema$itemLab === void 0 ? void 0 : _props$schema$itemLab.call(_props$schema, item)) || `Item ${props.elements.indexOf(item) + 1}`;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_16__.Item, {\n        textValue: label,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: label\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n          placement: \"start\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n            onPress: () => {\n              onRemoveKey(item.key);\n            },\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n              src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n            tone: \"critical\",\n            children: stringFormatter.format('delete')\n          })]\n        })]\n      }, item.key);\n    }\n  });\n}\n\n// https://github.com/adobe/react-spectrum/blob/97ff9f95d91befaf87251e52ea484f81daae8f3a/packages/%40react-stately/data/src/useListData.ts#L263\nfunction move(items, indices, toIndex) {\n  // Shift the target down by the number of items being moved from before the target\n  toIndex -= indices.filter(index => index < toIndex).length;\n  let moves = indices.map(from => ({\n    from,\n    to: toIndex++\n  }));\n\n  // Shift later from indices down if they have a larger index\n  for (let i = 0; i < moves.length; i++) {\n    let a = moves[i].from;\n    for (let j = i; j < moves.length; j++) {\n      let b = moves[j].from;\n      if (b > a) {\n        moves[j].from--;\n      }\n    }\n  }\n\n  // Interleave the moves so they can be applied one by one rather than all at once\n  for (let i = 0; i < moves.length; i++) {\n    let a = moves[i];\n    for (let j = moves.length - 1; j > i; j--) {\n      let b = moves[j];\n      if (b.from < a.to) {\n        a.to++;\n      } else {\n        b.from++;\n      }\n    }\n  }\n  let copy = items.slice();\n  for (let move of moves) {\n    let [item] = copy.splice(move.from, 1);\n    copy.splice(move.to, 0, item);\n  }\n  return copy;\n}\nfunction ArrayFieldItemModalContent(props) {\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => createGetPreviewProps(props.schema, props.onChange, () => undefined), [props.schema, props.onChange])(props.value);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValueContentFromPreviewProps, {\n    slugField: props.slugField,\n    autoFocus: true,\n    ...previewProps\n  });\n}\n\nconst isListType = type => type === 'ordered-list' || type === 'unordered-list';\nconst isListNode = node => isListType(node.type);\nfunction getAncestorList(editor) {\n  if (editor.selection) {\n    const listItem = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: nodeTypeMatcher('list-item')\n    });\n    const list = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: isListNode\n    });\n    if (listItem && list) {\n      return {\n        isInside: true,\n        listItem,\n        list\n      };\n    }\n  }\n  return {\n    isInside: false\n  };\n}\nfunction withList(editor) {\n  const {\n    insertBreak,\n    normalizeNode,\n    deleteBackward\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection) {\n      const ancestorList = getAncestorList(editor);\n      if (ancestorList.isInside && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isStart(editor, editor.selection.anchor, ancestorList.list[1])) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          match: isListNode,\n          split: true\n        });\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.insertBreak = () => {\n    const [listItem] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n      match: node => node.type === 'list-item',\n      mode: 'lowest'\n    });\n    if (listItem && slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(listItem[0]) === '') {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n        match: isListNode,\n        split: true\n      });\n      return;\n    }\n    insertBreak();\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node) || slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(node)) {\n      const isElementBeingNormalizedAList = isListNode(node);\n      for (const [childNode, childPath] of slate__WEBPACK_IMPORTED_MODULE_104__.Node.children(editor, path)) {\n        const index = childPath[childPath.length - 1];\n        // merge sibling lists\n        if (isListNode(childNode)) {\n          var _node$children;\n          if (((_node$children = node.children[childPath[childPath.length - 1] + 1]) === null || _node$children === void 0 ? void 0 : _node$children.type) === childNode.type) {\n            const siblingNodePath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(childPath);\n            moveChildren(editor, siblingNodePath, [...childPath, childNode.children.length]);\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: siblingNodePath\n            });\n            return;\n          }\n          if (isElementBeingNormalizedAList) {\n            const previousChild = node.children[index - 1];\n            if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(previousChild)) {\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n                at: childPath,\n                to: [...slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(childPath), previousChild.children.length - 1]\n              });\n            } else {\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n                at: childPath\n              });\n            }\n            return;\n          }\n        }\n        if (node.type === 'list-item' && childNode.type !== 'list-item-content' && index === 0 && isBlock(childNode)) {\n          if (path[path.length - 1] !== 0) {\n            const previousChild = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(path));\n            if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(previousChild)) {\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n                at: path,\n                to: [...slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(path), previousChild.children.length]\n              });\n              return;\n            }\n          }\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n            at: childPath\n          });\n          return;\n        }\n        if (node.type === 'list-item' && childNode.type === 'list-item-content' && index !== 0) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.splitNodes(editor, {\n            at: childPath\n          });\n          return;\n        }\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nconst ToolbarStateContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createContext(null);\nfunction useToolbarState() {\n  const toolbarState = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ToolbarStateContext);\n  if (!toolbarState) {\n    throw new Error('ToolbarStateProvider must be used to use useToolbarState');\n  }\n  return toolbarState;\n}\nconst createToolbarState = (editor, componentBlocks, editorDocumentFeatures) => {\n  const locationDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks) || {\n    kind: 'block',\n    inlineMarks: 'inherit',\n    documentFeatures: {\n      dividers: true,\n      formatting: {\n        alignment: {\n          center: true,\n          end: true\n        },\n        blockTypes: {\n          blockquote: true,\n          code: editorDocumentFeatures.formatting.blockTypes.code\n        },\n        headings: editorDocumentFeatures.formatting.headings,\n        listTypes: {\n          ordered: true,\n          unordered: true\n        }\n      },\n      layouts: editorDocumentFeatures.layouts,\n      links: true,\n      images: editorDocumentFeatures.images,\n      tables: true\n    },\n    softBreaks: true,\n    componentBlocks: true\n  };\n  let [maybeCodeBlockEntry] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: node => node.type !== 'code' && isBlock(node)\n  });\n  const editorMarks = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.marks(editor) || {};\n  const marks = Object.fromEntries(allMarks.map(mark => [mark, {\n    isDisabled: locationDocumentFeatures.inlineMarks !== 'inherit' && !locationDocumentFeatures.inlineMarks[mark] || !maybeCodeBlockEntry,\n    isSelected: !!editorMarks[mark]\n  }]));\n\n  // Editor.marks is \"what are the marks that would be applied if text was inserted now\"\n  // that's not really the UX we want, if we have some a document like this\n  // <paragraph>\n  //   <text>\n  //     <anchor />\n  //     content\n  //   </text>\n  //   <text bold>bold</text>\n  //   <text>\n  //     content\n  //     <focus />\n  //   </text>\n  // </paragraph>\n\n  // we want bold to be shown as selected even though if you inserted text from that selection, it wouldn't be bold\n  // so we look at all the text nodes in the selection to get their marks\n  // but only if the selection is expanded because if you're in the middle of some text\n  // with your selection collapsed with a mark but you've removed it(i.e. editor.removeMark)\n  // the text nodes you're in will have the mark but the ui should show the mark as not being selected\n  if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isExpanded(editor.selection)) {\n    for (const node of slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n      match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText\n    })) {\n      for (const key of Object.keys(node[0])) {\n        if (key === 'insertMenu' || key === 'text') {\n          continue;\n        }\n        if (key in marks) {\n          marks[key].isSelected = true;\n        }\n      }\n    }\n  }\n  let [headingEntry] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: nodeTypeMatcher('heading')\n  });\n  let [listEntry] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: isListNode\n  });\n  let [alignableEntry] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: nodeTypeMatcher('paragraph', 'heading')\n  });\n\n  // (we're gonna use markdown here because the equivelant slate structure is quite large and doesn't add value here)\n  // let's imagine a document that looks like this:\n  // - thing\n  //   1. something<cursor />\n  // in the toolbar, you don't want to see that both ordered and unordered lists are selected\n  // you want to see only ordered list selected, because\n  // - you want to know what list you're actually in, you don't really care about the outer list\n  // - when you want to change the list to a unordered list, the unordered list button should be inactive to show you can change to it\n  const listTypeAbove = getListTypeAbove(editor);\n  return {\n    marks,\n    textStyles: {\n      selected: headingEntry ? headingEntry[0].level : 'normal',\n      allowedHeadingLevels: locationDocumentFeatures.kind === 'block' && !listEntry ? locationDocumentFeatures.documentFeatures.formatting.headings.levels : []\n    },\n    code: {\n      isSelected: isElementActive(editor, 'code'),\n      isDisabled: !(locationDocumentFeatures.kind === 'block' && locationDocumentFeatures.documentFeatures.formatting.blockTypes.code)\n    },\n    lists: {\n      ordered: {\n        isSelected: isElementActive(editor, 'ordered-list') && (listTypeAbove === 'none' || listTypeAbove === 'ordered-list'),\n        isDisabled: !(locationDocumentFeatures.kind === 'block' && locationDocumentFeatures.documentFeatures.formatting.listTypes.ordered && !headingEntry)\n      },\n      unordered: {\n        isSelected: isElementActive(editor, 'unordered-list') && (listTypeAbove === 'none' || listTypeAbove === 'unordered-list'),\n        isDisabled: !(locationDocumentFeatures.kind === 'block' && locationDocumentFeatures.documentFeatures.formatting.listTypes.unordered && !headingEntry)\n      }\n    },\n    alignment: {\n      isDisabled: !alignableEntry && !(locationDocumentFeatures.kind === 'block' && locationDocumentFeatures.documentFeatures.formatting.alignment),\n      selected: (alignableEntry === null || alignableEntry === void 0 ? void 0 : alignableEntry[0].textAlign) || 'start'\n    },\n    blockquote: {\n      isDisabled: !(locationDocumentFeatures.kind === 'block' && locationDocumentFeatures.documentFeatures.formatting.blockTypes.blockquote),\n      isSelected: isElementActive(editor, 'blockquote')\n    },\n    layouts: {\n      isSelected: isElementActive(editor, 'layout')\n    },\n    links: {\n      isDisabled: !editor.selection || slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) || !locationDocumentFeatures.documentFeatures.links,\n      isSelected: isElementActive(editor, 'link')\n    },\n    editor,\n    dividers: {\n      isDisabled: locationDocumentFeatures.kind === 'inline' || !locationDocumentFeatures.documentFeatures.dividers\n    },\n    clearFormatting: {\n      isDisabled: !(Object.values(marks).some(x => x.isSelected) || !!hasBlockThatClearsOnClearFormatting(editor))\n    },\n    editorDocumentFeatures\n  };\n};\nfunction hasBlockThatClearsOnClearFormatting(editor) {\n  const [node] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: node => node.type === 'heading' || node.type === 'code' || node.type === 'blockquote'\n  });\n  return !!node;\n}\nfunction getListTypeAbove(editor) {\n  const listAbove = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: isListNode\n  });\n  if (!listAbove) {\n    return 'none';\n  }\n  return listAbove[0].type;\n}\nconst DocumentEditorConfigContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useDocumentEditorConfig() {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(DocumentEditorConfigContext);\n  if (!context) {\n    throw new Error('useDocumentEditorConfig must be used within a DocumentEditorConfigContext.Provider');\n  }\n  return context;\n}\nconst ToolbarStateProvider = ({\n  children,\n  componentBlocks,\n  editorDocumentFeatures\n}) => {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlate)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DocumentEditorConfigContext.Provider, {\n    value: (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => ({\n      componentBlocks,\n      documentFeatures: editorDocumentFeatures\n    }), [componentBlocks, editorDocumentFeatures]),\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarStateContext.Provider, {\n      value: createToolbarState(editor, componentBlocks, editorDocumentFeatures),\n      children: children\n    })\n  });\n};\n\n/* eslint-disable */\nglobalThis.Prism = {\n  manual: true\n};\n\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = globalThis;\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0;\n\n  // The grammar object for plaintext\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    /**\n     * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n     * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n     * own worker, you don't want it to do this.\n     *\n     * By setting this value to `true`, Prism will not add its own listeners to the worker.\n     *\n     * You obviously have to change this value before Prism executes. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.disableWorkerMessageHandler = true;\n     * // Load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function (o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function (obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */{};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return /** @type {any} */clone;\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            ( /** @type {Array} */ /** @type {any} */o).forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return /** @type {any} */clone;\n          default:\n            return o;\n        }\n      },\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function (element) {\n        while (element) {\n          var m = lang.exec(element.className);\n          if (m) {\n            return m[1].toLowerCase();\n          }\n          element = element.parentElement;\n        }\n        return 'none';\n      },\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function (element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n        // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n        element.classList.add('language-' + language);\n      },\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function () {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n        if ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n          return /** @type {any} */document.currentScript;\n        }\n\n        // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n\n          var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n          return null;\n        }\n      },\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function (element, className, defaultActivation) {\n        var no = 'no-' + className;\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      }\n    },\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || ( /** @type {any} */_.languages);\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n            var propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function (async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function (container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n      _.hooks.run('before-highlightall', env);\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n      _.hooks.run('before-all-elements-highlight', env);\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function (element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n      var grammar = _.languages[language];\n\n      // Set language on the element, if not present\n      _.util.setLanguage(element, language);\n\n      // Set language on the parent, for styling\n      var parent = element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        _.util.setLanguage(parent, language);\n      }\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n        _.hooks.run('before-insert', env);\n        env.element.innerHTML = env.highlightedCode;\n        _.hooks.run('after-highlight', env);\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n      }\n      _.hooks.run('before-sanity-check', env);\n\n      // plugins may change/add the parent/element\n      parent = env.element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n        parent.setAttribute('tabindex', '0');\n      }\n      if (!env.code) {\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n        return;\n      }\n      _.hooks.run('before-highlight', env);\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      if (!env.grammar) {\n        throw new Error('The language \"' + env.language + '\" has no grammar.');\n      }\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function (text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function (name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function (name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n    _.hooks.run('wrap', env);\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n  }\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n        for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n          var str = currentNode.value;\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n          if (str instanceof Token) {\n            continue;\n          }\n          var removeCount = 1; // this is the to parameter of removeBetween\n          var match;\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n            if (!match || match.index >= text.length) {\n              break;\n            }\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n            if (!match) {\n              continue;\n            }\n          }\n\n          // eslint-disable-next-line no-redeclare\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n          var removeFrom = currentNode.prev;\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n            // the reach might have been extended because of the rematching\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data);\n        var lang = message.language;\n        var code = message.code;\n        var immediateClose = message.immediateClose;\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n    return _;\n  }\n\n  // Get current script and highlight\n  var script = _.util.currentScript();\n  if (script) {\n    _.filename = script.src;\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n  return _;\n}(_self);\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: RegExp(\n    // lookbehind\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n    // Regex pattern:\n    // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n    // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n    // with the only syntax, so we have to define 2 different regex patterns.\n    /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' +\n    // `v` flag syntax. This supports 3 levels of nested character classes.\n    /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' +\n    // lookahead\n    /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nPrism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n\n  // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n  var LOADING_MESSAGE = 'Loading…';\n  var FAILURE_MESSAGE = function (status, message) {\n    return '✖ Error ' + status + ' while fetching file: ' + message;\n  };\n  var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n  var EXTENSIONS = {\n    'js': 'javascript',\n    'py': 'python',\n    'rb': 'ruby',\n    'ps1': 'powershell',\n    'psm1': 'powershell',\n    'sh': 'bash',\n    'bat': 'batch',\n    'h': 'c',\n    'tex': 'latex'\n  };\n  var STATUS_ATTR = 'data-src-status';\n  var STATUS_LOADING = 'loading';\n  var STATUS_LOADED = 'loaded';\n  var STATUS_FAILED = 'failed';\n  var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n  /**\n   * Loads the given file.\n   *\n   * @param {string} src The URL or path of the source file to load.\n   * @param {(result: string) => void} success\n   * @param {(reason: string) => void} error\n   */\n  function loadFile(src, success, error) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', src, true);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status < 400 && xhr.responseText) {\n          success(xhr.responseText);\n        } else {\n          if (xhr.status >= 400) {\n            error(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n          } else {\n            error(FAILURE_EMPTY_MESSAGE);\n          }\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n  /**\n   * Parses the given range.\n   *\n   * This returns a range with inclusive ends.\n   *\n   * @param {string | null | undefined} range\n   * @returns {[number, number | undefined] | undefined}\n   */\n  function parseRange(range) {\n    var m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n    if (m) {\n      var start = Number(m[1]);\n      var comma = m[2];\n      var end = m[3];\n      if (!comma) {\n        return [start, start];\n      }\n      if (!end) {\n        return [start, undefined];\n      }\n      return [start, Number(end)];\n    }\n    return undefined;\n  }\n  Prism.hooks.add('before-highlightall', function (env) {\n    env.selector += ', ' + SELECTOR;\n  });\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre = /** @type {HTMLPreElement} */env.element;\n    if (pre.matches(SELECTOR)) {\n      env.code = ''; // fast-path the whole thing and go to complete\n\n      pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n      // add code element with loading message\n      var code = pre.appendChild(document.createElement('CODE'));\n      code.textContent = LOADING_MESSAGE;\n      var src = pre.getAttribute('data-src');\n      var language = env.language;\n      if (language === 'none') {\n        // the language might be 'none' because there is no language set;\n        // in this case, we want to use the extension as the language\n        var extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n        language = EXTENSIONS[extension] || extension;\n      }\n\n      // set language classes\n      Prism.util.setLanguage(code, language);\n      Prism.util.setLanguage(pre, language);\n\n      // preload the language\n      var autoloader = Prism.plugins.autoloader;\n      if (autoloader) {\n        autoloader.loadLanguages(language);\n      }\n\n      // load file\n      loadFile(src, function (text) {\n        // mark as loaded\n        pre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n        // handle data-range\n        var range = parseRange(pre.getAttribute('data-range'));\n        if (range) {\n          var lines = text.split(/\\r\\n?|\\n/g);\n\n          // the range is one-based and inclusive on both ends\n          var start = range[0];\n          var end = range[1] == null ? lines.length : range[1];\n          if (start < 0) {\n            start += lines.length;\n          }\n          start = Math.max(0, Math.min(start - 1, lines.length));\n          if (end < 0) {\n            end += lines.length;\n          }\n          end = Math.max(0, Math.min(end, lines.length));\n          text = lines.slice(start, end).join('\\n');\n\n          // add data-start for line numbers\n          if (!pre.hasAttribute('data-start')) {\n            pre.setAttribute('data-start', String(start + 1));\n          }\n        }\n\n        // highlight code\n        code.textContent = text;\n        Prism.highlightElement(code);\n      }, function (error) {\n        // mark as failed\n        pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n        code.textContent = error;\n      });\n    }\n  });\n  Prism.plugins.fileHighlight = {\n    /**\n     * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n     *\n     * Note: Elements which are already loaded or currently loading will not be touched by this method.\n     *\n     * @param {ParentNode} [container=document]\n     */\n    highlight: function highlight(container) {\n      var elements = (container || document).querySelectorAll(SELECTOR);\n      for (var i = 0, element; element = elements[i++];) {\n        Prism.highlightElement(element);\n      }\n    }\n  };\n  var logged = false;\n  /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n  Prism.fileHighlight = function () {\n    if (!logged) {\n      console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n      logged = true;\n    }\n    Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n  };\n})();\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'char': Prism.languages.c['char'],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete Prism.languages.c['boolean'];\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    },\n    // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n    // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n    // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' +\n      // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' +\n      // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\nPrism.languages.arduino = Prism.languages.extend('cpp', {\n  'keyword': /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n  'constant': /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n  'builtin': /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n});\nPrism.languages.ino = Prism.languages.arduino;\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [\n    // [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    },\n    // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    },\n    // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [\n    // a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight parameter names as variables\n    'parameter': {\n      pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [\n    // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    },\n    // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    },\n    // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n\n  /* Patterns in command substitution. */\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'parameter', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n  Prism.languages.sh = Prism.languages.bash;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n(function (Prism) {\n  /**\n   * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n   *\n   * Note: This is a simple text based replacement. Be careful when using backreferences!\n   *\n   * @param {string} pattern the given pattern.\n   * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n   * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n   * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n   */\n  function replace(pattern, replacements) {\n    return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n      return '(?:' + replacements[+index] + ')';\n    });\n  }\n  /**\n   * @param {string} pattern\n   * @param {string[]} replacements\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n  function re(pattern, replacements, flags) {\n    return RegExp(replace(pattern, replacements), flags || '');\n  }\n\n  /**\n   * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n   *\n   * @param {string} pattern\n   * @param {number} depthLog2\n   * @returns {string}\n   */\n  function nested(pattern, depthLog2) {\n    for (var i = 0; i < depthLog2; i++) {\n      pattern = pattern.replace(/<<self>>/g, function () {\n        return '(?:' + pattern + ')';\n      });\n    }\n    return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n  }\n\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n  var keywordKinds = {\n    // keywords which represent a return or variable type\n    type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n    // keywords which are used to declare a type\n    typeDeclaration: 'class enum interface record struct',\n    // contextual keywords\n    // (\"var\" and \"dynamic\" are missing because they are used like types)\n    contextual: 'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n    // all other keywords\n    other: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n  };\n\n  // keywords\n  function keywordsToPattern(words) {\n    return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n  }\n  var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n  var keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n  var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n  var nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n\n  // types\n  var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2); // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n  var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n  var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n  var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic]);\n  var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [nonTypeKeywords, genericName]);\n  var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n  var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [identifier, array]);\n  var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array]);\n  var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n  var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [tuple, identifier, array]);\n  var typeInside = {\n    'keyword': keywords,\n    'punctuation': /[<>()?,.:[\\]]/\n  };\n\n  // strings & characters\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n  var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source; // simplified pattern\n  var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n  var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    'string': [{\n      pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n      lookbehind: true,\n      greedy: true\n    }],\n    'class-name': [{\n      // Using static\n      // using static System.Math;\n      pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Using alias (type)\n      // using Project = PC.MyCompany.Project;\n      pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [name, typeExpression]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Using alias (alias)\n      // using Project = PC.MyCompany.Project;\n      pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n      lookbehind: true\n    }, {\n      // Type declarations\n      // class Foo<A, B>\n      // interface Foo<out A, B>\n      pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [typeDeclarationKeywords, genericName]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Single catch exception declaration\n      // catch(Foo)\n      // (things like catch(Foo e) is covered by variable declaration)\n      pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Name of the type parameter of generic constraints\n      // where Foo : class\n      pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n      lookbehind: true\n    }, {\n      // Casts and checks via as and is.\n      // as Foo<A>, is Bar<B>\n      // (things like if(a is Foo b) is covered by variable declaration)\n      pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Variable, field and parameter declaration\n      // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n      pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [typeExpression, nonContextualKeywords, name]),\n      inside: typeInside\n    }],\n    'keyword': keywords,\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n    'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n    'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n    'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n  });\n  Prism.languages.insertBefore('csharp', 'number', {\n    'range': {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('csharp', 'punctuation', {\n    'named-parameter': {\n      pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'namespace': {\n      // namespace Foo.Bar {}\n      // using Foo.Bar;\n      pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'type-expression': {\n      // default(Foo), typeof(Foo<Bar>), sizeof(int)\n      pattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n      lookbehind: true,\n      alias: 'class-name',\n      inside: typeInside\n    },\n    'return-type': {\n      // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n      // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n      // int Foo => 0; int Foo { get; set } = 0;\n      pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [typeExpression, identifier]),\n      inside: typeInside,\n      alias: 'class-name'\n    },\n    'constructor-invocation': {\n      // new List<Foo<Bar[]>> { }\n      pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n      lookbehind: true,\n      inside: typeInside,\n      alias: 'class-name'\n    },\n    /*'explicit-implementation': {\n    \t// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\n    \tpattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\n    \tinside: classNameInside,\n    \talias: 'class-name'\n    },*/\n    'generic-method': {\n      // foo<Bar>()\n      pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n      inside: {\n        'function': re(/^<<0>>/.source, [name]),\n        'generic': {\n          pattern: RegExp(generic),\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    },\n    'type-list': {\n      // The list of types inherited or of generic constraints\n      // class Foo<F> : Bar, IList<FooBar>\n      // where F : Bar, IList<int>\n      pattern: re(/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [typeDeclarationKeywords, genericName, name, typeExpression, keywords.source, nestedRound, /\\bnew\\s*\\(\\s*\\)/.source]),\n      lookbehind: true,\n      inside: {\n        'record-arguments': {\n          pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [genericName, nestedRound]),\n          lookbehind: true,\n          greedy: true,\n          inside: Prism.languages.csharp\n        },\n        'keyword': keywords,\n        'class-name': {\n          pattern: RegExp(typeExpression),\n          greedy: true,\n          inside: typeInside\n        },\n        'punctuation': /[,()]/\n      }\n    },\n    'preprocessor': {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        'directive': {\n          pattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n\n  // attributes\n  var regularStringOrCharacter = regularString + '|' + character;\n  var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n  var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\n  // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n  var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n  var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [identifier, roundExpression]);\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'attribute': {\n      // Attributes\n      // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n      pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [attrTarget, attr]),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'target': {\n          pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n          alias: 'keyword'\n        },\n        'attribute-arguments': {\n          pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n          inside: Prism.languages.csharp\n        },\n        'class-name': {\n          pattern: RegExp(identifier),\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'punctuation': /[:,]/\n      }\n    }\n  });\n\n  // string interpolation\n  var formatString = /:[^}\\r\\n]+/.source;\n  // multi line\n  var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n  var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [mInterpolationRound, formatString]);\n  // single line\n  var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n  var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [sInterpolationRound, formatString]);\n  function createInterpolationInside(interpolation, interpolationRound) {\n    return {\n      'interpolation': {\n        pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n        lookbehind: true,\n        inside: {\n          'format-string': {\n            pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [interpolationRound, formatString]),\n            lookbehind: true,\n            inside: {\n              'punctuation': /^:/\n            }\n          },\n          'punctuation': /^\\{|\\}$/,\n          'expression': {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-csharp',\n            inside: Prism.languages.csharp\n          }\n        }\n      },\n      'string': /[\\s\\S]+/\n    };\n  }\n  Prism.languages.insertBefore('csharp', 'string', {\n    'interpolation-string': [{\n      pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n      lookbehind: true,\n      greedy: true,\n      inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n    }, {\n      pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n      lookbehind: true,\n      greedy: true,\n      inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n    }],\n    'char': {\n      pattern: RegExp(character),\n      greedy: true\n    }\n  });\n  Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n})(Prism);\nPrism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [\n    // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n    // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m,\n    // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m]\n\n    // deleted, inserted, unchanged, diff\n  };\n\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  };\n\n  // add a token for each prefix\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  });\n\n  // make prefixes available to Diff plugin\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [\n  // binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n  // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n  // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nPrism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\nPrism.languages.ini = {\n  /**\n   * The component mimics the behavior of the Win32 API parser.\n   *\n   * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n   */\n\n  'comment': {\n    pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n    lookbehind: true\n  },\n  'section': {\n    pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n    lookbehind: true,\n    inside: {\n      'section-name': {\n        pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n        lookbehind: true,\n        alias: 'selector'\n      },\n      'punctuation': /\\[|\\]/\n    }\n  },\n  'key': {\n    pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n    lookbehind: true,\n    alias: 'attr-name'\n  },\n  'value': {\n    pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n    lookbehind: true,\n    alias: 'attr-value',\n    inside: {\n      'inner-value': {\n        pattern: /^(\"|').+(?=\\1$)/,\n        lookbehind: true\n      }\n    }\n  },\n  'punctuation': /=/\n};\n(function (Prism) {\n  var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n  // full package (optional) + parent classes (optional)\n  var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n  // based on the java naming conventions\n  var className = {\n    pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n    lookbehind: true,\n    inside: {\n      'namespace': {\n        pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n        inside: {\n          'punctuation': /\\./\n        }\n      },\n      'punctuation': /\\./\n    }\n  };\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'string': {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [className, {\n      // variables, parameters, and constructor references\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n      lookbehind: true,\n      inside: className.inside\n    }, {\n      // class names based on keyword\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n      lookbehind: true,\n      inside: className.inside\n    }],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(::\\s*)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    },\n    'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n  });\n  Prism.languages.insertBefore('java', 'string', {\n    'triple-quoted-string': {\n      // http://openjdk.java.net/jeps/355#Description\n      pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'char': {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    },\n    'import': [{\n      pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      inside: {\n        'namespace': className.inside.namespace,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }, {\n      pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      alias: 'static',\n      inside: {\n        'namespace': className.inside.namespace,\n        'static': /\\b\\w+$/,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }],\n    'namespace': {\n      pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n        return keywords.source;\n      })),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n})(Prism);\n(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;\n  var charSet = {\n    pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var charSetWithoutDot = {\n    pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar);\n\n  // the name of a capturing group\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  Prism.languages.regex = {\n    'char-class': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'char-class-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        'char-class-punctuation': {\n          pattern: /^\\[|\\]$/,\n          alias: 'punctuation'\n        },\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': {\n              pattern: /-/,\n              alias: 'operator'\n            }\n          }\n        },\n        'special-escape': specialEscape,\n        'char-set': charSetWithoutDot,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'char-set': charSet,\n    'backreference': [{\n      // a backreference which is not an octal escape\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: 'keyword'\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: 'keyword',\n      inside: {\n        'group-name': groupName\n      }\n    }],\n    'anchor': {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: 'function'\n    },\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: 'punctuation',\n      inside: {\n        'group-name': groupName\n      }\n    }, {\n      pattern: /\\)/,\n      alias: 'punctuation'\n    }],\n    'quantifier': {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: 'number'\n    },\n    'alternation': {\n      pattern: /\\|/,\n      alias: 'keyword'\n    }\n  };\n})(Prism);\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: RegExp(\n    // lookbehind\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n    // Regex pattern:\n    // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n    // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n    // with the only syntax, so we have to define 2 different regex patterns.\n    /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' +\n    // `v` flag syntax. This supports 3 levels of nested character classes.\n    /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' +\n    // lookahead\n    /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nPrism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n\n  // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nPrism.languages.js = Prism.languages.javascript;\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag);\n\n  // The following will handle plain text inside tags\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n    if (typeof token === 'string') {\n      return token;\n    }\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n    return token.content.map(stringifyToken).join('');\n  };\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token);\n\n          // And merge text with adjacent text\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n    walkTokens(env.tokens);\n  });\n})(Prism);\n\n// https://www.json.org/json-en.html\nPrism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n(function (Prism) {\n  Prism.languages.kotlin = Prism.languages.extend('clike', {\n    'keyword': {\n      // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: true\n    },\n    'function': [{\n      pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n      greedy: true\n    }, {\n      pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  });\n  delete Prism.languages.kotlin['class-name'];\n  var interpolationInside = {\n    'interpolation-punctuation': {\n      pattern: /^\\$\\{?|\\}$/,\n      alias: 'punctuation'\n    },\n    'expression': {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages.kotlin\n    }\n  };\n  Prism.languages.insertBefore('kotlin', 'string', {\n    // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n    'string-literal': [{\n      pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n      alias: 'multiline',\n      inside: {\n        'interpolation': {\n          pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          inside: interpolationInside\n        },\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n      alias: 'singleline',\n      inside: {\n        'interpolation': {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          lookbehind: true,\n          inside: interpolationInside\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'char': {\n      // https://kotlinlang.org/spec/expressions.html#character-literals\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n      greedy: true\n    }\n  });\n  delete Prism.languages.kotlin['string'];\n  Prism.languages.insertBefore('kotlin', 'keyword', {\n    'annotation': {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'function', {\n    'label': {\n      pattern: /\\b\\w+@|@\\w+\\b/,\n      alias: 'symbol'\n    }\n  });\n  Prism.languages.kt = Prism.languages.kotlin;\n  Prism.languages.kts = Prism.languages.kotlin;\n})(Prism);\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [\n  // Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  },\n  // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\nPrism.languages.lua = {\n  'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  // \\z may be used to skip the following space\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: true\n  },\n  'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  'operator': [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    // Match \"..\" but don't break \"...\"\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: true\n  }],\n  'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n  // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n  // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n  // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n          // only use the first word\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang;\n\n          // add alias\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n    var codeLang = '';\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n    var grammar = Prism.languages[codeLang];\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  };\n\n  // IE 11 doesn't support `String.fromCodePoint`\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, '');\n\n    // decode known entities\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n      if (code[0] === '#') {\n        var value;\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n        if (known) {\n          return known;\n        }\n\n        // unable to decode\n        return m;\n      }\n    });\n    return text;\n  }\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n(function (Prism) {\n  var brackets = /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/.source;\n  Prism.languages.perl = {\n    'comment': [{\n      // POD\n      pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    // TODO Could be nice to handle Heredoc too.\n    'string': [{\n      pattern: RegExp(/\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // q/.../\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n      // q a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // q(...)\n      // q{...}\n      // q[...]\n      // q<...>\n      brackets].join('|') + ')'),\n      greedy: true\n    },\n    // \"...\", `...`\n    {\n      pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true\n    },\n    // '...'\n    // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n    {\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    }],\n    'regex': [{\n      pattern: RegExp(/\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // m/.../\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n      // m a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // m(...)\n      // m{...}\n      // m[...]\n      // m<...>\n      brackets].join('|') + ')' + /[msixpodualngc]*/.source),\n      greedy: true\n    },\n    // The lookbehinds prevent -s from breaking\n    {\n      pattern: RegExp(/(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // s/.../.../\n      // eslint-disable-next-line regexp/strict\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // s a...a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/.source,\n      // s(...)(...)\n      // s{...}{...}\n      // s[...][...]\n      // s<...><...>\n      // s(...)[...]\n      brackets + /\\s*/.source + brackets].join('|') + ')' + /[msixpodualngcer]*/.source),\n      lookbehind: true,\n      greedy: true\n    },\n    // /.../\n    // The look-ahead tries to prevent two divisions on\n    // the same line from being highlighted as regex.\n    // This does not support multi-line regex.\n    {\n      pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n      greedy: true\n    }],\n    // FIXME Not sure about the handling of ::, ', and #\n    'variable': [\n    // ${^POSTMATCH}\n    /[&*$@%]\\{\\^[A-Z]+\\}/,\n    // $^V\n    /[&*$@%]\\^[A-Z_]/,\n    // ${...}\n    /[&*$@%]#?(?=\\{)/,\n    // $foo\n    /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n    // $1\n    /[&*$@%]\\d+/,\n    // $_, @_, %!\n    // The negative lookahead prevents from breaking the %= operator\n    /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n    'filehandle': {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    'v-string': {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    'function': {\n      pattern: /(\\bsub[ \\t]+)\\w+/,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n    'punctuation': /[{}[\\];(),:]/\n  };\n})(Prism);\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n          var i = tokenStack.length;\n          var placeholder;\n\n          // Check for existing strings\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          }\n\n          // Create a sparse array\n          tokenStack[i] = match;\n          return placeholder;\n        });\n\n        // Switch the grammar to markup\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        }\n\n        // Switch the grammar back\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n            var token = tokens[i];\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n                replacement.push(middle);\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content /* && typeof token.content !== 'string' */) {\n              walkTokens(token.content);\n            }\n          }\n          return tokens;\n        }\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    },\n    // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\nPrism.languages.r = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'percent-operator': {\n    // Includes user-defined operators\n    // and %%, %*%, %/%, %in%, %o%, %x%\n    pattern: /%[^%\\s]*%/,\n    alias: 'operator'\n  },\n  'boolean': /\\b(?:FALSE|TRUE)\\b/,\n  'ellipsis': /\\.\\.(?:\\.|\\d+)/,\n  'number': [/\\b(?:Inf|NaN)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n  'keyword': /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n  'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n  'punctuation': /[(){}\\[\\],;]/\n};\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': {\n      pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.\\\\]/\n      }\n    },\n    'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n    'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n    'punctuation': /[(){}[\\].,;]/\n  });\n  Prism.languages.insertBefore('ruby', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  var interpolation = {\n    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n    lookbehind: true,\n    inside: {\n      'content': {\n        pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'punctuation'\n      }\n    }\n  };\n  delete Prism.languages.ruby.function;\n  var percentExpression = '(?:' + [/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source, /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join('|') + ')';\n  var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex-literal': [{\n      pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': [{\n      pattern: RegExp(/(^|[^:]):/.source + symbolName),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n      lookbehind: true,\n      greedy: true\n    }],\n    'method-definition': {\n      pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'function': /\\b\\w+$/,\n        'keyword': /^self\\b/,\n        'class-name': /^\\w+/,\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'string', {\n    'string-literal': [{\n      pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?/\n          }\n        },\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?'|'$/\n          }\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'command-literal': [{\n      pattern: RegExp(/%x/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }, {\n      pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }]\n  });\n  delete Prism.languages.ruby.string;\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n  });\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);\n(function (Prism) {\n  var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n  for (var i = 0; i < 2; i++) {\n    // support 4 levels of nested comments\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return multilineComment;\n    });\n  }\n  multilineComment = multilineComment.replace(/<self>/g, function () {\n    return /[^\\s\\S]/.source;\n  });\n  Prism.languages.rust = {\n    'comment': [{\n      pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'string': {\n      pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n      greedy: true\n    },\n    'char': {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n      greedy: true\n    },\n    'attribute': {\n      pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n      greedy: true,\n      alias: 'attr-name',\n      inside: {\n        'string': null // see below\n      }\n    },\n    // Closure params should not be confused with bitwise OR |\n    'closure-params': {\n      pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'closure-punctuation': {\n          pattern: /^\\||\\|$/,\n          alias: 'punctuation'\n        },\n        rest: null // see below\n      }\n    },\n    'lifetime-annotation': {\n      pattern: /'\\w+/,\n      alias: 'symbol'\n    },\n    'fragment-specifier': {\n      pattern: /(\\$\\w+:)[a-z]+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'variable': /\\$\\w+/,\n    'function-definition': {\n      pattern: /(\\bfn\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'type-definition': {\n      pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'module-declaration': [{\n      pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n      lookbehind: true,\n      alias: 'namespace'\n    }, {\n      pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n      lookbehind: true,\n      alias: 'namespace',\n      inside: {\n        'punctuation': /::/\n      }\n    }],\n    'keyword': [\n    // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n    /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n    // primitives and str\n    // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n    /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],\n    // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n    // and Rust's naming conventions recommend snake_case anyway.\n    // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n    'function': /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n    'macro': {\n      pattern: /\\b\\w+!/,\n      alias: 'property'\n    },\n    'constant': /\\b[A-Z_][A-Z_\\d]+\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    'namespace': {\n      pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n      inside: {\n        'punctuation': /::/\n      }\n    },\n    // Hex, oct, bin, dec numbers with visual separators and type suffix\n    'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'punctuation': /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n    'operator': /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n  };\n  Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust;\n  Prism.languages.rust['attribute'].inside['string'] = Prism.languages.rust['string'];\n})(Prism);\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important;\n\n  // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(Prism);\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/\n      // See rest below\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\nPrism.languages.swift = {\n  'comment': {\n    // Nested comments are supported up to 2 levels\n    pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-literal': [\n  // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n  {\n    pattern: RegExp(/(^|[^\"#])/.source + '(?:'\n    // single-line string\n    + /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + '|'\n    // multi-line string\n    + /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + ')' + /(?![\"#])/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null // see below\n      },\n      'interpolation-punctuation': {\n        pattern: /^\\)|\\\\\\($/,\n        alias: 'punctuation'\n      },\n      'punctuation': /\\\\(?=[\\r\\n])/,\n      'string': /[\\s\\S]+/\n    }\n  }, {\n    pattern: RegExp(/(^|[^\"#])(#+)/.source + '(?:'\n    // single-line string\n    + /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + '|'\n    // multi-line string\n    + /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + ')' + '\\\\2'),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null // see below\n      },\n      'interpolation-punctuation': {\n        pattern: /^\\)|\\\\#+\\($/,\n        alias: 'punctuation'\n      },\n      'string': /[\\s\\S]+/\n    }\n  }],\n  'directive': {\n    // directives with conditions\n    pattern: RegExp(/#/.source + '(?:' + (/(?:elseif|if)\\b/.source + '(?:[ \\t]*'\n    // This regex is a little complex. It's equivalent to this:\n    //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n    // where <round> is a general parentheses expression.\n    + /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + ')+') + '|' + /(?:else|endif)\\b/.source + ')'),\n    alias: 'property',\n    inside: {\n      'directive-name': /^#\\w+/,\n      'boolean': /\\b(?:false|true)\\b/,\n      'number': /\\b\\d+(?:\\.\\d+)*\\b/,\n      'operator': /!|&&|\\|\\||[<>]=?/,\n      'punctuation': /[(),]/\n    }\n  },\n  'literal': {\n    pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n    alias: 'constant'\n  },\n  'other-directive': {\n    pattern: /#\\w+\\b/,\n    alias: 'property'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'atrule'\n  },\n  'function-definition': {\n    pattern: /(\\bfunc\\s+)\\w+/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'label': {\n    // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n    pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'keyword': /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'nil': {\n    pattern: /\\bnil\\b/,\n    alias: 'constant'\n  },\n  'short-argument': /\\$\\d+\\b/,\n  'omit': {\n    pattern: /\\b_\\b/,\n    alias: 'keyword'\n  },\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n  'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'constant': /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n  // This regex only supports ASCII operators.\n  'operator': /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n  'punctuation': /[{}[\\]();,.:\\\\]/\n};\nPrism.languages.swift['string-literal'].forEach(function (rule) {\n  rule.inside['interpolation'].inside = Prism.languages.swift;\n});\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  });\n\n  // The keywords TypeScript adds to JavaScript\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n  // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n  // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/);\n\n  // doesn't work with TS because TS is too complex\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property'];\n\n  // a version of typescript specifically for highlighting types\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n  // doesn't work with TS because TS is too complex\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property'];\n\n  // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\nPrism.languages.basic = {\n  'comment': {\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  },\n  'string': {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n  'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n  'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n  'punctuation': /[,;:()]/\n};\nPrism.languages.vbnet = Prism.languages.extend('basic', {\n  'comment': [{\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  }, {\n    pattern: /(^|[^\\\\:])'.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n  'punctuation': /[,;:(){}]/\n});\n\nfunction isValidURL(url) {\n  return url === (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_25__.sanitizeUrl)(url);\n}\n\nconst isLinkActive = editor => {\n  return isElementActive(editor, 'link');\n};\nconst wrapLink = (editor, url) => {\n  if (isLinkActive(editor)) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      match: n => n.type === 'link'\n    });\n    return;\n  }\n  const {\n    selection\n  } = editor;\n  const isCollapsed = selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(selection);\n  if (isCollapsed) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n      type: 'link',\n      href: url,\n      children: [{\n        text: url\n      }]\n    });\n  } else {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'link',\n      href: url,\n      children: [{\n        text: ''\n      }]\n    }, {\n      split: true\n    });\n  }\n};\nconst LinkElement = ({\n  attributes,\n  children,\n  element: __elementForGettingPath\n}) => {\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const [currentElement, setNode] = useElementWithSetNodes(editor, __elementForGettingPath);\n  const href = currentElement.href;\n  const text = slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(currentElement);\n  const [dialogOpen, setDialogOpen] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const activePopoverElement = useActiveBlockPopover();\n  const selected = activePopoverElement === __elementForGettingPath;\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (selected && !href) {\n      setDialogOpen(true);\n    }\n  }, [href, selected]);\n  const unlink = useEventCallback(() => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, __elementForGettingPath)\n    });\n    slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n  });\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n      element: __elementForGettingPath,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"a\", {\n        href: href,\n        ...attributes,\n        children: children\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n        placement: \"bottom start\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          gap: \"small\",\n          padding: \"regular\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n              prominence: \"low\",\n              onPress: () => setDialogOpen(true),\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                src: _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_20__.editIcon\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n              children: stringFormatter.format('edit')\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n              prominence: \"low\",\n              onPress: () => {\n                window.open(href, '_blank', 'noopener,noreferrer');\n              },\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                src: _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_21__.externalLinkIcon\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                truncate: 3,\n                children: href\n              })\n            })]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n              prominence: \"low\",\n              onPress: unlink,\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                src: _keystar_ui_icon_icons_unlinkIcon__WEBPACK_IMPORTED_MODULE_23__.unlinkIcon\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n              children: \"Unlink\"\n            })]\n          })]\n        })\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: () => {\n        setDialogOpen(false);\n        focusWithPreviousSelection(editor);\n      },\n      children: dialogOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LinkDialog, {\n        text: text,\n        href: href,\n        onSubmit: ({\n          href\n        }) => {\n          setNode({\n            href\n          });\n        }\n      })\n    })]\n  });\n};\nfunction LinkDialog({\n  onSubmit,\n  ...props\n}) {\n  let [href, setHref] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(props.href || '');\n  let [touched, setTouched] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  let {\n    dismiss\n  } = (0,_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.useDialogContainer)();\n  let stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const showInvalidState = touched && !isValidURL(href);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n    size: \"small\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: event => {\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        if (!showInvalidState) {\n          dismiss();\n          onSubmit({\n            href\n          });\n        }\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n        children: [props.href ? 'Edit' : 'Add', \" link\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n            label: \"Text\",\n            value: props.text,\n            isReadOnly: true\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n            autoFocus: true,\n            isRequired: true,\n            onBlur: () => setTouched(true),\n            label: \"Link\",\n            onChange: setHref,\n            value: href,\n            errorMessage: showInvalidState && 'Please provide a valid URL.'\n          })]\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          onPress: dismiss,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          prominence: \"high\",\n          type: \"submit\",\n          children: stringFormatter.format('save')\n        })]\n      })]\n    })\n  });\n}\nlet _linkIcon = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n  src: _keystar_ui_icon_icons_linkIcon__WEBPACK_IMPORTED_MODULE_22__.linkIcon\n});\nfunction LinkButton() {\n  const {\n    editor,\n    links: {\n      isDisabled,\n      isSelected\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    prominence: \"low\",\n    isDisabled: isDisabled,\n    isSelected: isSelected,\n    onPress: () => {\n      wrapLink(editor, '');\n      slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n    },\n    children: _linkIcon\n  }), [isSelected, isDisabled, editor]);\n}\nconst linkButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LinkButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Link\"\n    })\n  })]\n});\n\nconst values = {\n  start: {\n    key: 'start',\n    label: 'Align Start',\n    icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_alignLeftIcon__WEBPACK_IMPORTED_MODULE_42__.alignLeftIcon\n    })\n  },\n  center: {\n    key: 'center',\n    label: 'Align Center',\n    icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_alignCenterIcon__WEBPACK_IMPORTED_MODULE_44__.alignCenterIcon\n    })\n  },\n  end: {\n    key: 'end',\n    label: 'Align End',\n    icon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_alignRightIcon__WEBPACK_IMPORTED_MODULE_43__.alignRightIcon\n    })\n  }\n};\nconst TextAlignMenu = ({\n  alignment\n}) => {\n  const toolbarState = useToolbarState();\n  const items = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => [values.start, ...Object.keys(alignment).map(x => values[x])], [alignment]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.MenuTrigger, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        prominence: \"low\",\n        children: [values[toolbarState.alignment.selected].icon, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_28__.chevronDownIcon\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: \"Text Alignment\"\n        })\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Menu, {\n      selectionMode: \"single\",\n      selectedKeys: [toolbarState.alignment.selected],\n      items: items,\n      onAction: key => {\n        if (key === 'start') {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(toolbarState.editor, 'textAlign', {\n            match: node => node.type === 'paragraph' || node.type === 'heading'\n          });\n        } else {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(toolbarState.editor, {\n            textAlign: key\n          }, {\n            match: node => node.type === 'paragraph' || node.type === 'heading'\n          });\n        }\n        slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(toolbarState.editor);\n      },\n      children: item => {\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n          textValue: item.label,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            children: item.label\n          }), item.icon]\n        }, item.key);\n      }\n    })]\n  }), [items, toolbarState.alignment.selected, toolbarState.editor]);\n};\n\nconst insertBlockquote = editor => {\n  const isActive = isElementActive(editor, 'blockquote');\n  if (isActive) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      match: node => node.type === 'blockquote'\n    });\n  } else {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'blockquote',\n      children: []\n    });\n  }\n};\nconst BlockquoteButton = () => {\n  const {\n    editor,\n    blockquote: {\n      isDisabled,\n      isSelected\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    prominence: \"low\",\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    onPress: () => {\n      insertBlockquote(editor);\n      slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_quoteIcon__WEBPACK_IMPORTED_MODULE_45__.quoteIcon\n    })\n  }), [editor, isDisabled, isSelected]);\n};\nconst blockquoteButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockquoteButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Quote\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n      children: '>⎵'\n    })]\n  })]\n});\n\nconst languages = [{\n  label: 'C',\n  value: 'c'\n}, {\n  label: 'C++',\n  value: 'cpp'\n}, {\n  label: 'Arduino',\n  value: 'arduino'\n}, {\n  label: 'Bash',\n  value: 'bash'\n}, {\n  label: 'C#',\n  value: 'csharp'\n}, {\n  label: 'CSS',\n  value: 'css'\n}, {\n  label: 'Diff',\n  value: 'diff'\n}, {\n  label: 'Go',\n  value: 'go'\n}, {\n  label: 'INI',\n  value: 'ini'\n}, {\n  label: 'Java',\n  value: 'java'\n}, {\n  label: 'JavaScript',\n  value: 'javascript'\n}, {\n  label: 'JSX',\n  value: 'jsx'\n}, {\n  label: 'JSON',\n  value: 'json'\n}, {\n  label: 'Kotlin',\n  value: 'kotlin'\n}, {\n  label: 'Less',\n  value: 'less'\n}, {\n  label: 'Lua',\n  value: 'lua'\n}, {\n  label: 'Makefile',\n  value: 'makefile'\n}, {\n  label: 'Markdown',\n  value: 'markdown'\n}, {\n  label: 'Objective-C',\n  value: 'objectivec'\n}, {\n  label: 'Perl',\n  value: 'perl'\n}, {\n  label: 'PHP',\n  value: 'php'\n}, {\n  label: 'Python',\n  value: 'python'\n}, {\n  label: 'R',\n  value: 'r'\n}, {\n  label: 'Ruby',\n  value: 'ruby'\n}, {\n  label: 'Rust',\n  value: 'rust'\n}, {\n  label: 'Sass',\n  value: 'sass'\n}, {\n  label: 'SCSS',\n  value: 'scss'\n}, {\n  label: 'SQL',\n  value: 'sql'\n}, {\n  label: 'Swift',\n  value: 'swift'\n}, {\n  label: 'TypeScript',\n  value: 'typescript'\n}, {\n  label: 'TSX',\n  value: 'tsx'\n}, {\n  label: 'VB.NET',\n  value: 'vbnet'\n}, {\n  label: 'YAML',\n  value: 'yaml'\n}];\nconst canonicalNameToLabel = new Map(languages.map(x => [x.value, x.label]));\nconst labelToCanonicalName = new Map(languages.map(x => [x.label, x.value]));\nconst languageToCanonicalName = new Map(languages.map(lang => [Prism.languages[lang.value], lang.value]));\nconst aliasesToCanonicalName = new Map(Object.keys(Prism.languages).flatMap(lang => {\n  const canonicalName = languageToCanonicalName.get(Prism.languages[lang]);\n  if (canonicalName === undefined) {\n    return [];\n  }\n  return [[lang, canonicalName]];\n}));\nconst languagesToAliases = new Map(languages.map(lang => [lang.value, []]));\nfor (const [alias, canonicalName] of aliasesToCanonicalName) {\n  languagesToAliases.get(canonicalName).push(alias);\n}\nconst languagesWithAliases = [{\n  label: 'Plain text',\n  value: 'plain',\n  aliases: []\n}, ...[...languagesToAliases].map(([canonicalName, aliases]) => ({\n  label: canonicalNameToLabel.get(canonicalName),\n  value: canonicalName,\n  aliases\n}))];\nconst aliasesToLabel = new Map([...aliasesToCanonicalName].map(([alias, canonicalName]) => [alias, canonicalNameToLabel.get(canonicalName)]));\n\nfunction CustomAttributesDialogInner(props) {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => {\n    return getInitialPropsValueFromInitializer(props.schema, Object.fromEntries(Object.keys(props.schema.fields).map(key => [key, props.element[key]])));\n  });\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => createGetPreviewProps(props.schema, setState, () => undefined), [props.schema])(state);\n  let {\n    dismiss\n  } = (0,_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.useDialogContainer)();\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n    size: \"small\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: event => {\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        setForceValidation(true);\n        if (clientSideValidateProp(props.schema, state, undefined)) {\n          dismiss();\n          const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, props.element);\n          console.log(state);\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, state, {\n            at: path\n          });\n        }\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n        children: [props.nodeLabel, \" details\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValueContentFromPreviewProps, {\n          forceValidation: forceValidation,\n          autoFocus: true,\n          ...previewProps\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          onPress: dismiss,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          prominence: \"high\",\n          type: \"submit\",\n          children: stringFormatter.format('save')\n        })]\n      })]\n    })\n  });\n}\nfunction CustomAttributesEditButton(props) {\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      prominence: \"low\",\n      onPress: props.onPress,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_20__.editIcon\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n      children: stringFormatter.format('edit')\n    })]\n  });\n}\nfunction CustomAttributesDialog(props) {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n    onDismiss: () => {\n      props.onDismiss();\n      focusWithPreviousSelection(editor);\n    },\n    children: props.isOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CustomAttributesDialogInner, {\n      element: props.element,\n      nodeLabel: props.nodeLabel,\n      schema: props.schema\n    })\n  });\n}\n\nfunction CodeButton() {\n  const {\n    editor,\n    code: {\n      isDisabled,\n      isSelected\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    prominence: \"low\",\n    onPress: () => {\n      if (isSelected) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          match: node => node.type === 'code'\n        });\n      } else {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n          type: 'code',\n          children: [{\n            text: ''\n          }]\n        });\n      }\n      slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_codeIcon__WEBPACK_IMPORTED_MODULE_29__.codeIcon\n    })\n  }), [isDisabled, isSelected, editor]);\n}\nconst codeButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CodeButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Code block\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n      children: \"```\"\n    })]\n  })]\n});\nfunction CodeElement({\n  attributes,\n  children,\n  element\n}) {\n  var _aliasesToLabel$get;\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(element.language ? (_aliasesToLabel$get = aliasesToLabel.get(element.language)) !== null && _aliasesToLabel$get !== void 0 ? _aliasesToLabel$get : element.language : 'Plain text');\n  const [dialogOpen, setDialogOpen] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const {\n    documentFeatures\n  } = useDocumentEditorConfig();\n  const customAttributesSchema = documentFeatures.formatting.blockTypes.code && Object.keys(documentFeatures.formatting.blockTypes.code.schema.fields).length ? documentFeatures.formatting.blockTypes.code.schema : undefined;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockWrapper, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n        element: element,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"pre\", {\n          spellCheck: \"false\",\n          ref: triggerRef,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"code\", {\n            ...attributes,\n            children: children\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n            gap: \"regular\",\n            padding: \"regular\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_47__.Combobox, {\n              \"aria-label\": \"Language\",\n              width: \"scale.2000\",\n              allowsCustomValue: true // allow consumers to support other languages\n              ,\n              inputValue: inputValue,\n              onInputChange: setInputValue,\n              onBlur: () => {\n                const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n                const canonicalName = aliasesToCanonicalName.get(inputValue);\n                if (canonicalName !== undefined) {\n                  if (canonicalName === 'plain') {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'language', {\n                      at: path\n                    });\n                    return;\n                  }\n                  setInputValue(canonicalNameToLabel.get(canonicalName));\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                    language: canonicalName\n                  }, {\n                    at: path\n                  });\n                  return;\n                }\n                const nameFromLabel = labelToCanonicalName.get(inputValue);\n                if (nameFromLabel !== undefined) {\n                  if (nameFromLabel === 'plain') {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'language', {\n                      at: path\n                    });\n                    return;\n                  }\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                    language: nameFromLabel\n                  }, {\n                    at: path\n                  });\n                  return;\n                }\n                if (inputValue === '') {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'language', {\n                    at: path\n                  });\n                  setInputValue('Plain text');\n                  return;\n                }\n                if (inputValue !== element.language) {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                    language: inputValue\n                  }, {\n                    at: path\n                  });\n                }\n              },\n              onSelectionChange: selection => {\n                const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n                if (aliasesToCanonicalName.has(inputValue)) {\n                  selection = aliasesToCanonicalName.get(inputValue);\n                }\n                if (selection === null) {\n                  if (inputValue === '') {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'language', {\n                      at: path\n                    });\n                  } else {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                      language: inputValue\n                    }, {\n                      at: path\n                    });\n                  }\n                } else if (typeof selection === 'string') {\n                  if (selection === 'plain') {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'language', {\n                      at: path\n                    });\n                    setInputValue('Plain text');\n                    return;\n                  }\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                    language: selection\n                  }, {\n                    at: path\n                  });\n                  const label = canonicalNameToLabel.get(selection);\n                  if (label) {\n                    setInputValue(label);\n                  }\n                }\n              },\n              selectedKey: element.language ? aliasesToCanonicalName.get(element.language) : 'plain',\n              items: (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => inputValue === 'Plain text' || labelToCanonicalName.has(inputValue) ? languagesWithAliases : (0,match_sorter__WEBPACK_IMPORTED_MODULE_46__.matchSorter)(languagesWithAliases, inputValue, {\n                keys: ['label', 'value', 'aliases']\n              }), [inputValue]),\n              children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_107__.Item, {\n                children: item.label\n              }, item.value)\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarSeparator, {}), customAttributesSchema !== undefined && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CustomAttributesEditButton, {\n              onPress: () => setDialogOpen(true)\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                prominence: \"low\",\n                onPress: () => {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                    at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element)\n                  });\n                },\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                  src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                tone: \"critical\",\n                children: \"Remove\"\n              })]\n            })]\n          })\n        })]\n      })\n    }), customAttributesSchema !== undefined && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CustomAttributesDialog, {\n      element: element,\n      isOpen: dialogOpen,\n      nodeLabel: \"Code block\",\n      schema: customAttributesSchema,\n      onDismiss: () => {\n        setDialogOpen(false);\n      }\n    })]\n  });\n}\n\nfunction updateComponentBlockElementProps(editor, componentBlock, prevProps, _newProps, basePath, setElement, ignoreChildFields) {\n  slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n    const propPathsWithNodesToReplace = new Map();\n    const schema = {\n      kind: 'object',\n      fields: componentBlock.schema\n    };\n    const newProps = transformProps(schema, _newProps, {\n      child(schema, value, path) {\n        if (!ignoreChildFields && schema.options.kind === 'block' && value) {\n          try {\n            let prevVal = getValueAtPropPath(prevProps, path);\n            if (prevVal === value) {\n              return null;\n            }\n          } catch {}\n          propPathsWithNodesToReplace.set(JSON.stringify(path), value.map(cloneDescendent));\n        }\n        return null;\n      }\n    });\n    setElement({\n      props: newProps\n    });\n    const childPropPaths = findChildPropPathsWithPrevious(newProps, prevProps, schema, [], [], []);\n    const getNode = () => slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, basePath);\n    const elementForChildren = getNode();\n    if (childPropPaths.length === 0) {\n      const indexes = elementForChildren.children.map((_, i) => i).reverse();\n      for (const idx of indexes) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n          at: [...basePath, idx]\n        });\n      }\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n        type: 'component-inline-prop',\n        propPath: undefined,\n        children: [{\n          text: ''\n        }]\n      }, {\n        at: [...basePath, 0]\n      });\n      return;\n    }\n    const initialPropPathsToEditorPath = new Map();\n    for (const [idx, node] of elementForChildren.children.entries()) {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(node.type === 'component-block-prop' || node.type === 'component-inline-prop');\n      initialPropPathsToEditorPath.set(node.propPath === undefined ? undefined : JSON.stringify(node.propPath), idx);\n    }\n    const childrenLeftToAdd = new Set(childPropPaths);\n    for (const childProp of childPropPaths) {\n      if (childProp.prevPath === undefined) {\n        continue;\n      }\n      const stringifiedPath = JSON.stringify(childProp.prevPath);\n      const idxInChildren = initialPropPathsToEditorPath.get(stringifiedPath);\n      if (idxInChildren !== undefined) {\n        const prevNode = elementForChildren.children[idxInChildren];\n        (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(prevNode.propPath !== undefined);\n        if (!areArraysEqual(childProp.path, prevNode.propPath)) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n            propPath: childProp.path\n          }, {\n            at: [...basePath, idxInChildren]\n          });\n        }\n        childrenLeftToAdd.delete(childProp);\n        initialPropPathsToEditorPath.delete(stringifiedPath);\n      }\n    }\n    let newIdx = getNode().children.length;\n    for (const childProp of childrenLeftToAdd) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n        type: `component-${childProp.options.kind}-prop`,\n        propPath: childProp.path,\n        children: [childProp.options.kind === 'block' ? {\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        } : {\n          text: ''\n        }]\n      }, {\n        at: [...basePath, newIdx]\n      });\n      newIdx++;\n    }\n    const pathsToRemove = [];\n    for (const [, idxInChildren] of initialPropPathsToEditorPath) {\n      pathsToRemove.push(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.pathRef(editor, [...basePath, idxInChildren]));\n    }\n    for (const pathRef of pathsToRemove) {\n      const path = pathRef.unref();\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(path !== null);\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n        at: path\n      });\n    }\n    const propPathsToExpectedIndexes = new Map();\n    for (const [idx, thing] of childPropPaths.entries()) {\n      propPathsToExpectedIndexes.set(JSON.stringify(thing.path), idx);\n    }\n    outer: while (true) {\n      for (const [idx, childNode] of getNode().children.entries()) {\n        (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(childNode.type === 'component-block-prop' || childNode.type === 'component-inline-prop');\n        const expectedIndex = propPathsToExpectedIndexes.get(JSON.stringify(childNode.propPath));\n        (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(expectedIndex !== undefined);\n        if (idx === expectedIndex) continue;\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n          at: [...basePath, idx],\n          to: [...basePath, expectedIndex]\n        });\n\n        // start the for-loop again\n        continue outer;\n      }\n      break;\n    }\n    for (const [propPath, val] of propPathsWithNodesToReplace) {\n      const idx = propPathsToExpectedIndexes.get(propPath);\n      if (idx !== undefined) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n          at: [...basePath, idx]\n        });\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n          type: 'component-block-prop',\n          propPath: JSON.parse(propPath),\n          children: val\n        }, {\n          at: [...basePath, idx]\n        });\n      }\n    }\n  });\n}\nfunction findChildPropPathsWithPrevious(value, prevValue, schema, newPath, prevPath, pathWithKeys) {\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        path: newPath,\n        prevPath,\n        options: schema.options\n      }];\n    case 'conditional':\n      const hasChangedDiscriminant = value.discriminant === prevValue.discriminant;\n      return findChildPropPathsWithPrevious(value.value, hasChangedDiscriminant ? prevValue.value : getInitialPropsValue(schema.values[value.discriminant]), schema.values[value.discriminant], newPath.concat('value'), hasChangedDiscriminant ? undefined : prevPath === null || prevPath === void 0 ? void 0 : prevPath.concat('value'), hasChangedDiscriminant ? undefined : pathWithKeys === null || pathWithKeys === void 0 ? void 0 : pathWithKeys.concat('value'));\n    case 'object':\n      {\n        const paths = [];\n        for (const key of Object.keys(schema.fields)) {\n          paths.push(...findChildPropPathsWithPrevious(value[key], prevValue[key], schema.fields[key], newPath.concat(key), prevPath === null || prevPath === void 0 ? void 0 : prevPath.concat(key), pathWithKeys === null || pathWithKeys === void 0 ? void 0 : pathWithKeys.concat(key)));\n        }\n        return paths;\n      }\n    case 'array':\n      {\n        const paths = [];\n        const prevKeys = getKeysForArrayValue(prevValue);\n        const keys = getKeysForArrayValue(value);\n        for (const [i, val] of value.entries()) {\n          const key = keys[i];\n          const prevIdx = prevKeys.indexOf(key);\n          let prevVal;\n          if (prevIdx === -1) {\n            prevVal = getInitialPropsValue(schema.element);\n          } else {\n            prevVal = prevValue[prevIdx];\n          }\n          paths.push(...findChildPropPathsWithPrevious(val, prevVal, schema.element, newPath.concat(i), prevIdx === -1 ? undefined : prevPath === null || prevPath === void 0 ? void 0 : prevPath.concat(prevIdx), prevIdx === -1 ? undefined : pathWithKeys === null || pathWithKeys === void 0 ? void 0 : pathWithKeys.concat(key)));\n        }\n        return paths;\n      }\n  }\n}\n\nconst ChildrenByPathContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createContext({});\nfunction ChildFieldEditable({\n  path\n}) {\n  const childrenByPath = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ChildrenByPathContext);\n  const child = childrenByPath[JSON.stringify(path)];\n  if (child === undefined) {\n    return null;\n  }\n  return child;\n}\nfunction ComponentBlockRender({\n  componentBlock,\n  element,\n  onChange,\n  children,\n  onRemove\n}) {\n  const getPreviewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    return createGetPreviewProps({\n      kind: 'object',\n      fields: componentBlock.schema\n    }, cb => onChange(cb, true), path => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChildFieldEditable, {\n      path: path\n    }));\n  }, [onChange, componentBlock]);\n  const previewProps = getPreviewProps(element.props);\n  const childrenByPath = {};\n  let maybeChild;\n  let extraChildren = [];\n  children.forEach(child => {\n    const propPath = child.props.children.props.element.propPath;\n    if (propPath === undefined) {\n      maybeChild = child;\n    } else {\n      const schema = getSchemaAtPropPath(propPath, element.props, componentBlock.schema);\n      if ((schema === null || schema === void 0 ? void 0 : schema.kind) === 'child' && schema.options.kind === 'block' && schema.options.editIn === 'modal') {\n        extraChildren.push(child);\n        return;\n      }\n      childrenByPath[JSON.stringify(propPathWithIndiciesToKeys(propPath, element.props))] = child;\n    }\n  });\n  const ComponentBlockPreview = componentBlock.preview;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ChildrenByPathContext.Provider, {\n    value: childrenByPath,\n    children: [(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ComponentBlockPreview, {\n      onRemove: onRemove,\n      ...previewProps\n    }), [ComponentBlockPreview, onRemove, previewProps]), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"span\", {\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        caretColor: 'transparent',\n        '& ::selection': {\n          backgroundColor: 'transparent'\n        },\n        overflow: 'hidden',\n        width: 1,\n        height: 1,\n        position: 'absolute'\n      }),\n      children: [maybeChild, extraChildren]\n    })]\n  });\n}\n\n// note this is written to avoid crashing when the given prop path doesn't exist in the value\n// this is because editor updates happen asynchronously but we have some logic to ensure\n// that updating the props of a component block synchronously updates it\n// (this is primarily to not mess up things like cursors in inputs)\n// this means that sometimes the child elements will be inconsistent with the values\n// so to deal with this, we return a prop path this is \"wrong\" but won't break anything\nfunction propPathWithIndiciesToKeys(propPath, val) {\n  return propPath.map(key => {\n    var _val2;\n    if (typeof key === 'string') {\n      var _val;\n      val = (_val = val) === null || _val === void 0 ? void 0 : _val[key];\n      return key;\n    }\n    if (!Array.isArray(val)) {\n      val = undefined;\n      return '';\n    }\n    const keys = getKeysForArrayValue(val);\n    val = (_val2 = val) === null || _val2 === void 0 ? void 0 : _val2[key];\n    return keys[key];\n  });\n}\n\nfunction ChromefulComponentBlockElement(props) {\n  var _props$componentBlock;\n  const selected = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSelected)();\n  const isValid = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => clientSideValidateProp({\n    kind: 'object',\n    fields: props.componentBlock.schema\n  }, props.elementProps, undefined), [props.componentBlock, props.elementProps]);\n  const [editMode, setEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const onCloseEditMode = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    setEditMode(false);\n  }, []);\n  const onShowEditMode = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {\n    setEditMode(true);\n  }, []);\n  const ChromefulToolbar = (_props$componentBlock = props.componentBlock.toolbar) !== null && _props$componentBlock !== void 0 ? _props$componentBlock : DefaultToolbarWithChrome;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPrimitive, {\n    selected: selected,\n    ...props.attributes,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      gap: \"medium\",\n      direction: \"column\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(NotEditable, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          casing: \"uppercase\",\n          color: \"neutralSecondary\",\n          weight: \"medium\",\n          size: \"small\",\n          children: props.componentBlock.label\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_3__.Fragment, {\n        children: [props.renderedBlock, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChromefulToolbar, {\n          isValid: isValid,\n          onRemove: props.onRemove,\n          props: props.previewProps,\n          onShowEditMode: onShowEditMode\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n          onDismiss: () => onCloseEditMode(),\n          children: (() => {\n            if (!editMode) {\n              return;\n            }\n            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n                children: [\"Edit \", props.componentBlock.label]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValue, {\n                props: props.previewProps,\n                onClose: onCloseEditMode\n              })]\n            });\n          })()\n        })]\n      })]\n    })\n  });\n}\n\n/**\n * Wrap block content, delimiting it from surrounding content, and provide a\n * focus indicator because the cursor may not be present.\n */\nconst BlockPrimitive = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.forwardRef)(function BlockPrimitive({\n  children,\n  selected,\n  ...attributes\n}, ref) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    ...attributes,\n    ref: ref,\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)(blockElementSpacing, {\n      position: 'relative',\n      paddingInlineStart: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xlarge,\n      marginBottom: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xlarge,\n      '::before': {\n        display: 'block',\n        content: '\" \"',\n        backgroundColor: selected ? _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected : _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderIdle,\n        borderRadius: 4,\n        width: 4,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        zIndex: 1\n      }\n    }),\n    children: children\n  });\n});\nfunction DefaultToolbarWithChrome({\n  onShowEditMode,\n  onRemove,\n  isValid\n}) {\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(NotEditable, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n      direction: \"column\",\n      gap: \"medium\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n        alignItems: \"center\",\n        gap: \"regular\",\n        UNSAFE_style: {\n          userSelect: 'none'\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n          onPress: () => onShowEditMode(),\n          children: stringFormatter.format('edit')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n            prominence: \"low\",\n            onPress: onRemove,\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n              src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n            tone: \"critical\",\n            children: stringFormatter.format('delete')\n          })]\n        })]\n      }), !isValid && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldMessage, {\n        children: \"Contains invalid fields. Please edit.\"\n      })]\n    })\n  });\n}\nfunction FormValue({\n  onClose,\n  props\n}) {\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const formId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => previewPropsToValue(props));\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => createGetPreviewProps(props.schema, setState, () => undefined), [props.schema])(state);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n        id: formId,\n        elementType: \"form\",\n        onSubmit: event => {\n          if (event.target !== event.currentTarget) return;\n          event.preventDefault();\n          if (!clientSideValidateProp(props.schema, state, undefined)) {\n            setForceValidation(true);\n          } else {\n            console.log(valueToUpdater(state, props.schema));\n            setValueToPreviewProps(state, props);\n            onClose();\n          }\n        },\n        direction: \"column\",\n        gap: \"xxlarge\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValueContentFromPreviewProps, {\n          ...previewProps,\n          forceValidation: forceValidation\n        })\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n        onPress: onClose,\n        children: stringFormatter.format('cancel')\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n        form: formId,\n        prominence: \"high\",\n        type: \"submit\",\n        children: \"Done\"\n      })]\n    })]\n  });\n}\n\nfunction ChromelessComponentBlockElement(props) {\n  var _props$componentBlock;\n  const hasToolbar = props.componentBlock.toolbar !== null;\n  const ChromelessToolbar = (_props$componentBlock = props.componentBlock.toolbar) !== null && _props$componentBlock !== void 0 ? _props$componentBlock : DefaultToolbarWithoutChrome;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    ...props.attributes,\n    className: blockElementSpacing,\n    children: hasToolbar ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n      element: props.element,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        children: props.renderedBlock\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChromelessToolbar, {\n          onRemove: props.onRemove,\n          props: props.previewProps\n        })\n      })]\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      children: props.renderedBlock\n    })\n  });\n}\nfunction DefaultToolbarWithoutChrome({\n  onRemove\n}) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      onPress: onRemove,\n      margin: \"regular\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_trashIcon__WEBPACK_IMPORTED_MODULE_48__.trashIcon\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n      tone: \"critical\",\n      children: \"Remove\"\n    })]\n  });\n}\n\nfunction findChildPropPathsForProp(value, schema, path) {\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        path: path,\n        options: schema.options\n      }];\n    case 'conditional':\n      return findChildPropPathsForProp(value.value, schema.values[value.discriminant], path.concat('value'));\n    case 'object':\n      {\n        const paths = [];\n        Object.keys(schema.fields).forEach(key => {\n          paths.push(...findChildPropPathsForProp(value[key], schema.fields[key], path.concat(key)));\n        });\n        return paths;\n      }\n    case 'array':\n      {\n        const paths = [];\n        value.forEach((val, i) => {\n          paths.push(...findChildPropPathsForProp(val, schema.element, path.concat(i)));\n        });\n        return paths;\n      }\n  }\n}\nfunction findChildPropPaths(value, props) {\n  const propPaths = findChildPropPathsForProp(value, {\n    kind: 'object',\n    fields: props\n  }, []);\n  if (!propPaths.length) {\n    return [{\n      path: undefined,\n      options: {\n        kind: 'inline',\n        placeholder: ''\n      }\n    }];\n  }\n  return propPaths;\n}\n\nfunction getAncestorComponentBlock(editor) {\n  if (editor.selection) {\n    const ancestorEntry = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: node => isBlock(node) && node.type !== 'paragraph'\n    });\n    if (ancestorEntry && (ancestorEntry[0].type === 'component-block-prop' || ancestorEntry[0].type === 'component-inline-prop')) {\n      return {\n        isInside: true,\n        componentBlock: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, ancestorEntry[1]),\n        prop: ancestorEntry\n      };\n    }\n  }\n  return {\n    isInside: false\n  };\n}\nconst alreadyNormalizedThings = new WeakMap();\nfunction normalizeNodeWithinComponentProp([node, path], editor, fieldOptions) {\n  let alreadyNormalizedNodes = alreadyNormalizedThings.get(fieldOptions);\n  if (!alreadyNormalizedNodes) {\n    alreadyNormalizedNodes = new WeakSet();\n    alreadyNormalizedThings.set(fieldOptions, alreadyNormalizedNodes);\n  }\n  if (alreadyNormalizedNodes.has(node)) {\n    return false;\n  }\n  let didNormalization = false;\n  if (fieldOptions.inlineMarks !== 'inherit' && slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node)) {\n    didNormalization = normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, fieldOptions.inlineMarks, fieldOptions.softBreaks);\n  }\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node)) {\n    let childrenHasChanged = node.children.map((node, i) => normalizeNodeWithinComponentProp([node, [...path, i]], editor, fieldOptions))\n    // .map then .some because we don't want to exit early\n    .some(x => x);\n    if (fieldOptions.kind === 'block') {\n      if (node.type === 'component-block') {\n        if (!fieldOptions.componentBlocks) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n            at: path\n          });\n          didNormalization = true;\n        }\n      } else {\n        didNormalization = normalizeElementBasedOnDocumentFeatures([node, path], editor, fieldOptions.documentFeatures) || childrenHasChanged;\n      }\n    } else {\n      didNormalization = normalizeInlineBasedOnLinks([node, path], editor, fieldOptions.documentFeatures.links);\n    }\n  }\n  if (didNormalization === false) {\n    alreadyNormalizedNodes.add(node);\n  }\n  return didNormalization;\n}\nfunction canSchemaContainChildField(rootSchema) {\n  const queue = new Set([rootSchema]);\n  for (const schema of queue) {\n    if (schema.kind === 'form') ; else if (schema.kind === 'child') {\n      return true;\n    } else if (schema.kind === 'array') {\n      queue.add(schema.element);\n    } else if (schema.kind === 'object') {\n      for (const innerProp of Object.values(schema.fields)) {\n        queue.add(innerProp);\n      }\n    } else if (schema.kind === 'conditional') {\n      for (const innerProp of Object.values(schema.values)) {\n        queue.add(innerProp);\n      }\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n    }\n  }\n  return false;\n}\nfunction doesSchemaOnlyEverContainASingleChildField(rootSchema) {\n  const queue = new Set([rootSchema]);\n  let hasFoundChildField = false;\n  for (const schema of queue) {\n    if (schema.kind === 'form') ; else if (schema.kind === 'child') {\n      if (hasFoundChildField) {\n        return false;\n      }\n      hasFoundChildField = true;\n    } else if (schema.kind === 'array') {\n      if (canSchemaContainChildField(schema.element)) {\n        return false;\n      }\n    } else if (schema.kind === 'object') {\n      for (const innerProp of Object.values(schema.fields)) {\n        queue.add(innerProp);\n      }\n    } else if (schema.kind === 'conditional') {\n      for (const innerProp of Object.values(schema.values)) {\n        queue.add(innerProp);\n      }\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n    }\n  }\n  return hasFoundChildField;\n}\nfunction findArrayFieldsWithSingleChildField(schema, value) {\n  const propPaths = [];\n  traverseProps(schema, value, (schema, value, path) => {\n    if (schema.kind === 'array' && doesSchemaOnlyEverContainASingleChildField(schema.element)) {\n      propPaths.push([path, schema]);\n    }\n  });\n  return propPaths;\n}\nfunction isEmptyChildFieldNode(element) {\n  const firstChild = element.children[0];\n  return element.children.length === 1 && (element.type === 'component-inline-prop' && firstChild.type === undefined && firstChild.text === '' || element.type === 'component-block-prop' && firstChild.type === 'paragraph' && firstChild.children.length === 1 && firstChild.children[0].type === undefined && firstChild.children[0].text === '');\n}\nfunction withComponentBlocks(blockComponents, editorDocumentFeatures, editor) {\n  // note that conflicts between the editor document features\n  // and the child field document features are dealt with elsewhere\n  const memoizedGetDocumentFeaturesForChildField = (0,_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_49__[\"default\"])(options => {\n    return getDocumentFeaturesForChildField(editorDocumentFeatures, options);\n  });\n  const {\n    normalizeNode,\n    deleteBackward,\n    insertBreak\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection) {\n      const ancestorComponentBlock = getAncestorComponentBlock(editor);\n      if (ancestorComponentBlock.isInside && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isStart(editor, editor.selection.anchor, ancestorComponentBlock.prop[1]) && ancestorComponentBlock.prop[1][ancestorComponentBlock.prop[1].length - 1] === 0) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          at: ancestorComponentBlock.componentBlock[1]\n        });\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.insertBreak = () => {\n    const ancestorComponentBlock = getAncestorComponentBlock(editor);\n    if (editor.selection && ancestorComponentBlock.isInside) {\n      const {\n        prop: [componentPropNode, componentPropPath],\n        componentBlock: [componentBlockNode, componentBlockPath]\n      } = ancestorComponentBlock;\n      const isLastProp = componentPropPath[componentPropPath.length - 1] === componentBlockNode.children.length - 1;\n      if (componentPropNode.type === 'component-block-prop') {\n        const [[paragraphNode, paragraphPath]] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n          match: node => node.type === 'paragraph'\n        });\n        const isLastParagraph = paragraphPath[paragraphPath.length - 1] === componentPropNode.children.length - 1;\n        if (slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(paragraphNode) === '' && isLastParagraph) {\n          if (isLastProp) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n              at: paragraphPath,\n              to: slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(ancestorComponentBlock.componentBlock[1])\n            });\n          } else {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.move(editor, {\n              distance: 1,\n              unit: 'line'\n            });\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: paragraphPath\n            });\n          }\n          return;\n        }\n      }\n      if (componentPropNode.type === 'component-inline-prop') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n          const componentBlock = blockComponents[componentBlockNode.component];\n          if (componentPropNode.propPath !== undefined && componentBlock !== undefined) {\n            const rootSchema = {\n              kind: 'object',\n              fields: componentBlock.schema\n            };\n            const ancestorFields = getAncestorSchemas(rootSchema, componentPropNode.propPath, componentBlockNode.props);\n            const idx = [...ancestorFields].reverse().findIndex(item => item.kind === 'array');\n            if (idx !== -1) {\n              const arrayFieldIdx = ancestorFields.length - 1 - idx;\n              const arrayField = ancestorFields[arrayFieldIdx];\n              (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(arrayField.kind === 'array');\n              const val = getValueAtPropPath(componentBlockNode.props, componentPropNode.propPath.slice(0, arrayFieldIdx));\n              if (doesSchemaOnlyEverContainASingleChildField(arrayField.element)) {\n                if (slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(componentPropNode) === '' && val.length - 1 === componentPropNode.propPath[arrayFieldIdx]) {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                    at: componentPropPath\n                  });\n                  if (isLastProp) {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n                      type: 'paragraph',\n                      children: [{\n                        text: ''\n                      }]\n                    }, {\n                      at: slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(componentBlockPath)\n                    });\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(componentBlockPath));\n                  } else {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.move(editor, {\n                      distance: 1,\n                      unit: 'line'\n                    });\n                  }\n                } else {\n                  insertBreak();\n                }\n                return;\n              }\n            }\n          }\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.splitNodes(editor, {\n            always: true\n          });\n          const splitNodePath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(componentPropPath);\n          if (isLastProp) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n              at: splitNodePath,\n              to: slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(componentBlockPath)\n            });\n          } else {\n            moveChildren(editor, splitNodePath, [...slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(splitNodePath), 0]);\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: splitNodePath\n            });\n          }\n        });\n        return;\n      }\n    }\n    insertBreak();\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (node.type === 'component-inline-prop' && !node.propPath && (node.children.length !== 1 || !slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node.children[0]) || node.children[0].text !== '')) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n        at: path\n      });\n      return;\n    }\n    if (node.type === 'component-block') {\n      const componentBlock = blockComponents[node.component];\n      if (componentBlock) {\n        const rootSchema = {\n          kind: 'object',\n          fields: componentBlock.schema\n        };\n        const updatedProps = addMissingFields(node.props, rootSchema);\n        if (updatedProps !== node.props) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n            props: updatedProps\n          }, {\n            at: path\n          });\n          return;\n        }\n        for (const [propPath, arrayField] of findArrayFieldsWithSingleChildField(rootSchema, node.props)) {\n          if (node.children.length === 1 && node.children[0].type === 'component-inline-prop' && node.children[0].propPath === undefined) {\n            break;\n          }\n          const nodesWithin = [];\n          for (const [idx, childNode] of node.children.entries()) {\n            if ((childNode.type === 'component-block-prop' || childNode.type === 'component-inline-prop') && childNode.propPath !== undefined) {\n              const subPath = childNode.propPath.concat();\n              while (subPath.length) {\n                if (typeof subPath.pop() === 'number') break;\n              }\n              if (areArraysEqual(propPath, subPath)) {\n                nodesWithin.push([idx, childNode]);\n              }\n            }\n          }\n          const arrVal = getValueAtPropPath(node.props, propPath);\n          const prevKeys = getKeysForArrayValue(arrVal);\n          const prevKeysSet = new Set(prevKeys);\n          const alreadyUsedIndicies = new Set();\n          const newVal = [];\n          const newKeys = [];\n          const getNewKey = () => {\n            let key = getNewArrayElementKey();\n            while (prevKeysSet.has(key)) {\n              key = getNewArrayElementKey();\n            }\n            return key;\n          };\n          for (const [, node] of nodesWithin) {\n            const idxFromValue = node.propPath[propPath.length];\n            (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(typeof idxFromValue === 'number');\n            if (arrVal.length <= idxFromValue || alreadyUsedIndicies.has(idxFromValue) && isEmptyChildFieldNode(node)) {\n              newVal.push(getInitialPropsValue(arrayField.element));\n              newKeys.push(getNewKey());\n            } else {\n              alreadyUsedIndicies.add(idxFromValue);\n              newVal.push(arrVal[idxFromValue]);\n              newKeys.push(alreadyUsedIndicies.has(idxFromValue) ? getNewKey() : prevKeys[idxFromValue]);\n            }\n          }\n          setKeysForArrayValue(newVal, newKeys);\n          if (!areArraysEqual(arrVal, newVal)) {\n            const transformedProps = replaceValueAtPropPath(rootSchema, node.props, newVal, propPath);\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n              props: transformedProps\n            }, {\n              at: path\n            });\n            for (const [idx, [idxInChildrenOfBlock, nodeWithin]] of nodesWithin.entries()) {\n              const newPropPath = [...nodeWithin.propPath];\n              newPropPath[propPath.length] = idx;\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                propPath: newPropPath\n              }, {\n                at: [...path, idxInChildrenOfBlock]\n              });\n            }\n            return;\n          }\n        }\n        const missingKeys = new Map(findChildPropPaths(node.props, componentBlock.schema).map(x => [JSON.stringify(x.path), x.options.kind]));\n        node.children.forEach(node => {\n          (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(node.type === 'component-block-prop' || node.type === 'component-inline-prop');\n          missingKeys.delete(JSON.stringify(node.propPath));\n        });\n        if (missingKeys.size) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, [...missingKeys].map(([prop, kind]) => ({\n            type: `component-${kind}-prop`,\n            propPath: prop ? JSON.parse(prop) : prop,\n            children: [{\n              text: ''\n            }]\n          })), {\n            at: [...path, node.children.length]\n          });\n          return;\n        }\n        const foundProps = new Set();\n        const stringifiedInlinePropPaths = {};\n        findChildPropPaths(node.props, blockComponents[node.component].schema).forEach((x, index) => {\n          stringifiedInlinePropPaths[JSON.stringify(x.path)] = {\n            options: x.options,\n            index\n          };\n        });\n        for (const [index, childNode] of node.children.entries()) {\n          if (\n          // children that are not these will be handled by\n          // the generic allowedChildren normalization\n          childNode.type !== 'component-inline-prop' && childNode.type !== 'component-block-prop') {\n            continue;\n          }\n          const childPath = [...path, index];\n          const stringifiedPropPath = JSON.stringify(childNode.propPath);\n          if (stringifiedInlinePropPaths[stringifiedPropPath] === undefined) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: childPath\n            });\n            return;\n          }\n          if (foundProps.has(stringifiedPropPath)) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: childPath\n            });\n            return;\n          }\n          foundProps.add(stringifiedPropPath);\n          const propInfo = stringifiedInlinePropPaths[stringifiedPropPath];\n          const expectedIndex = propInfo.index;\n          if (index !== expectedIndex) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n              at: childPath,\n              to: [...path, expectedIndex]\n            });\n            return;\n          }\n          const expectedChildNodeType = `component-${propInfo.options.kind}-prop`;\n          if (childNode.type !== expectedChildNodeType) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n              type: expectedChildNodeType\n            }, {\n              at: childPath\n            });\n            return;\n          }\n          const documentFeatures = memoizedGetDocumentFeaturesForChildField(propInfo.options);\n          if (normalizeNodeWithinComponentProp([childNode, childPath], editor, documentFeatures)) {\n            return;\n          }\n        }\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\n// the only thing that this will fix is a new field being added to an object field, nothing else.\nfunction addMissingFields(value, schema) {\n  if (schema.kind === 'child' || schema.kind === 'form') {\n    return value;\n  }\n  if (schema.kind === 'conditional') {\n    const conditionalValue = value;\n    const updatedInnerValue = addMissingFields(conditionalValue.value, schema.values[conditionalValue.discriminant.toString()]);\n    if (updatedInnerValue === conditionalValue.value) {\n      return value;\n    }\n    return {\n      discriminant: conditionalValue.discriminant,\n      value: updatedInnerValue\n    };\n  }\n  if (schema.kind === 'array') {\n    const arrValue = value;\n    const newArrValue = arrValue.map(x => addMissingFields(x, schema.element));\n    if (areArraysEqual(arrValue, newArrValue)) {\n      return value;\n    }\n    return newArrValue;\n  }\n  if (schema.kind === 'object') {\n    const objectValue = value;\n    let hasChanged = false;\n    const newObjectValue = {};\n    for (const [key, innerSchema] of Object.entries(schema.fields)) {\n      const innerValue = objectValue[key];\n      if (innerValue === undefined) {\n        hasChanged = true;\n        newObjectValue[key] = getInitialPropsValue(innerSchema);\n        continue;\n      }\n      const newInnerValue = addMissingFields(innerValue, innerSchema);\n      if (newInnerValue !== innerValue) {\n        hasChanged = true;\n      }\n      newObjectValue[key] = newInnerValue;\n    }\n    if (hasChanged) {\n      return newObjectValue;\n    }\n    return value;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nfunction ComponentInlineProp(props) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n    ...props.attributes,\n    children: props.children\n  });\n}\nfunction getInitialValue(type, componentBlock) {\n  const props = getInitialPropsValue({\n    kind: 'object',\n    fields: componentBlock.schema\n  });\n  return {\n    type: 'component-block',\n    component: type,\n    props,\n    children: findChildPropPaths(props, componentBlock.schema).map(x => ({\n      type: `component-${x.options.kind}-prop`,\n      propPath: x.path,\n      children: [x.options.kind === 'block' ? {\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      } : {\n        text: ''\n      }]\n    }))\n  };\n}\nfunction insertComponentBlock(editor, componentBlocks, componentBlock) {\n  const node = getInitialValue(componentBlock, componentBlocks[componentBlock]);\n  insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, node);\n  const componentBlockEntry = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: node => node.type === 'component-block'\n  });\n  if (componentBlockEntry) {\n    const start = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, componentBlockEntry[1]);\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setSelection(editor, {\n      anchor: start,\n      focus: start\n    });\n  }\n}\nconst ComponentBlocksElement = ({\n  attributes,\n  children,\n  element: __elementToGetPath\n}) => {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const [currentElement, setElement] = useElementWithSetNodes(editor, __elementToGetPath);\n  const blockComponents = useDocumentEditorConfig().componentBlocks;\n  const componentBlock = blockComponents[currentElement.component];\n  const propsWithChildFields = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (!componentBlock) return;\n    const blockChildrenByPath = new Map();\n    for (const child of currentElement.children) {\n      if (child.type === 'component-block-prop' && child.propPath) {\n        blockChildrenByPath.set(JSON.stringify(child.propPath), child.children);\n      }\n    }\n    if (!blockChildrenByPath.size) return currentElement.props;\n    return transformProps({\n      kind: 'object',\n      fields: componentBlock.schema\n    }, currentElement.props, {\n      child(schema, value, propPath) {\n        if (schema.options.kind === 'block') {\n          const key = JSON.stringify(propPath);\n          const children = blockChildrenByPath.get(key);\n          if (children) {\n            return children.map(cloneDescendent);\n          }\n        }\n        return value;\n      }\n    });\n  }, [componentBlock, currentElement]);\n  const elementToGetPathRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)({\n    __elementToGetPath,\n    currentElement,\n    propsWithChildFields\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    elementToGetPathRef.current = {\n      __elementToGetPath,\n      currentElement,\n      propsWithChildFields\n    };\n  });\n  const onRemove = useEventCallback(() => {\n    const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, __elementToGetPath);\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n      at: path\n    });\n  });\n  const onPropsChange = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((cb, ignoreChildFields) => {\n    const prevProps = elementToGetPathRef.current.propsWithChildFields;\n    updateComponentBlockElementProps(editor, componentBlock, prevProps, cb(prevProps), slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, elementToGetPathRef.current.__elementToGetPath), setElement, ignoreChildFields);\n  }, [setElement, componentBlock, editor]);\n  const getToolbarPreviewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    if (!componentBlock) {\n      return () => {\n        throw new Error('expected component block to exist when called');\n      };\n    }\n    return createGetPreviewProps({\n      kind: 'object',\n      fields: componentBlock.schema\n    }, cb => onPropsChange(cb, false), () => undefined);\n  }, [componentBlock, onPropsChange]);\n  if (!componentBlock) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"div\", {\n      style: {\n        border: 'red 4px solid',\n        padding: 8\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"pre\", {\n        contentEditable: false,\n        style: {\n          userSelect: 'none'\n        },\n        children: `The block \"${currentElement.component}\" no longer exists.\n\nProps:\n\n${JSON.stringify(currentElement.props, null, 2)}\n\nContent:`\n      }), children]\n    });\n  }\n  const toolbarPreviewProps = getToolbarPreviewProps(propsWithChildFields);\n  const renderedBlock = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ComponentBlockRender, {\n    children: children,\n    componentBlock: componentBlock,\n    element: currentElement,\n    onChange: onPropsChange,\n    onRemove: onRemove\n  });\n  return componentBlock.chromeless ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChromelessComponentBlockElement, {\n    element: __elementToGetPath,\n    attributes: attributes,\n    renderedBlock: renderedBlock,\n    componentBlock: componentBlock,\n    onRemove: onRemove,\n    previewProps: toolbarPreviewProps\n  }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ChromefulComponentBlockElement, {\n    attributes: attributes,\n    children: children,\n    componentBlock: componentBlock,\n    onRemove: onRemove,\n    previewProps: toolbarPreviewProps,\n    renderedBlock: renderedBlock,\n    elementProps: currentElement.props\n  });\n};\n\nfunction insertDivider(editor) {\n  insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n    type: 'divider',\n    children: [{\n      text: ''\n    }]\n  });\n  slate__WEBPACK_IMPORTED_MODULE_104__.Editor.insertNode(editor, {\n    type: 'paragraph',\n    children: [{\n      text: ''\n    }]\n  });\n}\nconst DividerButton = () => {\n  const {\n    editor,\n    dividers: {\n      isDisabled\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    prominence: \"low\",\n    isDisabled: isDisabled,\n    onPress: () => {\n      insertDivider(editor);\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_minusIcon__WEBPACK_IMPORTED_MODULE_50__.minusIcon\n    })\n  }), [editor, isDisabled]);\n};\nconst dividerButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  delay: 200,\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DividerButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Divider\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n      children: \"---\"\n    })]\n  })]\n});\nfunction DividerElement({\n  attributes,\n  children\n}) {\n  const selected = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSelected)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"div\", {\n    ...attributes,\n    style: {\n      caretColor: 'transparent'\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"hr\", {\n      style: {\n        backgroundColor: selected ? _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected : _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderIdle\n      }\n    }), children]\n  });\n}\n\nconst LayoutContainer = ({\n  attributes,\n  children,\n  element\n}) => {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const layout = element.layout;\n  const layoutOptions = useDocumentEditorConfig().documentFeatures.layouts;\n  const currentLayoutIndex = layoutOptions.findIndex(x => x.toString() === layout.toString());\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    className: blockElementSpacing,\n    ...attributes,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n      element: element,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n          columnGap: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular,\n          display: 'grid'\n        }),\n        style: {\n          gridTemplateColumns: layout.map(x => `${x}fr`).join(' ')\n        },\n        children: children\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          padding: \"regular\",\n          gap: \"regular\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.ActionGroup, {\n            selectionMode: \"single\",\n            prominence: \"low\",\n            density: \"compact\",\n            onAction: key => {\n              const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n              const layoutOption = layoutOptions[key];\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                type: 'layout',\n                layout: layoutOption\n              }, {\n                at: path\n              });\n              slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n            },\n            selectedKeys: currentLayoutIndex !== -1 ? [currentLayoutIndex.toString()] : [],\n            children: layoutOptions.map((layoutOption, i) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n              children: makeLayoutIcon(layoutOption)\n            }, i))\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarSeparator, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n              prominence: \"low\",\n              onPress: () => {\n                const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n                slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                  at: path\n                });\n              },\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n              })\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n              tone: \"critical\",\n              children: \"Remove\"\n            })]\n          })]\n        })\n      })]\n    })\n  });\n};\nconst LayoutArea = ({\n  attributes,\n  children\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      borderColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.border.neutral,\n      borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.regular,\n      borderStyle: 'dashed',\n      borderWidth: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.border.regular,\n      padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.medium\n    }),\n    ...attributes,\n    children: children\n  });\n};\nconst insertLayout = (editor, layout) => {\n  insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, [{\n    type: 'layout',\n    layout,\n    children: [{\n      type: 'layout-area',\n      children: [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }]\n    }]\n  }]);\n  const layoutEntry = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: x => x.type === 'layout'\n  });\n  if (layoutEntry) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, [...layoutEntry[1], 0]);\n  }\n};\n\n// Utils\n// ------------------------------\n\nfunction makeLayoutIcon(ratios) {\n  const size = 16;\n  const element = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    role: \"img\",\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      display: 'grid',\n      gridTemplateColumns: ratios.map(r => `${r}fr`).join(' '),\n      gap: 2,\n      width: size,\n      height: size\n    }),\n    children: ratios.map((_, i) => {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n          backgroundColor: 'currentcolor',\n          borderRadius: 1\n        })\n      }, i);\n    })\n  });\n  return element;\n}\nconst layoutsIcon = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n  src: _keystar_ui_icon_icons_columnsIcon__WEBPACK_IMPORTED_MODULE_51__.columnsIcon\n});\nconst LayoutsButton = ({\n  layouts\n}) => {\n  const {\n    editor,\n    layouts: {\n      isSelected\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      prominence: \"low\",\n      isSelected: isSelected,\n      onPress: () => {\n        if (isElementActive(editor, 'layout')) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n            match: node => node.type === 'layout'\n          });\n        } else {\n          insertLayout(editor, layouts[0]);\n        }\n        slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n      },\n      children: layoutsIcon\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n      children: \"Layouts\"\n    })]\n  }), [editor, isSelected, layouts]);\n};\n\nconst toggleList = (editor, format) => {\n  const listAbove = getListTypeAbove(editor);\n  const isActive = isElementActive(editor, format) && (listAbove === 'none' || listAbove === format);\n  slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      match: isListNode,\n      split: true,\n      mode: isActive ? 'all' : 'lowest'\n    });\n    if (!isActive) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n        type: format,\n        children: []\n      }, {\n        match: x => x.type !== 'list-item-content' && isBlock(x)\n      });\n    }\n  });\n};\nfunction ListButtons(props) {\n  const {\n    editor,\n    lists\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    const disabledKeys = [];\n    if (lists.ordered.isDisabled) disabledKeys.push('ordered');\n    if (lists.unordered.isDisabled) disabledKeys.push('unordered');\n    const selectedKeys = [];\n    if (lists.ordered.isSelected) selectedKeys.push('ordered');\n    if (lists.unordered.isSelected) selectedKeys.push('unordered');\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.ActionGroup, {\n      flexShrink: 0,\n      \"aria-label\": \"Lists\",\n      selectionMode: \"single\",\n      buttonLabelBehavior: \"hide\",\n      density: \"compact\"\n      // overflowMode=\"collapse\"\n      ,\n      prominence: \"low\",\n      summaryIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_listIcon__WEBPACK_IMPORTED_MODULE_52__.listIcon\n      }),\n      selectedKeys: selectedKeys,\n      disabledKeys: disabledKeys,\n      onAction: key => {\n        const format = `${key}-list`;\n        toggleList(editor, format);\n        slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n      },\n      children: [props.lists.unordered && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n        textValue: \"Bullet List (- )\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_listIcon__WEBPACK_IMPORTED_MODULE_52__.listIcon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: \"Bullet List\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n          children: \"-\\u23B5\"\n        })]\n      }, \"unordered\"), props.lists.ordered && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n        textValue: \"Numbered List (1.)\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_listOrderedIcon__WEBPACK_IMPORTED_MODULE_53__.listOrderedIcon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: \"Numbered List\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n          children: \"1.\\u23B5\"\n        })]\n      }, \"ordered\")].filter(x => x !== false)\n    });\n  }, [editor, lists.ordered.isDisabled, lists.ordered.isSelected, lists.unordered.isDisabled, lists.unordered.isSelected, props.lists.ordered, props.lists.unordered]);\n}\nfunction nestList(editor) {\n  const block = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: isBlock\n  });\n  if (!block || block[0].type !== 'list-item-content') {\n    return false;\n  }\n  const listItemPath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(block[1]);\n  // we're the first item in the list therefore we can't nest\n  if (listItemPath[listItemPath.length - 1] === 0) {\n    return false;\n  }\n  const previousListItemPath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(listItemPath);\n  const previousListItemNode = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, previousListItemPath);\n  if (previousListItemNode.children.length !== 1) {\n    // there's a list nested inside our previous sibling list item so move there\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n      at: listItemPath,\n      to: [...previousListItemPath, previousListItemNode.children.length - 1, previousListItemNode.children[previousListItemNode.children.length - 1].children.length]\n    });\n    return true;\n  }\n  const type = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(block[1]))[0].type;\n  slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type,\n      children: []\n    }, {\n      at: listItemPath\n    });\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n      to: [...previousListItemPath, previousListItemNode.children.length],\n      at: listItemPath\n    });\n  });\n  return true;\n}\nfunction unnestList(editor) {\n  const block = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: isBlock\n  });\n  if (block && block[0].type === 'list-item-content') {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      match: isListNode,\n      split: true\n    });\n    return true;\n  }\n  return false;\n}\n\nfunction getUploadedFileObject(accept) {\n  return new Promise(resolve => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = accept;\n    input.onchange = () => {\n      var _input$files;\n      const file = (_input$files = input.files) === null || _input$files === void 0 ? void 0 : _input$files[0];\n      if (file) {\n        resolve(file);\n      }\n    };\n    document.body.appendChild(input);\n    input.click();\n  });\n}\nasync function getUploadedFile(accept) {\n  const file = await getUploadedFileObject(accept);\n  if (!file) return undefined;\n  return {\n    content: new Uint8Array(await file.arrayBuffer()),\n    filename: file.name\n  };\n}\nfunction getUploadedImage() {\n  return getUploadedFile('image/*');\n}\nfunction useObjectURL(data) {\n  const [url, setUrl] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (data) {\n      const url = URL.createObjectURL(new Blob([data]));\n      setUrl(url);\n      return () => URL.revokeObjectURL(url);\n    } else {\n      setUrl(null);\n    }\n  }, [data]);\n  return url;\n}\n\n// TODO: button labels (\"Choose file\", \"Remove\") need i18n support\nfunction ImageFieldInput(props) {\n  var _props$validation, _props$validation2;\n  const {\n    value\n  } = props;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(() => true, false);\n  const isInEditor = useIsInDocumentEditor();\n  const objectUrl = useObjectURL(value === null ? null : value.data);\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_3__.useId)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n    \"aria-describedby\": props.description ? descriptionId : undefined,\n    \"aria-labelledby\": labelId,\n    direction: \"column\",\n    gap: \"medium\",\n    role: \"group\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldLabel, {\n      id: labelId,\n      elementType: \"span\",\n      isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n      children: props.label\n    }), props.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      size: \"small\",\n      color: \"neutralSecondary\",\n      id: descriptionId,\n      children: props.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        onPress: async () => {\n          const image = await getUploadedImage();\n          if (image) {\n            var _image$filename$match;\n            const extension = (_image$filename$match = image.filename.match(/\\.([^.]+$)/)) === null || _image$filename$match === void 0 ? void 0 : _image$filename$match[1];\n            if (extension) {\n              props.onChange({\n                data: image.content,\n                extension,\n                filename: image.filename\n              });\n            }\n          }\n        },\n        children: \"Choose file\"\n      }), value !== null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        prominence: \"low\",\n        onPress: () => {\n          props.onChange(null);\n          onBlur();\n        },\n        children: \"Remove\"\n      })]\n    }), objectUrl && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n      alignSelf: \"start\",\n      backgroundColor: \"canvas\",\n      borderRadius: \"regular\",\n      border: \"neutral\",\n      padding: \"regular\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"img\", {\n        src: objectUrl,\n        alt: \"\",\n        style: {\n          display: 'block',\n          maxHeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.alias.singleLineWidth,\n          maxWidth: '100%'\n        }\n      })\n    }), isInEditor && value !== null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n      label: \"Filename\",\n      onChange: filename => {\n        props.onChange({\n          ...value,\n          filename\n        });\n      },\n      value: value.filename\n    }), (props.forceValidation || blurred) && ((_props$validation2 = props.validation) === null || _props$validation2 === void 0 ? void 0 : _props$validation2.isRequired) && value === null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.FieldMessage, {\n      children: [props.label, \" is required\"]\n    })]\n  });\n}\n\nconst ImageElement = ({\n  attributes,\n  children,\n  element: __elementForGettingPath\n}) => {\n  const [dialogOpen, setDialogOpen] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  const [aspectRatio, setAspectRatio] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)();\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const [currentElement, setNode] = useElementWithSetNodes(editor, __elementForGettingPath);\n  const objectUrl = useObjectURL(currentElement.src.content);\n  const activePopoverElement = useActiveBlockPopover();\n  const selected = activePopoverElement === __elementForGettingPath;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockWrapper, {\n      attributes: attributes,\n      children: [children, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n        element: __elementForGettingPath,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n          style: {\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(NotEditable, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"img\", {\n              ...attributes,\n              src: objectUrl,\n              alt: currentElement.alt,\n              \"data-selected\": selected,\n              onLoad: e => {\n                const target = e.target;\n                setAspectRatio(target.width / target.height);\n              },\n              className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n                boxSizing: 'border-box',\n                borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.regular,\n                display: 'block',\n                maxHeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.scale[3600],\n                maxWidth: '100%',\n                transition: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.transition)('box-shadow'),\n                '&[data-selected=true]': {\n                  boxShadow: `0 0 0 ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.border.regular} ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected}`\n                }\n              })\n            })\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n          hideArrow: true,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n            gap: \"regular\",\n            padding: \"regular\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n              gap: \"small\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                  prominence: \"low\",\n                  onPress: () => setDialogOpen(true),\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                    src: _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_20__.editIcon\n                  })\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                  children: stringFormatter.format('edit')\n                })]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                  prominence: \"low\",\n                  onPress: async () => {\n                    const src = await getUploadedImage();\n                    if (src) {\n                      setNode({\n                        src\n                      });\n                    }\n                  },\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                    src: _keystar_ui_icon_icons_fileUpIcon__WEBPACK_IMPORTED_MODULE_54__.fileUpIcon\n                  })\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                  children: \"Choose file\"\n                })]\n              })]\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Divider, {\n              orientation: \"vertical\"\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                prominence: \"low\",\n                onPress: () => {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                    at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, __elementForGettingPath)\n                  });\n                },\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                  src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                tone: \"critical\",\n                children: \"Remove\"\n              })]\n            })]\n          })\n        })]\n      }, aspectRatio)]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.DialogContainer, {\n      onDismiss: () => {\n        setDialogOpen(false);\n        focusWithPreviousSelection(editor);\n      },\n      children: dialogOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageDialog, {\n        alt: currentElement.alt,\n        title: currentElement.title,\n        filename: currentElement.src.filename,\n        onSubmit: ({\n          alt,\n          filename,\n          title\n        }) => {\n          setNode({\n            alt,\n            title,\n            src: {\n              content: currentElement.src.content,\n              filename\n            }\n          });\n        }\n      })\n    })]\n  });\n};\nfunction ImageDialog(props) {\n  const {\n    images\n  } = useDocumentEditorConfig().documentFeatures;\n  if (!images) {\n    throw new Error('unexpected image rendered when images are disabled');\n  }\n  const schema = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => object(images.schema), [images]);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({\n    alt: props.alt,\n    title: props.title\n  });\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => createGetPreviewProps(schema, setState, () => undefined), [schema])(state);\n  const [filenameWithoutExtension, filenameExtension] = splitFilename(props.filename);\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  let [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(filenameWithoutExtension);\n  let [fileNameTouched, setFileNameTouched] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  let {\n    dismiss\n  } = (0,_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.useDialogContainer)();\n  let stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(l10nMessages);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_12__.Dialog, {\n    size: \"small\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: event => {\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        setForceValidation(true);\n        if (fileName && clientSideValidateProp(schema, state, undefined)) {\n          dismiss();\n          props.onSubmit({\n            alt: state.alt,\n            title: state.title,\n            filename: [fileName, filenameExtension].join('.')\n          });\n        }\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Heading, {\n        children: \"Image details\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_17__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_4__.TextField, {\n            label: \"File name\",\n            onChange: setFileName,\n            onBlur: () => setFileNameTouched(true),\n            value: fileName,\n            isRequired: true,\n            errorMessage: (fileNameTouched || forceValidation) && !fileName ? 'Please provide a file name.' : undefined,\n            endElement: filenameExtension ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingEnd: \"regular\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n                color: \"neutralTertiary\",\n                children: [\".\", filenameExtension]\n              })\n            }) : null\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValueContentFromPreviewProps, {\n            forceValidation: forceValidation,\n            autoFocus: true,\n            ...previewProps\n          })]\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ButtonGroup, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          onPress: dismiss,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n          prominence: \"high\",\n          type: \"submit\",\n          children: stringFormatter.format('save')\n        })]\n      })]\n    })\n  });\n}\nfunction splitFilename(filename) {\n  const dotIndex = filename.lastIndexOf('.');\n  if (dotIndex === -1) {\n    return [filename, ''];\n  }\n  return [filename.substring(0, dotIndex), filename.substring(dotIndex + 1)];\n}\nlet _imageIcon = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n  src: _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_55__.imageIcon\n});\nfunction ImageButton() {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n      prominence: \"low\",\n      onPress: async () => {\n        const src = await getUploadedImage();\n        if (src) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n            type: 'image',\n            src,\n            alt: '',\n            title: '',\n            children: [{\n              text: ''\n            }]\n          });\n        }\n      },\n      children: _imageIcon\n    })\n  });\n}\nconst imageButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Image\"\n    })\n  })]\n});\nfunction withImages(editor) {\n  const {\n    insertData\n  } = editor;\n  editor.insertData = data => {\n    const images = Array.from(data.files).filter(x => x.type.startsWith('image/'));\n    if (images.length) {\n      Promise.all(images.map(async file => ({\n        name: file.name,\n        data: new Uint8Array(await file.arrayBuffer())\n      }))).then(images => {\n        insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n          type: 'image',\n          src: {\n            content: images[0].data,\n            filename: images[0].name\n          },\n          alt: '',\n          title: '',\n          children: [{\n            text: ''\n          }]\n        });\n      });\n      return;\n    }\n    insertData(data);\n  };\n  return editor;\n}\n\nfunction order(a, b) {\n  return {\n    start: Math.min(a, b),\n    end: Math.max(a, b)\n  };\n}\nfunction getRelativeRowPath(hasHead, rowIndex) {\n  return hasHead ? rowIndex === 0 ? [0, 0] : [1, rowIndex - 1] : [0, rowIndex];\n}\nfunction getSelectedTableArea(editor) {\n  var _Editor$above, _editor$selection, _Editor$above2, _editor$selection2;\n  const anchor = (_Editor$above = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: nodeTypeMatcher('table-cell'),\n    at: (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.anchor.path\n  })) === null || _Editor$above === void 0 ? void 0 : _Editor$above[1];\n  const focus = (_Editor$above2 = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: nodeTypeMatcher('table-cell'),\n    at: (_editor$selection2 = editor.selection) === null || _editor$selection2 === void 0 ? void 0 : _editor$selection2.focus.path\n  })) === null || _Editor$above2 === void 0 ? void 0 : _Editor$above2[1];\n  const table = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: nodeTypeMatcher('table')\n  });\n  if (editor.selection && table && slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(table[0].children[0]) && anchor && focus && slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(anchor.slice(0, -3), focus.slice(0, -3))) {\n    const [start, end] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.edges(editor, editor.selection);\n    return {\n      tablePath: table[1],\n      table: table[0],\n      singleCell: slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(anchor, focus) ? slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, anchor), start) && slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, anchor), end) && !slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(start, end) ? 'selected' : 'not-selected' : 'many',\n      row: order(anchor[anchor.length - 2] + anchor[anchor.length - 3], focus[focus.length - 2] + focus[anchor.length - 3]),\n      column: order(anchor[anchor.length - 1], focus[focus.length - 1])\n    };\n  }\n}\nconst cell = header => ({\n  type: 'table-cell',\n  ...(header ? {\n    header: true\n  } : {}),\n  children: [{\n    type: 'paragraph',\n    children: [{\n      text: ''\n    }]\n  }]\n});\nfunction cloneDescendant(node) {\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node)) return {\n    ...node\n  };\n  return {\n    ...node,\n    children: node.children.map(cloneDescendant)\n  };\n}\nfunction withTable(editor) {\n  const {\n    deleteFragment,\n    normalizeNode,\n    getFragment,\n    insertFragment,\n    deleteBackward\n  } = editor;\n  editor.insertFragment = fragment => {\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (!selectedTableArea || fragment.length !== 1 || fragment[0].type !== 'table') {\n      insertFragment(fragment);\n      return;\n    }\n    const newRows = fragment[0].children.flatMap(child => child.type === 'table-head' || child.type === 'table-body' ? child.children : []);\n    if (!newRows.every(nodeTypeMatcher('table-row'))) {\n      insertFragment(fragment);\n      return;\n    }\n    let {\n      row,\n      column,\n      tablePath,\n      table\n    } = selectedTableArea;\n    const existingBody = selectedTableArea.table.children[selectedTableArea.table.children.length === 1 ? 0 : 1];\n    if (newRows[0].type !== 'table-row' || existingBody.type !== 'table-body' || existingBody.children[0].type !== 'table-row') {\n      insertFragment(fragment);\n      return;\n    }\n    const hasHead = table.children[0].type === 'table-head';\n    if (selectedTableArea.singleCell !== 'many') {\n      row = {\n        start: row.start,\n        end: Math.min(row.start + newRows.length - 1, existingBody.children.length - 1 + (hasHead ? 1 : 0))\n      };\n      column = {\n        start: column.start,\n        end: Math.min(column.start + newRows[0].children.length - 1, existingBody.children[0].children.length - 1)\n      };\n    }\n    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n      for (let rowIndex = row.start; rowIndex <= row.end; rowIndex++) {\n        const newRow = newRows[(rowIndex - row.start) % newRows.length];\n        for (let cellIndex = column.start; cellIndex <= column.end; cellIndex++) {\n          const relativeCellPath = [...getRelativeRowPath(hasHead, rowIndex), cellIndex];\n          const cell = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(table, relativeCellPath);\n          const newCell = newRow.children[(cellIndex - column.start) % newRow.children.length];\n          if (cell.type !== 'table-cell' || newCell.type !== 'table-cell') {\n            continue;\n          }\n          const cellPath = [...tablePath, ...relativeCellPath];\n          for (const childIdx of [...cell.children.keys()].reverse()) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...cellPath, childIdx]\n            });\n          }\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, newCell.children.map(cloneDescendant), {\n            at: [...cellPath, 0]\n          });\n        }\n      }\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setSelection(editor, {\n        anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, [...tablePath, ...getRelativeRowPath(hasHead, row.start), column.start]),\n        focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, [...tablePath, ...getRelativeRowPath(hasHead, row.end), column.end])\n      });\n    });\n  };\n  editor.deleteBackward = unit => {\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) && editor.selection.anchor.offset === 0) {\n      const tableCell = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: nodeTypeMatcher('table-cell')\n      });\n      if (tableCell && tableCell[0].children[0].type === 'paragraph' && tableCell[0].children[0].children[0].type === undefined && slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(editor.selection.anchor.path, [...tableCell[1], 0, 0])) {\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.getFragment = () => {\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (selectedTableArea && selectedTableArea.singleCell !== 'not-selected') {\n      var _table$children$;\n      const {\n        table\n      } = selectedTableArea;\n      const first = table.children[0].type === 'table-head' || table.children[0].type === 'table-body' ? table.children[0] : undefined;\n      if (!first) {\n        return getFragment();\n      }\n      const second = ((_table$children$ = table.children[1]) === null || _table$children$ === void 0 ? void 0 : _table$children$.type) === 'table-body' ? table.children[1] : undefined;\n      const body = second || first;\n      const hasHead = first.type === 'table-head';\n      const isSelectionInHead = selectedTableArea.row.start === 0 && !!second;\n      const columnLength = selectedTableArea.column.end - selectedTableArea.column.start + 1;\n      return [{\n        type: 'table',\n        children: [...(isSelectionInHead ? [{\n          type: 'table-head',\n          children: [{\n            type: 'table-row',\n            children: Array.from({\n              length: columnLength\n            }).map((_, columnIndex) => first.children[0].children[columnIndex + selectedTableArea.column.start])\n          }]\n        }] : []), {\n          type: 'table-body',\n          children: Array.from({\n            length: selectedTableArea.row.end - selectedTableArea.row.start + (isSelectionInHead ? 0 : 1)\n          }).map((_, rowIndex) => ({\n            type: 'table-row',\n            children: Array.from({\n              length: columnLength\n            }).map((_, columnIndex) => body.children[rowIndex + selectedTableArea.row.start - (hasHead && !isSelectionInHead ? 1 : 0)].children[columnIndex + selectedTableArea.column.start])\n          }))\n        }]\n      }];\n    }\n    return getFragment();\n  };\n  editor.deleteFragment = direction => {\n    if (!editor.selection || slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      deleteFragment(direction);\n      return;\n    }\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (!selectedTableArea || selectedTableArea.singleCell === 'not-selected') {\n      deleteFragment(direction);\n      return;\n    }\n    const headOrBody = selectedTableArea.table.children[0];\n    if (!slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(headOrBody) || !slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(headOrBody.children[0])) {\n      deleteFragment(direction);\n      return;\n    }\n    const maxRowIdx = selectedTableArea.table.children.reduce((sum, headOrBody) => sum + (headOrBody.type === 'table-head' || headOrBody.type === 'table-body' ? headOrBody.children.length : 0), 0) - 1;\n    const {\n      row,\n      column,\n      tablePath\n    } = selectedTableArea;\n    // note the fact that hasWholeColumnSelected uses row and hasWholeRowSelected uses column\n    // is not a mistake. if a whole column has been selected, then the starting row is 0 and the end is the last row\n    const hasWholeColumnSelected = row.start === 0 && row.end === maxRowIdx;\n    const hasWholeRowSelected = column.start === 0 && column.end === headOrBody.children[0].children.length - 1;\n    if (hasWholeColumnSelected && hasWholeRowSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n        at: tablePath\n      });\n      return;\n    }\n    const hasHead = headOrBody.type === 'table-head';\n    if (hasWholeRowSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n        for (let i = row.end; i >= row.start; i--) {\n          if (hasHead) {\n            if (i === 0) {\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                at: [...tablePath, 0]\n              });\n              continue;\n            }\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...tablePath, 1, i - 1]\n            });\n            continue;\n          }\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n            at: [...tablePath, 0, i]\n          });\n        }\n      });\n      return;\n    }\n    if (hasWholeColumnSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n        for (let i = column.end; i >= column.start; i--) {\n          for (let rowIdx = 0; rowIdx <= maxRowIdx; rowIdx++) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...tablePath, ...getRelativeRowPath(hasHead, rowIdx), i]\n            });\n          }\n        }\n        const selectionPath = [...tablePath, 0, 0, column.start];\n        const point = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, column.start === 0 ? selectionPath : slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(selectionPath));\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, point);\n      });\n      return;\n    }\n    const selectionStart = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, editor.selection).path;\n    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n      for (let rowIndex = row.start; rowIndex <= row.end; rowIndex++) {\n        for (let cellIndex = column.start; cellIndex <= column.end; cellIndex++) {\n          const relativeCellPath = [...getRelativeRowPath(hasHead, rowIndex), cellIndex];\n          const cell = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(selectedTableArea.table, relativeCellPath);\n          if (!slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(cell)) {\n            continue;\n          }\n          const cellPath = [...tablePath, ...relativeCellPath];\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n            type: 'paragraph',\n            children: [{\n              text: ''\n            }]\n          }, {\n            at: [...cellPath, 0]\n          });\n          for (const childIdx of [...cell.children.keys()].reverse()) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...cellPath, childIdx + 1]\n            });\n          }\n        }\n      }\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, selectionStart);\n    });\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (node.type === 'table-head' && node.children.length > 1) {\n      moveChildren(editor, path, slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(path), (_, i) => i !== 0);\n      return;\n    }\n    let didUpdateThings = false;\n    for (const parent of ['table-body', 'table-head']) {\n      if (node.type === parent) {\n        for (const [rowIdx, row] of node.children.entries()) {\n          if (row.type === 'table-row') {\n            for (const [cellIdx, cell] of row.children.entries()) {\n              if (cell.type === 'table-cell') {\n                const at = [...path, rowIdx, cellIdx];\n                if (cell.header && parent === 'table-body') {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'header', {\n                    at\n                  });\n                  didUpdateThings = true;\n                }\n                if (!cell.header && parent === 'table-head') {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n                    header: true\n                  }, {\n                    at\n                  });\n                  didUpdateThings = true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (didUpdateThings) {\n      return;\n    }\n    if (node.type === 'table') {\n      const maxRowCount = node.children.reduce((max, node) => node.type === 'table-head' || node.type === 'table-body' ? node.children.reduce((max, node) => node.type === 'table-row' ? Math.max(max, node.children.length) : max, max) : max, 0);\n      let didInsert = false;\n      for (const [idx, child] of node.children.entries()) {\n        if (child.type === 'table-body' || child.type === 'table-head') {\n          for (const [rowIdx, row] of child.children.entries()) {\n            if (row.type === 'table-row' && row.children.length !== maxRowCount) {\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, Array.from({\n                length: maxRowCount - row.children.length\n              }, () => cell(child.type === 'table-head')), {\n                at: [...path, idx, rowIdx, row.children.length]\n              });\n              didInsert = true;\n            }\n          }\n        }\n      }\n      if (didInsert) {\n        return;\n      }\n      if (node.children.length === 1 && node.children[0].type === 'table-head') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n          type: 'table-body',\n          children: Array.from({\n            length: node.children[0].children.length\n          }, () => cell(false))\n        }, {\n          at: [...path, 1]\n        });\n        return;\n      }\n      if (node.children.length === 2 && node.children[1].type === 'table-head') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n          at: [...path, 1],\n          to: [...path, 0]\n        });\n        return;\n      }\n      if (node.children.length > 2) {\n        moveChildren(editor, path, slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(path), (_, i) => i !== 0 && i !== 1);\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nconst insertTable = editor => {\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n    type: 'table',\n    children: [{\n      type: 'table-head',\n      children: [{\n        type: 'table-row',\n        children: [cell(true), cell(true), cell(true)]\n      }]\n    }, {\n      type: 'table-body',\n      children: [{\n        type: 'table-row',\n        children: [cell(false), cell(false), cell(false)]\n      }, {\n        type: 'table-row',\n        children: [cell(false), cell(false), cell(false)]\n      }]\n    }]\n  });\n};\nconst SelectedCellsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(undefined);\nfunction getSelectedCells(table, row, column) {\n  var _table$children$;\n  const selectedCells = new Set();\n  const first = table.children[0].type === 'table-head' || table.children[0].type === 'table-body' ? table.children[0] : undefined;\n  if (!first) return selectedCells;\n  const second = ((_table$children$ = table.children[1]) === null || _table$children$ === void 0 ? void 0 : _table$children$.type) === 'table-body' ? table.children[1] : undefined;\n  for (let rowIndex = row.start; rowIndex <= row.end; rowIndex++) {\n    const row = second ? rowIndex === 0 ? first.children[0] : second.children[rowIndex - 1] : first.children[rowIndex];\n    if (!slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(row)) continue;\n    for (let cellIndex = column.start; cellIndex <= column.end; cellIndex++) {\n      selectedCells.add(row.children[cellIndex]);\n    }\n  }\n  return selectedCells;\n}\nfunction TableSelectionProvider(props) {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlate)();\n  const selectedTableArea = getSelectedTableArea(editor);\n  if (selectedTableArea) {\n    var _Editor$above, _editor$selection;\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SelectedCellsContext.Provider, {\n      value: {\n        cells: selectedTableArea.singleCell === 'not-selected' ? new Set() : getSelectedCells(selectedTableArea.table, selectedTableArea.row, selectedTableArea.column),\n        table: selectedTableArea.table,\n        focus: (_Editor$above = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n          match: nodeTypeMatcher('table-cell'),\n          at: (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.focus.path\n        })) === null || _Editor$above === void 0 ? void 0 : _Editor$above[0]\n      },\n      children: props.children\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SelectedCellsContext.Provider, {\n    value: undefined,\n    children: props.children\n  });\n}\nconst StartElementsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)({\n  top: new Map(),\n  left: new Map()\n});\nconst TableElement = ({\n  attributes,\n  children,\n  element\n}) => {\n  var _element$children$;\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const selectedCellsContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SelectedCellsContext);\n  const selectedCells = (selectedCellsContext === null || selectedCellsContext === void 0 ? void 0 : selectedCellsContext.table) === element ? selectedCellsContext : undefined;\n  const startElements = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    const firstTableChild = element.children[0];\n    if (!slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(firstTableChild) || !slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(firstTableChild.children[0])) {\n      return {\n        top: new Map(),\n        left: new Map()\n      };\n    }\n    const top = new Map();\n    const left = new Map();\n    for (const [idx, cell] of firstTableChild.children[0].children.entries()) {\n      if (cell.type !== 'table-cell') continue;\n      top.set(cell, element.children.every(headOrBody => slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(headOrBody) ? headOrBody.children.every(row => slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(row) && (selectedCells === null || selectedCells === void 0 ? void 0 : selectedCells.cells.has(row.children[idx]))) : false));\n    }\n    for (const headOrBody of element.children) {\n      if (headOrBody.type !== 'table-head' && headOrBody.type !== 'table-body') {\n        continue;\n      }\n      for (const row of headOrBody.children) {\n        if (row.type !== 'table-row' || row.children[0].type !== 'table-cell') {\n          continue;\n        }\n        left.set(row.children[0], row.children.every(element => selectedCells === null || selectedCells === void 0 ? void 0 : selectedCells.cells.has(element)));\n      }\n    }\n    return {\n      top,\n      left\n    };\n  }, [element, selectedCells]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(StartElementsContext.Provider, {\n    value: startElements,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SelectedCellsContext.Provider, {\n      value: selectedCells,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockWrapper, {\n        attributes: attributes,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n          element: element,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"table\", {\n            className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n              width: '100%',\n              tableLayout: 'fixed',\n              position: 'relative',\n              borderSpacing: 0,\n              '& *::selection': selectedCells !== null && selectedCells !== void 0 && selectedCells.cells.size ? {\n                backgroundColor: 'transparent'\n              } : undefined\n            }),\n            children: children\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n              gap: \"regular\",\n              padding: \"regular\",\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                  prominence: \"low\",\n                  isSelected: ((_element$children$ = element.children[0]) === null || _element$children$ === void 0 ? void 0 : _element$children$.type) === 'table-head',\n                  onPress: () => {\n                    const tablePath = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n                      if (element.children[0].type === 'table-head') {\n                        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n                          at: [...tablePath, 0, 0],\n                          to: [...tablePath, 1, 0]\n                        });\n                        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                          at: [...tablePath, 0]\n                        });\n                        return;\n                      }\n                      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n                        type: 'table-head',\n                        children: []\n                      }, {\n                        at: [...tablePath, 0]\n                      });\n                      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n                        at: [...tablePath, 1, 0],\n                        to: [...tablePath, 0, 0]\n                      });\n                    });\n                  },\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                    src: _keystar_ui_icon_icons_sheetIcon__WEBPACK_IMPORTED_MODULE_69__.sheetIcon\n                  })\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                  children: \"Header row\"\n                })]\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarSeparator, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                  prominence: \"low\",\n                  onPress: () => {\n                    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                      at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element)\n                    });\n                  },\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                    src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n                  })\n                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                  tone: \"critical\",\n                  children: \"Remove\"\n                })]\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nconst TableBodyElement = ({\n  attributes,\n  children\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"tbody\", {\n    ...attributes,\n    children: children\n  });\n};\nconst TableHeadElement = ({\n  attributes,\n  children\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"thead\", {\n    ...attributes,\n    children: children\n  });\n};\nconst TableRowElement = ({\n  attributes,\n  children,\n  element\n}) => {\n  var _useContext, _table$children$index;\n  const table = (_useContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SelectedCellsContext)) === null || _useContext === void 0 ? void 0 : _useContext.table;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(RowIndexContext.Provider, {\n    value: (_table$children$index = table === null || table === void 0 ? void 0 : table.children.indexOf(element)) !== null && _table$children$index !== void 0 ? _table$children$index : -1,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"tr\", {\n      ...attributes,\n      children: children\n    })\n  });\n};\nconst RowIndexContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(-1);\nfunction TableCellElement({\n  attributes,\n  children,\n  element\n}) {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const selectedCellsContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SelectedCellsContext);\n  const startElements = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(StartElementsContext);\n  const isSelected = selectedCellsContext === null || selectedCellsContext === void 0 ? void 0 : selectedCellsContext.cells.has(element);\n  const size = `calc(100% + 2px)`;\n  const ElementType = element.header ? 'th' : 'td';\n  const borderColor = isSelected ? _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected : _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderIdle;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ElementType, {\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      borderInlineEnd: `1px solid ${borderColor}`,\n      borderBottom: `1px solid ${borderColor}`,\n      borderTop: startElements.top.has(element) ? `1px solid ${borderColor}` : undefined,\n      borderInlineStart: startElements.left.has(element) ? `1px solid ${borderColor}` : undefined,\n      backgroundColor: selectedCellsContext !== null && selectedCellsContext !== void 0 && selectedCellsContext.cells.has(element) ? _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.backgroundSelected : element.header ? _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.slate3 : undefined,\n      position: 'relative',\n      margin: 0,\n      padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.regular,\n      fontWeight: 'inherit',\n      boxSizing: 'border-box',\n      textAlign: 'start',\n      verticalAlign: 'top'\n    }),\n    ...attributes,\n    children: [isSelected && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        contentEditable: false,\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n          position: 'absolute',\n          top: -1,\n          insetInlineStart: -1,\n          background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected,\n          height: size,\n          width: 1\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        contentEditable: false,\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n          position: 'absolute',\n          top: -1,\n          insetInlineStart: -1,\n          background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected,\n          height: 1,\n          width: size\n        })\n      })]\n    }), startElements.top.has(element) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CellSelection, {\n      location: \"top\",\n      selected: !!startElements.top.get(element),\n      label: \"Select Column\",\n      onClick: () => {\n        const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n        const table = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n          match: nodeTypeMatcher('table'),\n          at: path\n        });\n        if (!table) return;\n        const lastTableIndex = table[0].children.length - 1;\n        const tableBody = table[0].children[lastTableIndex];\n        if (tableBody.type !== 'table-body') return;\n        const cellIndex = path[path.length - 1];\n        const endPath = [...table[1], table[0].children.length - 1, tableBody.children.length - 1, cellIndex];\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, {\n          anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, path),\n          focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, endPath)\n        });\n      }\n    }), startElements.left.has(element) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CellSelection, {\n      location: \"left\",\n      selected: !!startElements.left.get(element),\n      label: \"Select Row\",\n      onClick: () => {\n        const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, {\n          anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(path)),\n          focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(path))\n        });\n      }\n    }), startElements.left.has(element) && startElements.top.has(element) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CellSelection, {\n      location: \"top-left\",\n      selected: !!(startElements.top.get(element) && startElements.left.get(element)),\n      label: \"Select Table\",\n      onClick: () => {\n        const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element);\n        const table = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n          match: nodeTypeMatcher('table'),\n          at: path\n        });\n        if (!table) return;\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, {\n          anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, table[1]),\n          focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, table[1])\n        });\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      children: children\n    }), (selectedCellsContext === null || selectedCellsContext === void 0 ? void 0 : selectedCellsContext.focus) === element && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CellMenu, {\n      cell: element,\n      table: selectedCellsContext.table\n    })]\n  });\n}\nfunction CellSelection(props) {\n  const selectedCellsContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(SelectedCellsContext);\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  let {\n    location,\n    selected\n  } = props;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"div\", {\n    contentEditable: false,\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"button\", {\n      tabIndex: -1,\n      type: \"button\",\n      ...(0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.toDataAttributes)({\n        location,\n        selected\n      }),\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.slate3,\n        border: `1px solid ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderIdle}`,\n        margin: 0,\n        padding: 0,\n        position: 'absolute',\n        ':hover': {\n          background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.slate4\n        },\n        // ever so slightly larger hit area\n        '::before': {\n          content: '\"\"',\n          inset: -1,\n          position: 'absolute'\n        },\n        // location\n        '&[data-location=top]': {\n          top: -9,\n          insetInlineStart: -1,\n          width: 'calc(100% + 2px)',\n          height: 8\n        },\n        '&[data-location=left]': {\n          top: -1,\n          insetInlineStart: -9,\n          width: 8,\n          height: 'calc(100% + 2px)'\n        },\n        '&[data-location=top-left]': {\n          top: -9,\n          insetInlineStart: -9,\n          width: 8,\n          height: 8\n        },\n        '&:not([data-location=top])': {\n          borderInlineEnd: 'none'\n        },\n        '&:not([data-location=left])': {\n          borderBottom: 'none'\n        },\n        // state\n        '&[data-selected=true]': {\n          background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.indigo8,\n          borderColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected\n        }\n      }),\n      style: {\n        visibility: selectedCellsContext !== null && selectedCellsContext !== void 0 && selectedCellsContext.focus ? 'visible' : 'hidden'\n      },\n      \"aria-label\": props.label,\n      onClick: () => {\n        slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n        props.onClick();\n      }\n    }), props.selected && (props.location === 'top' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        position: 'absolute',\n        top: -9,\n        insetInlineEnd: -1,\n        background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected,\n        height: 8,\n        width: 1,\n        zIndex: 2\n      })\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        position: 'absolute',\n        bottom: -1,\n        insetInlineStart: -9,\n        background: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.alias.borderSelected,\n        height: 1,\n        width: 8,\n        zIndex: 2\n      })\n    }))]\n  });\n}\nconst cellActions = {\n  deleteRow: {\n    label: 'Delete row',\n    action: (editor, cellPath) => {\n      const tablePath = cellPath.slice(0, -3);\n      const table = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, tablePath);\n      if (table.type !== 'table') return;\n      const hasHead = table.children[0].type === 'table-head';\n      const rowPath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(cellPath);\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n        at: hasHead && rowPath[cellPath.length - 3] === 0 ? slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(rowPath) : rowPath\n      });\n    }\n  },\n  deleteColumn: {\n    label: 'Delete column',\n    action: (editor, path) => {\n      const cellIndex = path[path.length - 1];\n      const tablePath = path.slice(0, -3);\n      const table = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, tablePath);\n      if (table.type !== 'table') return;\n      slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n        for (const [headOrBodyIdx, headOrBody] of table.children.entries()) {\n          if (headOrBody.type !== 'table-head' && headOrBody.type !== 'table-body') {\n            continue;\n          }\n          for (const idx of headOrBody.children.keys()) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...tablePath, headOrBodyIdx, idx, cellIndex]\n            });\n          }\n        }\n      });\n    }\n  },\n  insertRowBelow: {\n    label: 'Insert row below',\n    action: (editor, path) => {\n      const tableRow = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.parent(path));\n      const tablePath = path.slice(0, -3);\n      const table = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, tablePath);\n      if (tableRow.type !== 'table-row' || table.type !== 'table') {\n        return;\n      }\n      const hasHead = table.children[0].type === 'table-head';\n      const newRowPath = [...tablePath, hasHead ? 1 : 0, hasHead && path[path.length - 3] === 0 ? 0 : path[path.length - 2] + 1];\n      slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, {\n          type: 'table-row',\n          children: tableRow.children.map(() => cell(false))\n        }, {\n          at: newRowPath\n        });\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, [...newRowPath, path[path.length - 1]]);\n      });\n    }\n  },\n  insertColumnRight: {\n    label: 'Insert column right',\n    action: (editor, path) => {\n      const newCellIndex = path[path.length - 1] + 1;\n      const tablePath = path.slice(0, -3);\n      const table = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, tablePath);\n      if (table.type !== 'table') return;\n      slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n        for (const [headOrBodyIdx, headOrBody] of table.children.entries()) {\n          if (headOrBody.type !== 'table-head' && headOrBody.type !== 'table-body') {\n            continue;\n          }\n          for (const rowIdx of headOrBody.children.keys()) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, cell(headOrBody.type === 'table-head'), {\n              at: [...tablePath, headOrBodyIdx, rowIdx, newCellIndex]\n            });\n          }\n        }\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(path)));\n      });\n    }\n  }\n};\nconst _cellActions = cellActions;\nfunction CellMenu(props) {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const gutter = _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.small;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    contentEditable: false,\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      top: gutter,\n      insetInlineEnd: gutter,\n      position: 'absolute'\n    }),\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.MenuTrigger, {\n        align: \"end\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n          prominence: \"low\",\n          UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n            borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.small,\n            height: 'auto',\n            minWidth: 0,\n            padding: 0,\n            // tiny buttons; increase the hit area\n            '&::before': {\n              content: '\"\"',\n              inset: `calc(${gutter} * -1)`,\n              position: 'absolute'\n            }\n          }),\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n            src: _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_28__.chevronDownIcon\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Menu, {\n          onAction: key => {\n            if (key in _cellActions) {\n              _cellActions[key].action(editor, slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, props.cell));\n            }\n          },\n          items: Object.entries(_cellActions).map(([key, item]) => ({\n            ...item,\n            key\n          })),\n          children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Item, {\n            children: item.label\n          }, item.key)\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        children: \"Options\"\n      })]\n    })\n  });\n}\nconst TableButton = () => {\n  const {\n    editor,\n    blockquote: {\n      isDisabled,\n      isSelected\n    }\n  } = useToolbarState();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n    prominence: \"low\",\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    onPress: () => {\n      insertTable(editor);\n      slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n    },\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n      src: _keystar_ui_icon_icons_tableIcon__WEBPACK_IMPORTED_MODULE_70__.tableIcon\n    })\n  }), [editor, isDisabled, isSelected]);\n};\nconst tableButton = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n  children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableButton, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n      children: \"Table\"\n    })\n  })]\n});\nfunction getCellPathInDirection(editor, path, direction) {\n  if (direction === 'left' || direction === 'right') {\n    const row = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: nodeTypeMatcher('table-row'),\n      at: path\n    });\n    if (!row) return;\n    const currentCellIdx = path[path.length - 1];\n    const diff = direction === 'left' ? -1 : 1;\n    const nextCellIdx = currentCellIdx + diff;\n    const nextCell = row[0].children[nextCellIdx];\n    if (!nextCell) return;\n    return [...row[1], nextCellIdx];\n  }\n  const table = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: nodeTypeMatcher('table'),\n    at: path\n  });\n  if (!table) return;\n  const diff = direction === 'up' ? -1 : 1;\n  const rowIndex = path[path.length - 3] + path[path.length - 2];\n  const nextRowIndex = rowIndex + diff;\n  const relativeRowPath = getRelativeRowPath(table[0].children[0].type === 'table-head', nextRowIndex);\n  if (!slate__WEBPACK_IMPORTED_MODULE_104__.Node.has(table[0], relativeRowPath)) return;\n  return [...table[1], ...relativeRowPath, path[path.length - 1]];\n}\n\nfunction Toolbar({\n  documentFeatures,\n  viewState\n}) {\n  const componentBlocks = useDocumentEditorConfig().componentBlocks;\n  let hasComponentBlocksForInsertMenu = false,\n    hasComponentBlocksForToolbar = false;\n  for (const componentBlock of Object.values(componentBlocks)) {\n    if (componentBlock.toolbarIcon) {\n      hasComponentBlocksForToolbar = true;\n    }\n    if (!componentBlock.toolbarIcon) {\n      hasComponentBlocksForInsertMenu = true;\n    }\n  }\n  const hasMarks = Object.values(documentFeatures.formatting.inlineMarks).some(x => x);\n  const hasAlignment = documentFeatures.formatting.alignment.center || documentFeatures.formatting.alignment.end;\n  const hasLists = documentFeatures.formatting.listTypes.unordered || documentFeatures.formatting.listTypes.ordered;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ToolbarWrapper, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ToolbarScrollArea, {\n      children: [!!documentFeatures.formatting.headings.levels.length && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(HeadingMenu, {\n        headingLevels: documentFeatures.formatting.headings.levels\n      }), hasMarks && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InlineMarks, {\n        marks: documentFeatures.formatting.inlineMarks\n      }), (hasAlignment || hasLists) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ToolbarGroup, {\n        children: [hasAlignment && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TextAlignMenu, {\n          alignment: documentFeatures.formatting.alignment\n        }), hasLists && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ListButtons, {\n          lists: documentFeatures.formatting.listTypes\n        })]\n      }), (documentFeatures.dividers || documentFeatures.links || !!documentFeatures.images || documentFeatures.formatting.blockTypes.blockquote || documentFeatures.tables || !!documentFeatures.layouts.length || documentFeatures.formatting.blockTypes.code || hasComponentBlocksForToolbar) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(ToolbarGroup, {\n        children: [documentFeatures.dividers && dividerButton, documentFeatures.links && linkButton, documentFeatures.images && imageButton, documentFeatures.formatting.blockTypes.blockquote && blockquoteButton, !!documentFeatures.layouts.length && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LayoutsButton, {\n          layouts: documentFeatures.layouts\n        }), documentFeatures.formatting.blockTypes.code && codeButton, documentFeatures.tables && tableButton, hasComponentBlocksForInsertMenu && insertBlocksInToolbar]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Box, {\n        flex: true\n      })]\n    }), (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n      return viewState && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n        gap: \"xsmall\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarSeparator, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.Button, {\n            prominence: \"low\",\n            onPress: () => {\n              viewState.toggle();\n            },\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n              src: viewState.expanded ? _keystar_ui_icon_icons_minimizeIcon__WEBPACK_IMPORTED_MODULE_32__.minimizeIcon : _keystar_ui_icon_icons_maximizeIcon__WEBPACK_IMPORTED_MODULE_31__.maximizeIcon\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n            children: viewState.expanded ? 'Collapse' : 'Expand'\n          })]\n        })]\n      });\n    }, [viewState]), !!hasComponentBlocksForInsertMenu && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InsertBlockMenu, {})]\n  });\n}\n\n/** Group buttons together that don't fit into an `ActionGroup` semantically. */\nconst ToolbarGroup = ({\n  children\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n    gap: \"regular\",\n    children: children\n  });\n};\nconst ToolbarContainer = ({\n  children\n}) => {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  if (entryLayoutPane === 'main') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        boxSizing: 'border-box',\n        display: 'flex',\n        paddingInline: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.medium,\n        minWidth: 0,\n        maxWidth: 800,\n        marginInline: 'auto',\n        [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpointQueries.above.mobile]: {\n          paddingInline: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xlarge\n        },\n        [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpointQueries.above.tablet]: {\n          paddingInline: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xxlarge\n        }\n      }),\n      children: children\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      display: 'flex'\n    }),\n    children: children\n  });\n};\nconst ToolbarWrapper = ({\n  children\n}) => {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n      \"data-layout\": entryLayoutPane,\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        backdropFilter: 'blur(8px)',\n        backgroundClip: 'padding-box',\n        backgroundColor: `color-mix(in srgb, transparent, ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.background.canvas} 90%)`,\n        borderBottom: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.border.regular} solid color-mix(in srgb, transparent, ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.neutral} 10%)`,\n        borderStartEndRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.medium,\n        borderStartStartRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.medium,\n        minWidth: 0,\n        position: 'sticky',\n        top: 0,\n        zIndex: 2,\n        '&[data-layout=\"main\"]': {\n          borderRadius: 0\n        }\n      }),\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarContainer, {\n        children: children\n      })\n    })\n  });\n};\nconst ToolbarScrollArea = props => {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n    \"data-layout\": entryLayoutPane,\n    paddingY: \"regular\",\n    paddingX: \"medium\",\n    gap: \"large\",\n    flex: true,\n    minWidth: 0,\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      msOverflowStyle: 'none' /* for Internet Explorer, Edge */,\n      scrollbarWidth: 'none' /* for Firefox */,\n      overflowX: 'auto',\n      /* for Chrome, Safari, and Opera */\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      },\n      '&[data-layout=\"main\"]': {\n        paddingInline: 0\n      }\n    }),\n    ...props\n  });\n};\nconst headingMenuVals = new Map([['normal', 'normal'], ['1', 1], ['2', 2], ['3', 3], ['4', 4], ['5', 5], ['6', 6]]);\nconst HeadingMenu = ({\n  headingLevels\n}) => {\n  const {\n    editor,\n    textStyles\n  } = useToolbarState();\n  const isDisabled = textStyles.allowedHeadingLevels.length === 0;\n  const items = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    let resolvedItems = [{\n      name: 'Paragraph',\n      id: 'normal'\n    }];\n    headingLevels.forEach(level => {\n      resolvedItems.push({\n        name: `Heading ${level}`,\n        id: level.toString()\n      });\n    });\n    return resolvedItems;\n  }, [headingLevels]);\n  const selected = textStyles.selected.toString();\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_picker__WEBPACK_IMPORTED_MODULE_41__.Picker, {\n    flexShrink: 0,\n    width: \"scale.1700\",\n    prominence: \"low\",\n    \"aria-label\": \"Text block\",\n    items: items,\n    isDisabled: isDisabled,\n    selectedKey: selected,\n    onSelectionChange: selected => {\n      let key = headingMenuVals.get(selected);\n      if (key === 'normal') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Editor.withoutNormalizing(editor, () => {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'level', {\n            match: n => n.type === 'heading'\n          });\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n            type: 'paragraph'\n          }, {\n            match: n => n.type === 'heading'\n          });\n        });\n      } else if (key) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n          type: 'heading',\n          level: key\n        }, {\n          match: node => node.type === 'paragraph' || node.type === 'heading'\n        });\n      }\n      slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n    },\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n      children: item.name\n    }, item.id)\n  }), [editor, isDisabled, items, selected]);\n};\nconst insertBlocksInToolbar = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InsertBlocksInToolbar, {});\nfunction InsertBlocksInToolbar() {\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const componentBlocks = useDocumentEditorConfig().componentBlocks;\n  return Object.entries(componentBlocks).filter(([, val]) => val.toolbarIcon).map(([key, item]) => {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        prominence: \"low\",\n        onPress: () => {\n          insertComponentBlock(editor, componentBlocks, key);\n          slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: item.toolbarIcon\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        children: item.label\n      })]\n    }, key);\n  });\n}\nfunction InsertBlockMenu() {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const componentBlocks = useDocumentEditorConfig().componentBlocks;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.MenuTrigger, {\n    align: \"end\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n        marginY: \"regular\",\n        marginEnd: entryLayoutPane === 'main' ? undefined : 'medium',\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_plusIcon__WEBPACK_IMPORTED_MODULE_33__.plusIcon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n          src: _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_28__.chevronDownIcon\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n          children: \"Insert\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n          children: \"/\"\n        })]\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_40__.Menu, {\n      onAction: key => {\n        insertComponentBlock(editor, componentBlocks, key);\n      },\n      items: Object.entries(componentBlocks).filter(([, val]) => !val.toolbarIcon),\n      children: ([key, item]) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n        children: item.label\n      }, key)\n    })]\n  });\n}\nconst inlineMarks = [{\n  key: 'bold',\n  label: 'Bold',\n  icon: _keystar_ui_icon_icons_boldIcon__WEBPACK_IMPORTED_MODULE_27__.boldIcon,\n  shortcut: `B`\n}, {\n  key: 'italic',\n  label: 'Italic',\n  icon: _keystar_ui_icon_icons_italicIcon__WEBPACK_IMPORTED_MODULE_30__.italicIcon,\n  shortcut: `I`\n}, {\n  key: 'underline',\n  label: 'Underline',\n  icon: _keystar_ui_icon_icons_underlineIcon__WEBPACK_IMPORTED_MODULE_39__.underlineIcon,\n  shortcut: `U`\n}, {\n  key: 'strikethrough',\n  label: 'Strikethrough',\n  icon: _keystar_ui_icon_icons_strikethroughIcon__WEBPACK_IMPORTED_MODULE_35__.strikethroughIcon\n}, {\n  key: 'code',\n  label: 'Code',\n  icon: _keystar_ui_icon_icons_codeIcon__WEBPACK_IMPORTED_MODULE_29__.codeIcon\n}, {\n  key: 'superscript',\n  label: 'Superscript',\n  icon: _keystar_ui_icon_icons_superscriptIcon__WEBPACK_IMPORTED_MODULE_37__.superscriptIcon\n}, {\n  key: 'subscript',\n  label: 'Subscript',\n  icon: _keystar_ui_icon_icons_subscriptIcon__WEBPACK_IMPORTED_MODULE_36__.subscriptIcon\n}, {\n  key: 'clearFormatting',\n  label: 'Clear formatting',\n  icon: _keystar_ui_icon_icons_removeFormattingIcon__WEBPACK_IMPORTED_MODULE_34__.removeFormattingIcon\n}];\nfunction InlineMarks({\n  marks: _marksShown\n}) {\n  const {\n    editor,\n    clearFormatting: {\n      isDisabled\n    },\n    marks\n  } = useToolbarState();\n  const marksShown = useMemoStringified(_marksShown);\n  const selectedKeys = useMemoStringified(Object.keys(marks).filter(key => marks[key].isSelected));\n  const disabledKeys = useMemoStringified(Object.keys(marks).filter(key => marks[key].isDisabled).concat(isDisabled ? 'clearFormatting' : []));\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    const items = inlineMarks.filter(item => item.key === 'clearFormatting' || marksShown[item.key]);\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.ActionGroup, {\n      UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        minWidth: `calc(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.element.medium} * 4)`\n      }),\n      prominence: \"low\",\n      density: \"compact\",\n      buttonLabelBehavior: \"hide\",\n      overflowMode: \"collapse\",\n      summaryIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n        src: _keystar_ui_icon_icons_typeIcon__WEBPACK_IMPORTED_MODULE_38__.typeIcon\n      }),\n      items: items,\n      selectionMode: \"multiple\",\n      selectedKeys: selectedKeys,\n      disabledKeys: disabledKeys,\n      onAction: key => {\n        if (key === 'clearFormatting') {\n          clearFormatting(editor);\n        } else {\n          var _Editor$marks;\n          const mark = key;\n          if ((_Editor$marks = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.marks(editor)) !== null && _Editor$marks !== void 0 && _Editor$marks[mark]) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Editor.removeMark(editor, mark);\n          } else {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Editor.addMark(editor, mark, true);\n          }\n        }\n        slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n      },\n      children: item => {\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_26__.Item, {\n          textValue: item.label,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Text, {\n            children: item.label\n          }), 'shortcut' in item && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Kbd, {\n            meta: true,\n            children: item.shortcut\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n            src: item.icon\n          })]\n        }, item.key);\n      }\n    });\n  }, [disabledKeys, editor, marksShown, selectedKeys]);\n}\nfunction useMemoStringified(value) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => value, [JSON.stringify(value)]);\n}\n\nconst HeadingElement = ({\n  attributes,\n  children,\n  element\n}) => {\n  const ElementType = `h${element.level}`;\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlateStatic)();\n  const {\n    documentFeatures\n  } = useDocumentEditorConfig();\n  const [dialogOpen, setDialogOpen] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n  if (Object.keys(documentFeatures.formatting.headings.schema.fields).length === 0) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ElementType, {\n      ...attributes,\n      style: {\n        textAlign: element.textAlign\n      },\n      children: children\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ElementType, {\n      style: {\n        textAlign: element.textAlign\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(BlockPopoverTrigger, {\n        element: element,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n          children: children\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(BlockPopover, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Flex, {\n            gap: \"regular\",\n            padding: \"regular\",\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CustomAttributesEditButton, {\n              onPress: () => setDialogOpen(true)\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.TooltipTrigger, {\n              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_11__.ActionButton, {\n                prominence: \"low\",\n                onPress: () => {\n                  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n                    at: slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, element)\n                  });\n                },\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_14__.Icon, {\n                  src: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_15__.trash2Icon\n                })\n              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_18__.Tooltip, {\n                tone: \"critical\",\n                children: \"Remove\"\n              })]\n            })]\n          })\n        })]\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CustomAttributesDialog, {\n      element: element,\n      schema: documentFeatures.formatting.headings.schema,\n      isOpen: dialogOpen,\n      nodeLabel: \"Heading\",\n      onDismiss: () => setDialogOpen(false)\n    })]\n  });\n};\n\nconst renderElement = props => {\n  switch (props.element.type) {\n    case 'layout':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LayoutContainer, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'layout-area':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LayoutArea, {\n        ...props\n      });\n    case 'code':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CodeElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'component-block':\n      {\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ComponentBlocksElement, {\n          attributes: props.attributes,\n          children: props.children,\n          element: props.element\n        });\n      }\n    case 'component-inline-prop':\n    case 'component-block-prop':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ComponentInlineProp, {\n        ...props\n      });\n    case 'heading':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(HeadingElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'link':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LinkElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'ordered-list':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"ol\", {\n        ...props.attributes,\n        children: props.children\n      });\n    case 'unordered-list':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"ul\", {\n        ...props.attributes,\n        children: props.children\n      });\n    case 'list-item':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"li\", {\n        ...props.attributes,\n        children: props.children\n      });\n    case 'list-item-content':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n        ...props.attributes,\n        children: props.children\n      });\n    case 'blockquote':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"blockquote\", {\n        ...props.attributes,\n        children: props.children\n      });\n    case 'divider':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DividerElement, {\n        ...props\n      });\n    case 'image':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'table':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'table-head':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableHeadElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'table-body':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableBodyElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'table-row':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableRowElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    case 'table-cell':\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableCellElement, {\n        attributes: props.attributes,\n        children: props.children,\n        element: props.element\n      });\n    default:\n      let {\n        textAlign\n      } = props.element;\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"p\", {\n        style: {\n          textAlign\n        },\n        ...props.attributes,\n        children: props.children\n      });\n  }\n};\n\nfunction getOptions(toolbarState, componentBlocks) {\n  const options = [...Object.keys(componentBlocks).map(key => ({\n    label: componentBlocks[key].label,\n    insert: editor => {\n      insertComponentBlock(editor, componentBlocks, key);\n    }\n  })), ...toolbarState.textStyles.allowedHeadingLevels.filter(a => toolbarState.editorDocumentFeatures.formatting.headings.levels.includes(a)).map(level => ({\n    label: `Heading ${level}`,\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'heading',\n        level,\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  })), !toolbarState.blockquote.isDisabled && toolbarState.editorDocumentFeatures.formatting.blockTypes.blockquote && {\n    label: 'Blockquote',\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'blockquote',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }, !toolbarState.code.isDisabled && toolbarState.editorDocumentFeatures.formatting.blockTypes.code && {\n    label: 'Code block',\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'code',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }, !!toolbarState.editorDocumentFeatures.images && {\n    label: 'Image',\n    async insert(editor) {\n      const image = await getUploadedImage();\n      if (image) {\n        insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n          type: 'image',\n          src: image,\n          alt: '',\n          title: '',\n          children: [{\n            text: ''\n          }]\n        });\n      }\n    }\n  }, !!toolbarState.editorDocumentFeatures.tables && {\n    label: 'Table',\n    insert: insertTable\n  }, !toolbarState.dividers.isDisabled && toolbarState.editorDocumentFeatures.dividers && {\n    label: 'Divider',\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'divider',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }, !!toolbarState.editorDocumentFeatures.layouts.length && {\n    label: 'Layout',\n    insert(editor) {\n      insertLayout(editor, toolbarState.editorDocumentFeatures.layouts[0]);\n    }\n  }, !toolbarState.lists.ordered.isDisabled && toolbarState.editorDocumentFeatures.formatting.listTypes.ordered && {\n    label: 'Numbered List',\n    keywords: ['ordered list'],\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'ordered-list',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }, !toolbarState.lists.unordered.isDisabled && toolbarState.editorDocumentFeatures.formatting.listTypes.unordered && {\n    label: 'Bullet List',\n    keywords: ['unordered list'],\n    insert(editor) {\n      insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, {\n        type: 'unordered-list',\n        children: [{\n          text: ''\n        }]\n      });\n    }\n  }];\n  return options.filter(x => typeof x !== 'boolean');\n}\nfunction insertOption(editor, text, option) {\n  const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, text);\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n    at: {\n      focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, path),\n      anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, path)\n    }\n  });\n  option.insert(editor);\n}\nfunction InsertMenu({\n  children,\n  text\n}) {\n  const toolbarState = useToolbarState();\n  const {\n    editor\n  } = toolbarState;\n  const {\n    componentBlocks\n  } = useDocumentEditorConfig();\n  const options = (0,match_sorter__WEBPACK_IMPORTED_MODULE_46__.matchSorter)(getOptions(toolbarState, componentBlocks), text.text.slice(1), {\n    keys: ['label', 'keywords']\n  }).map((option, index) => ({\n    ...option,\n    index\n  }));\n  const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)({\n    options,\n    text\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    stateRef.current = {\n      options,\n      text\n    };\n  });\n  const listenerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(_event => {});\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    listenerRef.current = event => {\n      if (event.defaultPrevented) return;\n      switch (event.key) {\n        case 'ArrowDown':\n          {\n            if (stateRef.current.options.length) {\n              event.preventDefault();\n              state.selectionManager.setFocused(true);\n              state.selectionManager.setFocusedKey((Number(state.selectionManager.focusedKey) === stateRef.current.options.length - 1 ? 0 : Number(state.selectionManager.focusedKey) + 1).toString());\n            }\n            return;\n          }\n        case 'ArrowUp':\n          {\n            if (stateRef.current.options.length) {\n              event.preventDefault();\n              state.selectionManager.setFocused(true);\n              state.selectionManager.setFocusedKey((state.selectionManager.focusedKey === '0' ? stateRef.current.options.length - 1 : Number(state.selectionManager.focusedKey) - 1).toString());\n            }\n            return;\n          }\n        case 'Enter':\n          {\n            const option = stateRef.current.options[Number(state.selectionManager.focusedKey)];\n            if (option) {\n              insertOption(editor, stateRef.current.text, option);\n              event.preventDefault();\n            }\n            return;\n          }\n        case 'Escape':\n          {\n            const path = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.findPath(editor, stateRef.current.text);\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'insertMenu', {\n              at: path\n            });\n            event.preventDefault();\n            return;\n          }\n      }\n    };\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    const domNode = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMNode(editor, editor);\n    let listener = event => listenerRef.current(event);\n    domNode.addEventListener('keydown', listener);\n    return () => {\n      domNode.removeEventListener('keydown', listener);\n    };\n  }, [editor]);\n  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  const overlayState = (0,_react_stately_overlays__WEBPACK_IMPORTED_MODULE_105__.useOverlayTriggerState)({\n    isOpen: true\n  });\n  const {\n    triggerProps: {\n      onPress,\n      ...triggerProps\n    },\n    overlayProps\n  } = (0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_106__.useOverlayTrigger)({\n    type: 'listbox'\n  }, overlayState, triggerRef);\n  let state = (0,_react_stately_list__WEBPACK_IMPORTED_MODULE_109__.useListState)({\n    items: options,\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_71__.Item, {\n      children: item.label\n    }, item.index)\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!state.selectionManager.isFocused && state.collection.size) {\n      state.selectionManager.setFocused(true);\n      state.selectionManager.setFocusedKey('0');\n    }\n  }, [state]);\n  const scrollableRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    var _scrollableRef$curren;\n    const element = (_scrollableRef$curren = scrollableRef.current) === null || _scrollableRef$curren === void 0 || (_scrollableRef$curren = _scrollableRef$curren.querySelector('[role=\"listbox\"] [role=\"presentation\"]')) === null || _scrollableRef$curren === void 0 ? void 0 : _scrollableRef$curren.children[state.selectionManager.focusedKey];\n    if (element) {\n      (0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_110__[\"default\"])(element, {\n        scrollMode: 'if-needed',\n        boundary: scrollableRef.current,\n        block: 'nearest'\n      });\n    }\n  }, [state.selectionManager.focusedKey]);\n  const listboxRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);\n  let layout = (0,_keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_71__.useListBoxLayout)(state);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react__WEBPACK_IMPORTED_MODULE_3__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n      ...triggerProps,\n      role: \"button\",\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.accent,\n        fontWeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.typography.fontWeight.medium\n      }),\n      ref: triggerRef,\n      children: children\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_24__.Popover, {\n      width: \"alias.singleLineWidth\",\n      placement: \"bottom start\",\n      isNonModal: true,\n      hideArrow: true,\n      ...overlayProps,\n      state: overlayState,\n      triggerRef: triggerRef,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n          overflow: 'scroll',\n          maxHeight: 300\n        }),\n        ref: scrollableRef,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_71__.ListBoxBase, {\n          \"aria-label\": \"Insert block\",\n          state: state,\n          shouldUseVirtualFocus: true,\n          layout: layout,\n          ref: listboxRef,\n          onAction: key => {\n            insertOption(editor, text, options[key]);\n          }\n        })\n      })\n    })]\n  });\n}\nconst nodeListsWithoutInsertMenu = new WeakSet();\nconst nodesWithoutInsertMenu = new WeakSet();\nfunction findPathWithInsertMenu(node, path) {\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node)) {\n    return node.insertMenu ? path : undefined;\n  }\n  if (nodeListsWithoutInsertMenu.has(node.children)) {\n    return;\n  }\n  for (const [index, child] of node.children.entries()) {\n    if (nodesWithoutInsertMenu.has(child)) continue;\n    let maybePath = findPathWithInsertMenu(child, [...path, index]);\n    if (maybePath) {\n      return maybePath;\n    }\n    nodesWithoutInsertMenu.add(child);\n  }\n  nodeListsWithoutInsertMenu.add(node.children);\n}\nfunction removeInsertMenuMarkWhenOutsideOfSelection(editor) {\n  var _Editor$marks;\n  const path = findPathWithInsertMenu(editor, []);\n  if (path && !((_Editor$marks = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.marks(editor)) !== null && _Editor$marks !== void 0 && _Editor$marks.insertMenu) && (!editor.selection || !slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(editor.selection.anchor.path, path) || !slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(editor.selection.focus.path, path))) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'insertMenu', {\n      at: path\n    });\n    return true;\n  }\n  return false;\n}\nfunction withInsertMenu(editor) {\n  const {\n    normalizeNode,\n    apply,\n    insertText\n  } = editor;\n  editor.normalizeNode = ([node, path]) => {\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node) && node.insertMenu) {\n      if (node.text[0] !== '/') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'insertMenu', {\n          at: path\n        });\n        return;\n      }\n      const whitespaceMatch = /\\s/.exec(node.text);\n      if (whitespaceMatch) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, 'insertMenu', {\n          at: {\n            anchor: {\n              path,\n              offset: whitespaceMatch.index\n            },\n            focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, path)\n          },\n          match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText,\n          split: true\n        });\n        return;\n      }\n    }\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(editor) && removeInsertMenuMarkWhenOutsideOfSelection(editor)) {\n      return;\n    }\n    normalizeNode([node, path]);\n  };\n  editor.apply = op => {\n    apply(op);\n    // we're calling this here AND in normalizeNode\n    // because normalizeNode won't be called on selection changes\n    // but apply will\n    // we're still calling this from normalizeNode though because we want it to happen\n    // when normalization happens\n    if (op.type === 'set_selection') {\n      removeInsertMenuMarkWhenOutsideOfSelection(editor);\n    }\n  };\n  editor.insertText = text => {\n    insertText(text);\n    if (editor.selection && text === '/') {\n      const startOfBlock = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: isBlock\n      })[1]);\n      const before = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.before(editor, editor.selection.anchor, {\n        unit: 'character'\n      });\n      if (before && (slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(startOfBlock, before) || before.offset !== 0 && /\\s/.test(slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, before.path).text[before.offset - 1]))) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n          insertMenu: true\n        }, {\n          at: {\n            anchor: before,\n            focus: editor.selection.anchor\n          },\n          match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText,\n          split: true\n        });\n      }\n    }\n  };\n  return editor;\n}\n\nfunction Placeholder({\n  placeholder,\n  children\n}) {\n  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(0);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(\"span\", {\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      position: 'relative',\n      display: 'inline-block',\n      width\n    }),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n      contentEditable: false,\n      className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'inline-block',\n        left: 0,\n        top: 0,\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        opacity: '0.5',\n        userSelect: 'none',\n        fontStyle: 'normal',\n        fontWeight: 'normal',\n        textDecoration: 'none',\n        textAlign: 'left'\n      }),\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n        ref: node => {\n          if (node) {\n            const offsetWidth = node.offsetWidth;\n            if (offsetWidth !== width) {\n              setWidth(offsetWidth);\n            }\n          }\n        },\n        children: placeholder\n      })\n    }), children]\n  });\n}\nconst Leaf = ({\n  leaf,\n  text,\n  children,\n  attributes\n}) => {\n  const {\n    underline,\n    strikethrough,\n    bold,\n    italic,\n    code,\n    keyboard,\n    superscript,\n    subscript,\n    placeholder,\n    insertMenu,\n    ...rest\n  } = leaf;\n  if (placeholder !== undefined) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Placeholder, {\n      placeholder: placeholder,\n      children: children\n    });\n  }\n  if (insertMenu) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InsertMenu, {\n      text: text,\n      children: children\n    });\n  }\n  if (code) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"code\", {\n      children: children\n    });\n  }\n  if (bold) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"strong\", {\n      children: children\n    });\n  }\n  if (strikethrough) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"s\", {\n      children: children\n    });\n  }\n  if (italic) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"em\", {\n      children: children\n    });\n  }\n  if (keyboard) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"kbd\", {\n      children: children\n    });\n  }\n  if (superscript) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"sup\", {\n      children: children\n    });\n  }\n  if (subscript) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"sub\", {\n      children: children\n    });\n  }\n  if (underline) {\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"u\", {\n      children: children\n    });\n  }\n  const prismClassNames = Object.keys(rest).filter(x => x.startsWith('prism_')).map(x => styles$1.get(x.replace('prism_', '')));\n  if (prismClassNames.length) {\n    const className = prismClassNames.join(' ');\n    children = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n      className: className,\n      children: children\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", {\n    ...attributes,\n    children: children\n  });\n};\nconst renderLeaf = props => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Leaf, {\n    ...props\n  });\n};\nconst styles$1 = new Map([{\n  types: ['comment', 'prolog', 'doctype', 'cdata'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.neutralTertiary,\n    fontStyle: 'italic'\n  }\n}, {\n  types: ['atrule', 'attr-name', 'class-name', 'selector'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.amber11\n  }\n}, {\n  types: ['boolean', 'constant', 'inserted-sign', 'entity', 'inserted', 'number', 'regex', 'symbol', 'variable'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.green11\n  }\n}, {\n  types: ['attr-value', 'builtin', 'char', 'constant', 'generics', 'url'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.pink11\n  }\n}, {\n  types: ['string'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.indigo9\n  }\n}, {\n  types: ['annotation', 'deleted', 'deleted-sign', 'decorator', 'important', 'tag'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.red11\n  }\n}, {\n  types: ['function', 'function-variable', 'operator'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.purple11\n  }\n}, {\n  types: ['tag', 'selector', 'keyword'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.scale.indigo11\n  }\n}, {\n  types: ['punctuation'],\n  style: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.neutralSecondary\n  }\n}].flatMap(style => {\n  const className = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)(style.style);\n  return style.types.map(x => [x, className]);\n}));\n\nconst codeBlockShortcutPattern = /^```(\\w+)? ?$/;\nfunction withCodeBlock(documentFeatures, componentBlocks, editor) {\n  const {\n    insertBreak,\n    normalizeNode,\n    insertText\n  } = editor;\n  function codeBlockShortcut(block) {\n    var _aliasesToCanonicalNa;\n    if ((block === null || block === void 0 ? void 0 : block[0].type) !== 'paragraph' || block[0].children.length !== 1 || block[0].children[0].type !== undefined) {\n      return false;\n    }\n    const match = codeBlockShortcutPattern.exec(block[0].children[0].text);\n    if (!match) {\n      return false;\n    }\n    const locationDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, documentFeatures, componentBlocks);\n    if (locationDocumentFeatures && (locationDocumentFeatures.kind === 'inline' || !locationDocumentFeatures.documentFeatures.formatting.blockTypes.code)) {\n      return false;\n    }\n\n    // so that this starts a new undo group\n    editor.history.undos.push({\n      operations: [],\n      selectionBefore: editor.selection\n    });\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, block[1]);\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor);\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'code',\n      ...(match[1] ? {\n        language: (_aliasesToCanonicalNa = aliasesToCanonicalName.get(match[1].toLowerCase())) !== null && _aliasesToCanonicalNa !== void 0 ? _aliasesToCanonicalNa : match[1]\n      } : {}),\n      children: []\n    }, {\n      match: node => node.type === 'paragraph'\n    });\n    return true;\n  }\n  editor.insertBreak = () => {\n    const block = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: isBlock\n    });\n    if ((block === null || block === void 0 ? void 0 : block[0].type) === 'code' && slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(block[0].children[0])) {\n      const text = block[0].children[0].text;\n      if (text[text.length - 1] === '\\n' && editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, block[1]), editor.selection.anchor)) {\n        insertBreak();\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n          type: 'paragraph',\n          children: []\n        });\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n          distance: 1,\n          at: {\n            path: [...block[1], 0],\n            offset: text.length - 1\n          }\n        });\n        return;\n      }\n      editor.insertText('\\n');\n      return;\n    }\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) && codeBlockShortcut(block)) {\n      return;\n    }\n    insertBreak();\n  };\n  editor.insertText = text => {\n    insertText(text);\n    if (text === ' ' && editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      codeBlockShortcut(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: isBlock\n      }));\n    }\n  };\n  editor.normalizeNode = ([node, path]) => {\n    if (node.type === 'code' && slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node)) {\n      for (const [index, childNode] of node.children.entries()) {\n        if (!slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(childNode)) {\n          if (editor.isVoid(childNode)) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n              at: [...path, index]\n            });\n          } else {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n              at: [...path, index]\n            });\n          }\n          return;\n        }\n        const marks = Object.keys(childNode).filter(x => x !== 'text');\n        if (marks.length) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unsetNodes(editor, marks, {\n            at: [...path, index]\n          });\n          return;\n        }\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nconst paragraphElement = () => ({\n  type: 'paragraph',\n  children: [{\n    text: ''\n  }]\n});\nfunction withParagraphs(editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(node)) {\n      let lastNode = node.children[node.children.length - 1];\n      if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) !== 'paragraph') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, paragraphElement(), {\n          at: [...path, node.children.length]\n        });\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nfunction withLayouts(editor) {\n  const {\n    normalizeNode,\n    deleteBackward\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) &&\n    // this is just an little optimisation\n    // we're only doing things if we're at the start of a layout area\n    // and the start of anything will always be offset 0\n    // so we'll bailout if we're not at offset 0\n    editor.selection.anchor.offset === 0) {\n      const [aboveNode, abovePath] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: node => node.type === 'layout-area'\n      }) || [editor, []];\n      if (aboveNode.type === 'layout-area' && slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, abovePath), editor.selection.anchor)) {\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node) && node.type === 'layout') {\n      if (node.layout === undefined) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      if (node.children.length < node.layout.length) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertNodes(editor, Array.from({\n          length: node.layout.length - node.children.length\n        }).map(() => ({\n          type: 'layout-area',\n          children: [paragraphElement()]\n        })), {\n          at: [...path, node.children.length]\n        });\n        return;\n      }\n      if (node.children.length > node.layout.length) {\n        Array.from({\n          length: node.children.length - node.layout.length\n        }).map((_, i) => i).reverse().forEach(i => {\n          const layoutAreaToRemovePath = [...path, i + node.layout.length];\n          const child = node.children[i + node.layout.length];\n          moveChildren(editor, layoutAreaToRemovePath, [...path, node.layout.length - 1, node.children[node.layout.length - 1].children.length], node => node.type !== 'paragraph' || slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(child) !== '');\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n            at: layoutAreaToRemovePath\n          });\n        });\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nconst markdownLinkPattern = /(^|\\s)\\[(.+?)\\]\\((\\S+)\\)$/;\nfunction withLink(editorDocumentFeatures, componentBlocks, editor) {\n  const {\n    insertText,\n    isInline,\n    normalizeNode\n  } = editor;\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element);\n  };\n  if (editorDocumentFeatures.links) {\n    editor.insertText = text => {\n      insertText(text);\n      if (text !== ')' || !editor.selection) {\n        return;\n      }\n      const startOfBlock = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: isBlock\n      })[1]);\n      const startOfBlockToEndOfShortcutString = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, {\n        anchor: editor.selection.anchor,\n        focus: startOfBlock\n      });\n      const match = markdownLinkPattern.exec(startOfBlockToEndOfShortcutString);\n      if (!match) {\n        return;\n      }\n      const ancestorComponentChildFieldDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks);\n      if ((ancestorComponentChildFieldDocumentFeatures === null || ancestorComponentChildFieldDocumentFeatures === void 0 ? void 0 : ancestorComponentChildFieldDocumentFeatures.documentFeatures.links) === false) {\n        return;\n      }\n      const [, maybeWhitespace, linkText, href] = match;\n      // by doing this, the insertText(')') above will happen in a different undo than the link replacement\n      // so that means that when someone does an undo after this\n      // it will undo to the state of \"[content](link)\" rather than \"[content](link\" (note the missing closing bracket)\n      editor.history.undos.push({\n        operations: [],\n        selectionBefore: editor.selection\n      });\n      const startOfShortcut = match.index === 0 ? startOfBlock : EditorAfterButIgnoringingPointsWithNoContent(editor, startOfBlock, {\n        distance: match.index\n      });\n      const startOfLinkText = EditorAfterButIgnoringingPointsWithNoContent(editor, startOfShortcut, {\n        distance: maybeWhitespace === '' ? 1 : 2\n      });\n      const endOfLinkText = EditorAfterButIgnoringingPointsWithNoContent(editor, startOfLinkText, {\n        distance: linkText.length\n      });\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n        at: {\n          anchor: endOfLinkText,\n          focus: editor.selection.anchor\n        }\n      });\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n        at: {\n          anchor: startOfShortcut,\n          focus: startOfLinkText\n        }\n      });\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n        type: 'link',\n        href,\n        children: []\n      }, {\n        at: {\n          anchor: editor.selection.anchor,\n          focus: startOfShortcut\n        },\n        split: true\n      });\n      const nextNode = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.next(editor);\n      if (nextNode) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, nextNode[1]);\n      }\n    };\n  }\n  editor.normalizeNode = ([node, path]) => {\n    if (node.type === 'link') {\n      if (slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(node) === '') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      for (const [idx, child] of node.children.entries()) {\n        if (child.type === 'link') {\n          // links cannot contain links\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n            at: [...path, idx]\n          });\n          return;\n        }\n      }\n    }\n    if (isInlineContainer(node)) {\n      let lastMergableLink = null;\n      for (const [idx, child] of node.children.entries()) {\n        var _lastMergableLink;\n        if (child.type === 'link' && child.href === ((_lastMergableLink = lastMergableLink) === null || _lastMergableLink === void 0 ? void 0 : _lastMergableLink.node.href)) {\n          const firstLinkPath = [...path, lastMergableLink.index];\n          const secondLinkPath = [...path, idx];\n          const to = [...firstLinkPath, lastMergableLink.node.children.length];\n          // note this is going in reverse, js doesn't have double-ended iterators so it's a for(;;)\n          for (let i = child.children.length - 1; i >= 0; i--) {\n            const childPath = [...secondLinkPath, i];\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n              at: childPath,\n              to\n            });\n          }\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.removeNodes(editor, {\n            at: secondLinkPath\n          });\n          return;\n        }\n        if (!slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(child) || child.text !== '') {\n          lastMergableLink = null;\n        }\n        if (child.type === 'link') {\n          lastMergableLink = {\n            index: idx,\n            node: child\n          };\n        }\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nfunction createDocumentEditorForNormalization(documentFeatures, componentBlocks) {\n  return _createDocumentEditor((0,slate__WEBPACK_IMPORTED_MODULE_104__.createEditor)(), documentFeatures, componentBlocks);\n}\nfunction _createDocumentEditor(baseEditor, documentFeatures, componentBlocks) {\n  return withBlocksSchema(withParagraphs(withLink(documentFeatures, componentBlocks, withList(withTable(withComponentBlocks(componentBlocks, documentFeatures, withVoidElements(withLayouts(withCodeBlock(documentFeatures, componentBlocks, withDocumentFeaturesNormalization(documentFeatures, baseEditor))))))))));\n}\nfunction withBlocksSchema(editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = ([node, path]) => {\n    if (!slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(node) && node.type !== 'link') {\n      const nodeType = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(node) ? 'editor' : node.type;\n      if (typeof nodeType !== 'string' || editorSchema[nodeType] === undefined) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      const info = editorSchema[nodeType];\n      if (info.kind === 'blocks' && node.children.length !== 0 && node.children.every(child => !isBlock(child))) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n          type: info.blockToWrapInlinesIn,\n          children: []\n        }, {\n          at: path,\n          match: node => !isBlock(node)\n        });\n        return;\n      }\n      let didUpdate = false;\n      for (const [index, childNode] of [...node.children.entries()].reverse()) {\n        const childPath = [...path, index];\n        if (info.kind === 'inlines') {\n          if (!slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(childNode) && isBlock(childNode)) {\n            handleNodeInInvalidPosition(editor, [childNode, childPath], path);\n            didUpdate = true;\n            continue;\n          }\n        } else {\n          if (!isBlock(childNode)) {\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n              type: info.blockToWrapInlinesIn,\n              children: []\n            }, {\n              at: childPath\n            });\n            didUpdate = true;\n            continue;\n          }\n          if (!info.allowedChildren.has(childNode.type)) {\n            handleNodeInInvalidPosition(editor, [childNode, childPath], path);\n            didUpdate = true;\n            continue;\n          }\n        }\n      }\n      if (didUpdate) {\n        return;\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\nfunction handleNodeInInvalidPosition(editor, [node, path], ancestorPath) {\n  const nodeType = node.type;\n  const childNodeInfo = editorSchema[nodeType];\n  // the parent of a block will never be an inline so this casting is okay\n  const ancestorNode = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, ancestorPath);\n  const parentNodeType = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(ancestorNode) ? 'editor' : ancestorNode.type;\n  const parentNodeInfo = editorSchema[parentNodeType];\n  if (!childNodeInfo || childNodeInfo.invalidPositionHandleMode === 'unwrap') {\n    if (parentNodeInfo.kind === 'blocks' && parentNodeInfo.blockToWrapInlinesIn) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n        type: parentNodeInfo.blockToWrapInlinesIn,\n        ...Object.fromEntries(Object.keys(node).filter(key => key !== 'type' && key !== 'children').map(key => [key, null])) // the Slate types don't understand that null is allowed and it will unset properties with setNodes\n      }, {\n        at: path\n      });\n      return;\n    }\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return;\n  }\n  const info = editorSchema[ancestorNode.type || 'editor'];\n  if ((info === null || info === void 0 ? void 0 : info.kind) === 'blocks' && info.allowedChildren.has(nodeType)) {\n    if (ancestorPath.length === 0) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n        at: path,\n        to: [path[0] + 1]\n      });\n    } else {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n        at: path,\n        to: slate__WEBPACK_IMPORTED_MODULE_104__.Path.next(ancestorPath)\n      });\n    }\n    return;\n  }\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Editor.isEditor(ancestorNode)) {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.moveNodes(editor, {\n      at: path,\n      to: [path[0] + 1]\n    });\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n      at: [path[0] + 1]\n    });\n    return;\n  }\n  handleNodeInInvalidPosition(editor, [node, path], ancestorPath.slice(0, -1));\n}\nfunction withVoidElements(editor) {\n  const {\n    isVoid\n  } = editor;\n  editor.isVoid = node => {\n    return node.type === 'divider' || node.type === 'image' || isVoid(node);\n  };\n  return editor;\n}\n\nfunction withBlockMarkdownShortcuts(documentFeatures, componentBlocks, editor) {\n  const {\n    insertText\n  } = editor;\n  const shortcuts = Object.create(null);\n  const editorDocumentFeaturesForNormalizationToCheck = {\n    ...documentFeatures\n  };\n  let addShortcut = (text, insert, shouldBeEnabledInComponentBlock, type = 'paragraph') => {\n    if (!shouldBeEnabledInComponentBlock(editorDocumentFeaturesForNormalizationToCheck)) {\n      return;\n    }\n    const trigger = text[text.length - 1];\n    if (!shortcuts[trigger]) {\n      shortcuts[trigger] = Object.create(null);\n    }\n    shortcuts[trigger][text] = {\n      insert,\n      type,\n      shouldBeEnabledInComponentBlock\n    };\n  };\n  addShortcut('1. ', () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'ordered-list',\n      children: []\n    }, {\n      match: isBlock\n    });\n  }, features => features.formatting.listTypes.ordered);\n  addShortcut('- ', () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'unordered-list',\n      children: []\n    }, {\n      match: isBlock\n    });\n  }, features => features.formatting.listTypes.unordered);\n  addShortcut('* ', () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'unordered-list',\n      children: []\n    }, {\n      match: isBlock\n    });\n  }, features => features.formatting.listTypes.unordered);\n  documentFeatures.formatting.headings.levels.forEach(level => {\n    addShortcut('#'.repeat(level) + ' ', () => {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n        type: 'heading',\n        level\n      }, {\n        match: node => node.type === 'paragraph' || node.type === 'heading'\n      });\n    }, features => features.formatting.headings.levels.includes(level), 'heading-or-paragraph');\n  });\n  addShortcut('> ', () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n      type: 'blockquote',\n      children: []\n    }, {\n      match: node => node.type === 'paragraph'\n    });\n  }, features => features.formatting.blockTypes.blockquote);\n  addShortcut('---', () => {\n    insertDivider(editor);\n  }, features => features.dividers);\n  editor.insertText = text => {\n    insertText(text);\n    const shortcutsForTrigger = shortcuts[text];\n    if (shortcutsForTrigger && editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      const {\n        anchor\n      } = editor.selection;\n      const block = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: isBlock\n      });\n      if (!block || block[0].type !== 'paragraph' && block[0].type !== 'heading') {\n        return;\n      }\n      const start = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, block[1]);\n      const range = {\n        anchor,\n        focus: start\n      };\n      const shortcutText = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, range);\n      const shortcut = shortcutsForTrigger[shortcutText];\n      if (!shortcut || shortcut.type === 'paragraph' && block[0].type !== 'paragraph') {\n        return;\n      }\n      const locationDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, documentFeatures, componentBlocks);\n      if (locationDocumentFeatures && (locationDocumentFeatures.kind === 'inline' || !shortcut.shouldBeEnabledInComponentBlock(locationDocumentFeatures.documentFeatures))) {\n        return;\n      }\n\n      // so that this starts a new undo group\n      editor.history.undos.push({\n        operations: [],\n        selectionBefore: editor.selection\n      });\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, range);\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor);\n      shortcut.insert();\n    }\n  };\n  return editor;\n}\n\nfunction getDirectBlockquoteParentFromSelection(editor) {\n  if (!editor.selection) return {\n    isInside: false\n  };\n  const [, parentPath] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, editor.selection);\n  if (!parentPath.length) {\n    return {\n      isInside: false\n    };\n  }\n  const [maybeBlockquoteParent, maybeBlockquoteParentPath] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, parentPath);\n  const isBlockquote = maybeBlockquoteParent.type === 'blockquote';\n  return isBlockquote ? {\n    isInside: true,\n    path: maybeBlockquoteParentPath\n  } : {\n    isInside: false\n  };\n}\nfunction withBlockquote(editor) {\n  const {\n    insertBreak,\n    deleteBackward\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection) {\n      const parentBlockquote = getDirectBlockquoteParentFromSelection(editor);\n      if (parentBlockquote.isInside && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) &&\n      // the selection is at the start of the paragraph\n      editor.selection.anchor.offset === 0 &&\n      // it's the first paragraph in the panel\n      editor.selection.anchor.path[editor.selection.anchor.path.length - 2] === 0) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          match: node => node.type === 'blockquote',\n          split: true\n        });\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.insertBreak = () => {\n    const panel = getDirectBlockquoteParentFromSelection(editor);\n    if (editor.selection && panel.isInside) {\n      const [node, nodePath] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.node(editor, editor.selection);\n      if (slate__WEBPACK_IMPORTED_MODULE_104__.Path.isDescendant(nodePath, panel.path) && slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(node) === '') {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n          match: node => node.type === 'blockquote',\n          split: true\n        });\n        return;\n      }\n    }\n    insertBreak();\n  };\n  return editor;\n}\n\nfunction withHeading(editor) {\n  const {\n    insertBreak\n  } = editor;\n  editor.insertBreak = () => {\n    insertBreak();\n    const entry = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: n => n.type === 'heading'\n    });\n    if (!entry || !editor.selection || !slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      return;\n    }\n    const path = entry[1];\n    if (\n    // we want to unwrap the heading when the user inserted a break at the end of the heading\n    // when the user inserts a break at the end of a heading, the new heading\n    // that we want to unwrap will be empty so the end will be equal to the selection\n    slate__WEBPACK_IMPORTED_MODULE_104__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.end(editor, path), editor.selection.anchor)) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n        at: path\n      });\n      return;\n    }\n    // we also want to unwrap the _previous_ heading when the user inserted a break\n    // at the start of the heading, essentially just inserting an empty paragraph above the heading\n    if (!slate__WEBPACK_IMPORTED_MODULE_104__.Path.hasPrevious(path)) {\n      return;\n    }\n    const previousPath = slate__WEBPACK_IMPORTED_MODULE_104__.Path.previous(path);\n    const previousNode = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, previousPath);\n    if (previousNode.type === 'heading' && previousNode.children.length === 1 && slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText(previousNode.children[0]) && previousNode.children[0].text === '') {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.unwrapNodes(editor, {\n        at: previousPath\n      });\n    }\n  };\n  return editor;\n}\n\nconst allMarkdownShortcuts = {\n  bold: ['**', '__'],\n  italic: ['*', '_'],\n  strikethrough: ['~~'],\n  code: ['`']\n};\nfunction applyMark(editor, mark, shortcutText, startOfStartPoint) {\n  // so that this starts a new undo group\n  editor.history.undos.push({\n    operations: [],\n    selectionBefore: editor.selection\n  });\n  const startPointRef = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.pointRef(editor, startOfStartPoint);\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n    at: editor.selection.anchor,\n    distance: shortcutText.length,\n    reverse: true\n  });\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.delete(editor, {\n    at: startOfStartPoint,\n    distance: shortcutText.length\n  });\n  slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setNodes(editor, {\n    [mark]: true\n  }, {\n    match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText,\n    split: true,\n    at: {\n      anchor: startPointRef.unref(),\n      focus: editor.selection.anchor\n    }\n  });\n  // once you've ended the shortcut, you're done with the mark\n  // so we need to remove it so the text you insert after doesn't have it\n  editor.removeMark(mark);\n}\nfunction withMarks(editorDocumentFeatures, componentBlocks, editor) {\n  const {\n    insertText,\n    insertBreak\n  } = editor;\n  editor.insertBreak = () => {\n    insertBreak();\n    const marksAfterInsertBreak = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.marks(editor);\n    if (!marksAfterInsertBreak || !editor.selection) return;\n    const parentBlock = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: isBlock\n    });\n    if (!parentBlock) return;\n    const point = EditorAfterButIgnoringingPointsWithNoContent(editor, editor.selection.anchor);\n    const marksAfterInsertBreakArr = Object.keys(marksAfterInsertBreak);\n    if (!point || !slate__WEBPACK_IMPORTED_MODULE_104__.Path.isDescendant(point.path, parentBlock[1])) {\n      for (const mark of marksAfterInsertBreakArr) {\n        editor.removeMark(mark);\n      }\n      return;\n    }\n    const textNode = slate__WEBPACK_IMPORTED_MODULE_104__.Node.get(editor, point.path);\n    for (const mark of marksAfterInsertBreakArr) {\n      if (!textNode[mark]) {\n        editor.removeMark(mark);\n      }\n    }\n  };\n  const selectedMarkdownShortcuts = {};\n  const enabledMarks = editorDocumentFeatures.formatting.inlineMarks;\n  Object.keys(allMarkdownShortcuts).forEach(mark => {\n    if (enabledMarks[mark]) {\n      selectedMarkdownShortcuts[mark] = allMarkdownShortcuts[mark];\n    }\n  });\n  if (Object.keys(selectedMarkdownShortcuts).length === 0) return editor;\n  editor.insertText = text => {\n    insertText(text);\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      for (const [mark, shortcuts] of Object.entries(selectedMarkdownShortcuts)) {\n        for (const shortcutText of shortcuts) {\n          if (text === shortcutText[shortcutText.length - 1]) {\n            // this function is not inlined because\n            // https://github.com/swc-project/swc/issues/2622\n            const startOfBlock = getStartOfBlock(editor);\n            let startOfBlockToEndOfShortcutString = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, {\n              anchor: editor.selection.anchor,\n              focus: startOfBlock\n            });\n            const hasWhitespaceBeforeEndOfShortcut = /\\s/.test(startOfBlockToEndOfShortcutString.slice(-shortcutText.length - 1, -shortcutText.length));\n            const endOfShortcutContainsExpectedContent = shortcutText === startOfBlockToEndOfShortcutString.slice(-shortcutText.length);\n            if (hasWhitespaceBeforeEndOfShortcut || !endOfShortcutContainsExpectedContent) {\n              continue;\n            }\n            const strToMatchOn = startOfBlockToEndOfShortcutString.slice(0, -shortcutText.length - 1);\n            // TODO: use regex probs\n            for (const [offsetFromStartOfBlock] of [...strToMatchOn].reverse().entries()) {\n              const expectedShortcutText = strToMatchOn.slice(offsetFromStartOfBlock, offsetFromStartOfBlock + shortcutText.length);\n              if (expectedShortcutText !== shortcutText) {\n                continue;\n              }\n              const startOfStartOfShortcut = offsetFromStartOfBlock === 0 ? startOfBlock : EditorAfterButIgnoringingPointsWithNoContent(editor, startOfBlock, {\n                distance: offsetFromStartOfBlock\n              });\n              const endOfStartOfShortcut = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.after(editor, startOfStartOfShortcut, {\n                distance: shortcutText.length\n              });\n              if (offsetFromStartOfBlock !== 0 && !/\\s/.test(slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, {\n                anchor: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.before(editor, startOfStartOfShortcut, {\n                  unit: 'character'\n                }),\n                focus: startOfStartOfShortcut\n              }))) {\n                continue;\n              }\n              const contentBetweenShortcuts = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, {\n                anchor: endOfStartOfShortcut,\n                focus: editor.selection.anchor\n              }).slice(0, -shortcutText.length);\n              if (contentBetweenShortcuts === '' || /\\s/.test(contentBetweenShortcuts[0])) {\n                continue;\n              }\n\n              // this is a bit of a weird one\n              // let's say you had <text>__thing _<cursor /></text> and you insert `_`.\n              // without the below, that would turn into <text italic>_thing _<cursor /></text>\n              // but it's probably meant to be bold but it's not because of the space before the ending _\n              // there's probably a better way to do this but meh, this works\n              if (mark === 'italic' && (contentBetweenShortcuts[0] === '_' || contentBetweenShortcuts[0] === '*')) {\n                continue;\n              }\n              // this is the start of a code block shortcut\n              if (mark === 'code' && contentBetweenShortcuts === '`') {\n                continue;\n              }\n              const ancestorComponentChildFieldDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks);\n              if (ancestorComponentChildFieldDocumentFeatures && ancestorComponentChildFieldDocumentFeatures.inlineMarks !== 'inherit' && ancestorComponentChildFieldDocumentFeatures.inlineMarks[mark] === false) {\n                continue;\n              }\n              applyMark(editor, mark, shortcutText, startOfStartOfShortcut);\n              return;\n            }\n          }\n        }\n      }\n    }\n  };\n  return editor;\n}\nfunction getStartOfBlock(editor) {\n  return slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n    match: isBlock\n  })[1]);\n}\n\n// very loosely based on https://github.com/ianstormtaylor/slate/blob/d22c76ae1313fe82111317417912a2670e73f5c9/site/examples/paste-html.tsx\nfunction getAlignmentFromElement(element) {\n  const parent = element.parentElement;\n  // confluence\n  const attribute = parent === null || parent === void 0 ? void 0 : parent.getAttribute('data-align');\n  // note: we don't show html that confluence would parse as alignment\n  // we could change that but meh\n  // (they match on div.fabric-editor-block-mark with data-align)\n  if (attribute === 'center' || attribute === 'end') {\n    return attribute;\n  }\n  if (element instanceof HTMLElement) {\n    // Google docs\n    const textAlign = element.style.textAlign;\n    if (textAlign === 'center') {\n      return 'center';\n    }\n    // TODO: RTL things?\n    if (textAlign === 'right' || textAlign === 'end') {\n      return 'end';\n    }\n  }\n}\nconst headings = {\n  H1: 1,\n  H2: 2,\n  H3: 3,\n  H4: 4,\n  H5: 5,\n  H6: 6\n};\nconst TEXT_TAGS = {\n  CODE: 'code',\n  DEL: 'strikethrough',\n  S: 'strikethrough',\n  STRIKE: 'strikethrough',\n  EM: 'italic',\n  I: 'italic',\n  STRONG: 'bold',\n  U: 'underline',\n  SUP: 'superscript',\n  SUB: 'subscript',\n  KBD: 'keyboard'\n};\nfunction marksFromElementAttributes(element) {\n  const marks = new Set();\n  const style = element.style;\n  const {\n    nodeName\n  } = element;\n  const markFromNodeName = TEXT_TAGS[nodeName];\n  if (markFromNodeName) {\n    marks.add(markFromNodeName);\n  }\n  const {\n    fontWeight,\n    textDecoration,\n    verticalAlign\n  } = style;\n  if (textDecoration === 'underline') {\n    marks.add('underline');\n  } else if (textDecoration === 'line-through') {\n    marks.add('strikethrough');\n  }\n  // confluence\n  if (nodeName === 'SPAN' && element.classList.contains('code')) {\n    marks.add('code');\n  }\n  // Google Docs does weird things with <b>\n  if (nodeName === 'B' && fontWeight !== 'normal') {\n    marks.add('bold');\n  } else if (typeof fontWeight === 'string' && (fontWeight === 'bold' || fontWeight === 'bolder' || fontWeight === '1000' || /^[5-9]\\d{2}$/.test(fontWeight))) {\n    marks.add('bold');\n  }\n  if (style.fontStyle === 'italic') {\n    marks.add('italic');\n  }\n  // Google Docs uses vertical align for subscript and superscript instead of <sup> and <sub>\n  if (verticalAlign === 'super') {\n    marks.add('superscript');\n  } else if (verticalAlign === 'sub') {\n    marks.add('subscript');\n  }\n  return marks;\n}\nfunction deserializeHTML(html) {\n  const parsed = new DOMParser().parseFromString(html, 'text/html');\n  return fixNodesForBlockChildren(deserializeNodes(parsed.body.childNodes));\n}\nfunction deserializeHTMLNode(el) {\n  if (!(el instanceof globalThis.HTMLElement)) {\n    const text = el.textContent;\n    if (!text) {\n      return [];\n    }\n    return getInlineNodes(text);\n  }\n  if (el.nodeName === 'BR') {\n    return getInlineNodes('\\n');\n  }\n  if (el.nodeName === 'IMG') {\n    const alt = el.getAttribute('alt');\n    return getInlineNodes(alt !== null && alt !== void 0 ? alt : '');\n  }\n  if (el.nodeName === 'HR') {\n    return [{\n      type: 'divider',\n      children: [{\n        text: ''\n      }]\n    }];\n  }\n  const marks = marksFromElementAttributes(el);\n\n  // Dropbox Paper displays blockquotes as lists for some reason\n  if (el.classList.contains('listtype-quote')) {\n    marks.delete('italic');\n    return addMarksToChildren(marks, () => [{\n      type: 'blockquote',\n      children: fixNodesForBlockChildren(deserializeNodes(el.childNodes))\n    }]);\n  }\n  return addMarksToChildren(marks, () => {\n    const {\n      nodeName\n    } = el;\n    if (nodeName === 'A') {\n      const href = el.getAttribute('href');\n      if (href) {\n        return setLinkForChildren(href, () => forceDisableMarkForChildren('underline', () => deserializeNodes(el.childNodes)));\n      }\n    }\n    if (nodeName === 'PRE' && el.textContent) {\n      return [{\n        type: 'code',\n        children: [{\n          text: el.textContent || ''\n        }]\n      }];\n    }\n    const deserialized = deserializeNodes(el.childNodes);\n    const children = fixNodesForBlockChildren(deserialized);\n    if (nodeName === 'LI') {\n      let nestedList;\n      const listItemContent = {\n        type: 'list-item-content',\n        children: children.filter(node => {\n          if (nestedList === undefined && (node.type === 'ordered-list' || node.type === 'unordered-list')) {\n            nestedList = node;\n            return false;\n          }\n          return true;\n        })\n      };\n      const listItemChildren = nestedList ? [listItemContent, nestedList] : [listItemContent];\n      return [{\n        type: 'list-item',\n        children: listItemChildren\n      }];\n    }\n    if (nodeName === 'P') {\n      return [{\n        type: 'paragraph',\n        textAlign: getAlignmentFromElement(el),\n        children\n      }];\n    }\n    const headingLevel = headings[nodeName];\n    if (typeof headingLevel === 'number') {\n      return [{\n        type: 'heading',\n        level: headingLevel,\n        textAlign: getAlignmentFromElement(el),\n        children\n      }];\n    }\n    if (nodeName === 'BLOCKQUOTE') {\n      return [{\n        type: 'blockquote',\n        children\n      }];\n    }\n    if (nodeName === 'OL') {\n      return [{\n        type: 'ordered-list',\n        children\n      }];\n    }\n    if (nodeName === 'UL') {\n      return [{\n        type: 'unordered-list',\n        children\n      }];\n    }\n    if (nodeName === 'DIV' && !isBlock(children[0])) {\n      return [{\n        type: 'paragraph',\n        children\n      }];\n    }\n    return deserialized;\n  });\n}\nfunction deserializeNodes(nodes) {\n  const outputNodes = [];\n  for (const node of nodes) {\n    outputNodes.push(...deserializeHTMLNode(node));\n  }\n  return outputNodes;\n}\nfunction fixNodesForBlockChildren(deserializedNodes) {\n  if (!deserializedNodes.length) {\n    // Slate also gets unhappy if an element has no children\n    // the empty text nodes will get normalized away if they're not needed\n    return [{\n      text: ''\n    }];\n  }\n  if (deserializedNodes.some(isBlock)) {\n    const result = [];\n    let queuedInlines = [];\n    const flushInlines = () => {\n      if (queuedInlines.length) {\n        result.push({\n          type: 'paragraph',\n          children: queuedInlines\n        });\n        queuedInlines = [];\n      }\n    };\n    for (const node of deserializedNodes) {\n      if (isBlock(node)) {\n        flushInlines();\n        result.push(node);\n        continue;\n      }\n      // we want to ignore whitespace between block level elements\n      // useful info about whitespace in html:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace\n      if (slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(node).trim() !== '') {\n        queuedInlines.push(node);\n      }\n    }\n    flushInlines();\n    return result;\n  }\n  return deserializedNodes;\n}\n\nconst markdownConfig = {\n  mdastExtensions: [mdast_util_gfm_autolink_literal_from_markdown__WEBPACK_IMPORTED_MODULE_73__, mdast_util_gfm_strikethrough_from_markdown__WEBPACK_IMPORTED_MODULE_75__],\n  extensions: [micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_74__, micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_76___default()()]\n};\nfunction deserializeMarkdown(markdown) {\n  const root = mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_72___default()(markdown, markdownConfig);\n  let nodes = root.children;\n  if (nodes.length === 1 && nodes[0].type === 'paragraph') {\n    nodes = nodes[0].children;\n  }\n  return deserializeChildren(nodes, markdown);\n}\nfunction deserializeChildren(nodes, input) {\n  const outputNodes = [];\n  for (const node of nodes) {\n    const result = deserializeMarkdownNode(node, input);\n    if (result.length) {\n      outputNodes.push(...result);\n    }\n  }\n  if (!outputNodes.length) {\n    outputNodes.push({\n      text: ''\n    });\n  }\n  return outputNodes;\n}\nfunction deserializeMarkdownNode(node, input) {\n  switch (node.type) {\n    case 'blockquote':\n      {\n        return [{\n          type: 'blockquote',\n          children: deserializeChildren(node.children, input)\n        }];\n      }\n    case 'link':\n      {\n        // arguably this could just return a link node rather than use setLinkForChildren since the children _should_ only be inlines\n        // but rather than relying on the markdown parser we use being correct in this way since it isn't nicely codified in types\n        // let's be safe since we already have the code to do it the safer way because of html pasting\n        return setLinkForChildren(node.url, () => deserializeChildren(node.children, input));\n      }\n    case 'code':\n      {\n        return [{\n          type: 'code',\n          children: [{\n            text: node.value\n          }]\n        }];\n      }\n    case 'paragraph':\n      {\n        return [{\n          type: 'paragraph',\n          children: deserializeChildren(node.children, input)\n        }];\n      }\n    case 'heading':\n      {\n        return [{\n          type: 'heading',\n          level: node.depth,\n          children: deserializeChildren(node.children, input)\n        }];\n      }\n    case 'list':\n      {\n        return [{\n          type: node.ordered ? 'ordered-list' : 'unordered-list',\n          children: deserializeChildren(node.children, input)\n        }];\n      }\n    case 'listItem':\n      {\n        return [{\n          type: 'list-item',\n          children: deserializeChildren(node.children, input)\n        }];\n      }\n    case 'thematicBreak':\n      {\n        return [{\n          type: 'divider',\n          children: [{\n            text: ''\n          }]\n        }];\n      }\n    case 'break':\n      {\n        return getInlineNodes('\\n');\n      }\n    case 'delete':\n      {\n        return addMarkToChildren('strikethrough', () => deserializeChildren(node.children, input));\n      }\n    case 'strong':\n      {\n        return addMarkToChildren('bold', () => deserializeChildren(node.children, input));\n      }\n    case 'emphasis':\n      {\n        return addMarkToChildren('italic', () => deserializeChildren(node.children, input));\n      }\n    case 'inlineCode':\n      {\n        return addMarkToChildren('code', () => getInlineNodes(node.value));\n      }\n    case 'text':\n      {\n        return getInlineNodes(node.value);\n      }\n  }\n  return getInlineNodes(input.slice(node.position.start.offset, node.position.end.offset));\n}\n\nconst urlPattern = /https?:\\/\\//;\nfunction insertFragmentButDifferent(editor, nodes) {\n  if (isBlock(nodes[0])) {\n    insertNodesButReplaceIfSelectionIsAtEmptyParagraphOrHeading(editor, nodes);\n  } else {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertFragment(editor, nodes);\n  }\n}\nconst clipboardFormatKey = 'x-keystatic-fragment';\nconst getDefaultView = value => {\n  return value && value.ownerDocument && value.ownerDocument.defaultView || null;\n};\nconst isDOMNode = value => {\n  const window = getDefaultView(value);\n  return !!window && value instanceof window.Node;\n};\nconst isDOMText = value => {\n  return isDOMNode(value) && value.nodeType === 3;\n};\nconst isDOMElement = value => {\n  return isDOMNode(value) && value.nodeType === 1;\n};\nconst getPlainText = domNode => {\n  let text = '';\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue;\n  }\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode);\n    }\n    const display = getComputedStyle(domNode).getPropertyValue('display');\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n';\n    }\n  }\n  return text;\n};\nfunction setFragmentData(e, data) {\n  const {\n    selection\n  } = e;\n  if (!selection) {\n    return;\n  }\n  const [start, end] = slate__WEBPACK_IMPORTED_MODULE_104__.Range.edges(selection);\n  const startVoid = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.void(e, {\n    at: start.path\n  });\n  const endVoid = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.void(e, {\n    at: end.path\n  });\n  if (slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(selection) && !startVoid) {\n    return;\n  }\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const domRange = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMRange(e, selection);\n  let contents = domRange.cloneContents();\n  let attach = contents.childNodes[0];\n\n  // Make sure attach is non-empty, since empty nodes will not get copied.\n  contents.childNodes.forEach(node => {\n    if (node.textContent && node.textContent.trim() !== '') {\n      attach = node;\n    }\n  });\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const [voidNode] = endVoid;\n    const r = domRange.cloneRange();\n    const domNode = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMNode(e, voidNode);\n    r.setEndAfter(domNode);\n    contents = r.cloneContents();\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.querySelector('[data-slate-spacer]');\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(zw => {\n    const isNewline = zw.getAttribute('data-slate-zero-width') === 'n';\n    zw.textContent = isNewline ? '\\n' : '';\n  });\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (isDOMText(attach)) {\n    const span = attach.ownerDocument.createElement('span');\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre';\n    span.appendChild(attach);\n    contents.appendChild(span);\n    attach = span;\n  }\n  const fragment = e.getFragment();\n  const string = JSON.stringify(fragment, (key, val) => {\n    if (val instanceof Uint8Array) {\n      return {\n        [bytesName]: (0,js_base64__WEBPACK_IMPORTED_MODULE_97__.fromUint8Array)(val)\n      };\n    }\n    return val;\n  });\n  const encoded = window.btoa(encodeURIComponent(string));\n  attach.setAttribute('data-keystatic-fragment', encoded);\n  data.setData(`application/${clipboardFormatKey}`, encoded);\n\n  // Add the content to a <div> so that we can get its inner HTML.\n  const div = contents.ownerDocument.createElement('div');\n  div.appendChild(contents);\n  div.setAttribute('hidden', 'true');\n  contents.ownerDocument.body.appendChild(div);\n  data.setData('text/html', div.innerHTML);\n  data.setData('text/plain', getPlainText(div));\n  contents.ownerDocument.body.removeChild(div);\n}\nconst catchSlateFragment = /data-keystatic-fragment=\"(.+?)\"/m;\nconst getSlateFragmentAttribute = dataTransfer => {\n  const htmlData = dataTransfer.getData('text/html');\n  const [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\nconst bytesName = '$$keystaticUint8Array$$';\nfunction withPasting(editor) {\n  const {\n    insertTextData\n  } = editor;\n  editor.setFragmentData = data => {\n    setFragmentData(editor, data);\n  };\n  editor.insertFragmentData = data => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment = data.getData(`application/${clipboardFormatKey}`) || getSlateFragmentAttribute(data);\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment));\n      const parsed = JSON.parse(decoded, (key, val) => typeof val === 'object' && val !== null && bytesName in val && typeof val[bytesName] === 'string' ? (0,js_base64__WEBPACK_IMPORTED_MODULE_97__.toUint8Array)(val[bytesName]) : val);\n      editor.insertFragment(parsed);\n      return true;\n    }\n    return false;\n  };\n  editor.insertTextData = data => {\n    const blockAbove = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: isBlock\n    });\n    if ((blockAbove === null || blockAbove === void 0 ? void 0 : blockAbove[0].type) === 'code') {\n      const plain = data.getData('text/plain');\n      editor.insertText(plain);\n      return true;\n    }\n    let vsCodeEditorData = data.getData('vscode-editor-data');\n    if (vsCodeEditorData) {\n      try {\n        const vsCodeData = JSON.parse(vsCodeEditorData);\n        if ((vsCodeData === null || vsCodeData === void 0 ? void 0 : vsCodeData.mode) === 'markdown' || (vsCodeData === null || vsCodeData === void 0 ? void 0 : vsCodeData.mode) === 'mdx') {\n          const plain = data.getData('text/plain');\n          if (plain) {\n            const fragment = deserializeMarkdown(plain);\n            insertFragmentButDifferent(editor, fragment);\n            return true;\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    const plain = data.getData('text/plain');\n    if (\n    // isValidURL is a bit more permissive than a user might expect\n    // so for pasting, we'll constrain it to starting with https:// or http://\n    urlPattern.test(plain) && isValidURL(plain) && editor.selection && !slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection) &&\n    // we only want to turn the selected text into a link if the selection is within the same block\n    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: node => isBlock(node) && !isBlock(node.children[0])\n    }) &&\n    // and there is only text(potentially with marks) in the selection\n    // no other links\n    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n      match: node => node.type === 'link'\n    }).next().done) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.wrapNodes(editor, {\n        type: 'link',\n        href: plain,\n        children: []\n      }, {\n        split: true\n      });\n      return true;\n    }\n    const html = data.getData('text/html');\n    if (html) {\n      const fragment = deserializeHTML(html);\n      insertFragmentButDifferent(editor, fragment);\n      return true;\n    }\n    if (plain) {\n      const fragment = deserializeMarkdown(plain);\n      insertFragmentButDifferent(editor, fragment);\n      return true;\n    }\n    return insertTextData(data);\n  };\n  return editor;\n}\n\nconst shortcuts = {\n  '...': '…',\n  '-->': '→',\n  '->': '→',\n  '<-': '←',\n  '<--': '←',\n  '--': '–'\n};\nfunction withShortcuts(editor) {\n  const {\n    insertText\n  } = editor;\n  editor.insertText = text => {\n    insertText(text);\n    if (text === ' ' && editor.selection && slate__WEBPACK_IMPORTED_MODULE_104__.Range.isCollapsed(editor.selection)) {\n      const selectionPoint = editor.selection.anchor;\n      const ancestorBlock = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: isBlock\n      });\n      if (ancestorBlock) {\n        Object.keys(shortcuts).forEach(shortcut => {\n          const pointBefore = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.before(editor, selectionPoint, {\n            unit: 'character',\n            distance: shortcut.length + 1\n          });\n          if (pointBefore && slate__WEBPACK_IMPORTED_MODULE_104__.Path.isDescendant(pointBefore.path, ancestorBlock[1])) {\n            const range = {\n              anchor: selectionPoint,\n              focus: pointBefore\n            };\n            const str = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.string(editor, range);\n            if (str.slice(0, shortcut.length) === shortcut) {\n              editor.history.undos.push({\n                operations: [],\n                selectionBefore: editor.selection\n              });\n              slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, range);\n              editor.insertText(shortcuts[shortcut] + ' ');\n            }\n          }\n        });\n      }\n    }\n  };\n  return editor;\n}\n\nfunction withSoftBreaks(editor) {\n  // TODO: should soft breaks only work in particular places\n  editor.insertSoftBreak = () => {\n    slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.insertText(editor, '\\n');\n  };\n  return editor;\n}\n\nconst HOTKEYS = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underline'\n};\nfunction isMarkActive(editor, mark) {\n  const marks = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.marks(editor);\n  if (marks !== null && marks !== void 0 && marks[mark]) {\n    return true;\n  }\n  // see the stuff about marks in toolbar-state for why this is here\n  for (const entry of slate__WEBPACK_IMPORTED_MODULE_104__.Editor.nodes(editor, {\n    match: slate__WEBPACK_IMPORTED_MODULE_104__.Text.isText\n  })) {\n    if (entry[0][mark]) {\n      return true;\n    }\n  }\n  return false;\n}\nconst arrowKeyToDirection = new Map([['ArrowUp', 'up'], ['ArrowDown', 'down'], ['ArrowLeft', 'left'], ['ArrowRight', 'right']]);\nconst getKeyDownHandler = (editor, documentFeatures) => event => {\n  if (event.defaultPrevented) return;\n  for (const hotkey in HOTKEYS) {\n    if (documentFeatures.formatting.inlineMarks[HOTKEYS[hotkey]] && (0,is_hotkey__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(hotkey, event.nativeEvent)) {\n      event.preventDefault();\n      const mark = HOTKEYS[hotkey];\n      const isActive = isMarkActive(editor, mark);\n      if (isActive) {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Editor.removeMark(editor, mark);\n      } else {\n        slate__WEBPACK_IMPORTED_MODULE_104__.Editor.addMark(editor, mark, true);\n      }\n      return;\n    }\n  }\n  if ((0,is_hotkey__WEBPACK_IMPORTED_MODULE_19__[\"default\"])('mod+\\\\', event.nativeEvent)) {\n    clearFormatting(editor);\n    return;\n  }\n  if (documentFeatures.links && (0,is_hotkey__WEBPACK_IMPORTED_MODULE_19__[\"default\"])('mod+k', event.nativeEvent)) {\n    event.preventDefault();\n    wrapLink(editor, '');\n    return;\n  }\n  if (event.key === 'Tab') {\n    const didAction = event.shiftKey ? unnestList(editor) : nestList(editor);\n    if (didAction) {\n      event.preventDefault();\n      return;\n    }\n  }\n  if (event.key === 'Tab' && editor.selection) {\n    const layoutArea = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: node => node.type === 'layout-area' || node.type === 'table-cell'\n    });\n    if (layoutArea) {\n      const layoutAreaToEnter = event.shiftKey ? slate__WEBPACK_IMPORTED_MODULE_104__.Editor.before(editor, layoutArea[1], {\n        unit: 'block'\n      }) : slate__WEBPACK_IMPORTED_MODULE_104__.Editor.after(editor, layoutArea[1], {\n        unit: 'block'\n      });\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.setSelection(editor, {\n        anchor: layoutAreaToEnter,\n        focus: layoutAreaToEnter\n      });\n      event.preventDefault();\n    }\n  }\n  if ((0,is_hotkey__WEBPACK_IMPORTED_MODULE_19__[\"default\"])('mod+a', event)) {\n    const parentTable = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n      match: nodeTypeMatcher('table')\n    });\n    if (parentTable) {\n      slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, parentTable[1]);\n      event.preventDefault();\n      return;\n    }\n  }\n  const direction = arrowKeyToDirection.get(event.key);\n  const {\n    selection\n  } = editor;\n  if (direction && selection) {\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (selectedTableArea) {\n      var _Editor$above, _Editor$above2;\n      const focusCellPath = (_Editor$above = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: nodeTypeMatcher('table-cell'),\n        at: selection.focus.path\n      })) === null || _Editor$above === void 0 ? void 0 : _Editor$above[1];\n      const anchorCellPath = (_Editor$above2 = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n        match: nodeTypeMatcher('table-cell'),\n        at: selection.anchor.path\n      })) === null || _Editor$above2 === void 0 ? void 0 : _Editor$above2[1];\n      if (!focusCellPath || !anchorCellPath) return;\n      const newCellPath = getCellPathInDirection(editor, focusCellPath, direction);\n      if (newCellPath) {\n        if (selectedTableArea.singleCell === 'not-selected') {\n          if (direction !== 'up' && direction !== 'down') return;\n          const [node, offset] = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMPoint(editor, selection.focus);\n          const blockElement = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.above(editor, {\n            match: isBlock,\n            at: selection.focus.path\n          });\n          if (!blockElement) return;\n          if (direction === 'up' && blockElement[1].slice(focusCellPath.length).some(idx => idx !== 0)) {\n            return;\n          }\n          if (direction === 'down') {\n            const [parentNode] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, blockElement[1]);\n            if (parentNode.children.length - 1 !== blockElement[1][blockElement[1].length - 1]) {\n              return;\n            }\n            for (const [node, path] of slate__WEBPACK_IMPORTED_MODULE_104__.Node.ancestors(editor, blockElement[1], {\n              reverse: true\n            })) {\n              if (node.type === 'table-cell') break;\n              const [parentNode] = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.parent(editor, path);\n              if (parentNode.children.length - 1 === path[path.length - 1]) {\n                continue;\n              }\n              return;\n            }\n          }\n          const domNodeForBlockElement = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMNode(editor, blockElement[0]);\n          const rangeOfWholeBlock = document.createRange();\n          rangeOfWholeBlock.selectNodeContents(domNodeForBlockElement);\n          const rectsOfRangeOfWholeBlock = Array.from(rangeOfWholeBlock.getClientRects());\n          const newRange = document.createRange();\n          newRange.setStart(node, offset);\n          newRange.setEnd(node, offset);\n          const rangeRects = Array.from(newRange.getClientRects());\n          const lastRangeRect = rangeRects[rangeRects.length - 1];\n          const key = direction === 'up' ? 'top' : 'bottom';\n          const expected = key === 'top' ? Math.min(...rectsOfRangeOfWholeBlock.map(x => x.top)) : Math.max(...rectsOfRangeOfWholeBlock.map(x => x.bottom));\n          if (lastRangeRect[key] === expected) {\n            const focus = slate__WEBPACK_IMPORTED_MODULE_104__.Editor[direction === 'up' ? 'end' : 'start'](editor, newCellPath);\n            slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, {\n              focus,\n              anchor: event.shiftKey ? selection.anchor : focus\n            });\n            event.preventDefault();\n          }\n          return;\n        }\n        if (!event.shiftKey) return;\n        if (slate__WEBPACK_IMPORTED_MODULE_104__.Path.equals(newCellPath, anchorCellPath)) {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, newCellPath);\n        } else {\n          slate__WEBPACK_IMPORTED_MODULE_104__.Transforms.select(editor, {\n            anchor: selection.anchor,\n            focus: slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, newCellPath)\n          });\n        }\n        event.preventDefault();\n      }\n    }\n  }\n};\nfunction createDocumentEditor(documentFeatures, componentBlocks) {\n  return withPasting(withImages(withSoftBreaks(withInsertMenu(withShortcuts(withHeading(withBlockquote(withMarks(documentFeatures, componentBlocks, withBlockMarkdownShortcuts(documentFeatures, componentBlocks, _createDocumentEditor((0,slate_history__WEBPACK_IMPORTED_MODULE_111__.withHistory)((0,slate_react__WEBPACK_IMPORTED_MODULE_103__.withReact)((0,slate__WEBPACK_IMPORTED_MODULE_104__.createEditor)())), documentFeatures, componentBlocks))))))))));\n}\nfunction DocumentEditor({\n  onChange,\n  value,\n  componentBlocks,\n  documentFeatures,\n  ...props\n}) {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  const editor = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => createDocumentEditor(documentFeatures, componentBlocks), [documentFeatures, componentBlocks]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"div\", {\n    \"data-layout\": entryLayoutPane,\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.classNames)((0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n      backgroundColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.background.canvas,\n      minWidth: 0,\n      '&[data-layout=\"main\"]': {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      '&:not([data-layout=\"main\"])': {\n        border: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.border.regular} solid ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.border.neutral}`,\n        borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.radius.medium\n      }\n    }), 'keystar-document-editor'),\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(DocumentEditorProvider, {\n      componentBlocks: componentBlocks,\n      documentFeatures: documentFeatures,\n      editor: editor,\n      value: value,\n      onChange: value => {\n        onChange === null || onChange === void 0 || onChange(value);\n        // this fixes a strange issue in Safari where the selection stays inside of the editor\n        // after a blur event happens but the selection is still in the editor\n        // so the cursor is visually in the wrong place and it inserts text backwards\n        const selection = window.getSelection();\n        if (selection && !slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.isFocused(editor)) {\n          const editorNode = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMNode(editor, editor);\n          if (selection.anchorNode === editorNode) {\n            slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n          }\n        }\n      },\n      children: [(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => onChange !== undefined && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Toolbar, {\n        documentFeatures: documentFeatures\n      }), [documentFeatures, onChange]), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DocumentEditorEditable, {\n        ...props,\n        readOnly: onChange === undefined\n      }),\n      // for debugging\n      false ]\n    })\n  });\n}\nconst IsInEditorContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(false);\nfunction useIsInDocumentEditor() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(IsInEditorContext);\n}\nfunction DocumentEditorProvider({\n  children,\n  editor,\n  onChange,\n  value,\n  componentBlocks,\n  documentFeatures\n}) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const identity = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => Math.random().toString(36), [editor]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(IsInEditorContext.Provider, {\n    value: true,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(slate_react__WEBPACK_IMPORTED_MODULE_103__.Slate\n    // this fixes issues with Slate crashing when a fast refresh occcurs\n    , {\n      editor: editor,\n      value: value,\n      onChange: value => {\n        onChange(value);\n        // this fixes a strange issue in Safari where the selection stays inside of the editor\n        // after a blur event happens but the selection is still in the editor\n        // so the cursor is visually in the wrong place and it inserts text backwards\n        const selection = window.getSelection();\n        if (selection && !slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.isFocused(editor)) {\n          const editorNode = slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.toDOMNode(editor, editor);\n          if (selection.anchorNode === editorNode) {\n            slate_react__WEBPACK_IMPORTED_MODULE_103__.ReactEditor.focus(editor);\n          }\n        }\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TableSelectionProvider, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ToolbarStateProvider, {\n          componentBlocks: componentBlocks,\n          editorDocumentFeatures: documentFeatures,\n          children: children\n        })\n      })\n    }, identity)\n  });\n}\nfunction getPrismTokenLength(token) {\n  if (typeof token === 'string') {\n    return token.length;\n  } else if (Array.isArray(token.content)) {\n    return token.content.reduce((l, t) => l + getPrismTokenLength(t), 0);\n  } else {\n    return getPrismTokenLength(token.content);\n  }\n}\nfunction DocumentEditorEditable(props) {\n  const containerSize = useContentPanelSize();\n  const entryLayoutPane = useEntryLayoutSplitPaneContext();\n  const editor = (0,slate_react__WEBPACK_IMPORTED_MODULE_103__.useSlate)();\n  const {\n    componentBlocks,\n    documentFeatures\n  } = useDocumentEditorConfig();\n  const onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => getKeyDownHandler(editor, documentFeatures), [editor, documentFeatures]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ActiveBlockPopoverProvider, {\n    editor: editor,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_10__.Prose, {\n      size: entryLayoutPane === 'main' ? 'medium' : 'regular',\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(slate_react__WEBPACK_IMPORTED_MODULE_103__.Editable, {\n        placeholder: \"Start writing or press \\\"/\\\" for commands...\",\n        decorate: (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(([node, path]) => {\n          let decorations = [];\n          if (node.type === 'component-block') {\n            if (node.children.length === 1 && slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(node.children[0]) && node.children[0].type === 'component-inline-prop' && node.children[0].propPath === undefined) {\n              return decorations;\n            }\n            node.children.forEach((child, index) => {\n              if (slate__WEBPACK_IMPORTED_MODULE_104__.Node.string(child) === '' && slate__WEBPACK_IMPORTED_MODULE_104__.Element.isElement(child) && (child.type === 'component-block-prop' || child.type === 'component-inline-prop') && child.propPath !== undefined) {\n                const start = slate__WEBPACK_IMPORTED_MODULE_104__.Editor.start(editor, [...path, index]);\n                const placeholder = getPlaceholderTextForPropPath(child.propPath, componentBlocks[node.component].schema, node.props);\n                if (placeholder) {\n                  decorations.push({\n                    placeholder,\n                    anchor: start,\n                    focus: start\n                  });\n                }\n              }\n            });\n          }\n          if (node.type === 'code' && node.children.length === 1 && node.children[0].type === undefined && node.language && node.language in Prism.languages) {\n            const textPath = [...path, 0];\n            const tokens = Prism.tokenize(node.children[0].text, Prism.languages[node.language]);\n            function consumeTokens(start, tokens) {\n              for (const token of tokens) {\n                const length = getPrismTokenLength(token);\n                const end = start + length;\n                if (typeof token !== 'string') {\n                  decorations.push({\n                    ['prism_' + token.type]: true,\n                    anchor: {\n                      path: textPath,\n                      offset: start\n                    },\n                    focus: {\n                      path: textPath,\n                      offset: end\n                    }\n                  });\n                  consumeTokens(start, Array.isArray(token.content) ? token.content : [token.content]);\n                }\n                start = end;\n              }\n            }\n            consumeTokens(0, tokens);\n          }\n          return decorations;\n        }, [editor, componentBlocks]),\n        onKeyDown: onKeyDown,\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        ...props,\n        ...(0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.toDataAttributes)({\n          container: containerSize,\n          layout: entryLayoutPane\n        }),\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.classNames)(editableStyles, props.className)\n      })\n    })\n  });\n}\nlet styles = {\n  flex: 1,\n  height: 'auto',\n  minHeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.scale[2000],\n  minWidth: 0,\n  padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.medium,\n  '&[data-layout=\"main\"]': {\n    boxSizing: 'border-box',\n    height: '100%',\n    padding: 0,\n    paddingTop: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.medium,\n    minHeight: 0,\n    minWidth: 0,\n    maxWidth: 800,\n    marginInline: 'auto',\n    [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpointQueries.above.mobile]: {\n      padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xlarge\n    },\n    [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.breakpointQueries.above.tablet]: {\n      padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.space.xxlarge\n    },\n    '&[data-container=\"wide\"]': {\n      padding: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.size.scale[600]\n    }\n  }\n};\nconst editableStyles = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.css)({\n  ...styles,\n  a: {\n    color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_9__.tokenSchema.color.foreground.accent\n  }\n});\n\nconst emptyObj = {};\nlet i$1 = 0;\nfunction newKey$1() {\n  return i$1++;\n}\nfunction InnerChildFieldInput(props) {\n  const outerConfig = useDocumentEditorConfig();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => ({\n    key: newKey$1(),\n    value: props.value\n  }));\n  const documentFeatures = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {\n    return getWholeDocumentFeaturesForChildField(outerConfig.documentFeatures, props.schema.options);\n  }, [props.schema, outerConfig.documentFeatures]);\n  if (state.value !== props.value) {\n    setState({\n      key: newKey$1(),\n      value: props.value\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ResetEntryLayoutContext, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.Field, {\n      label: props.schema.options.label,\n      children: inputProps => /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createElement)(DocumentEditor, {\n        ...inputProps,\n        key: state.key,\n        componentBlocks: props.schema.options.componentBlocks === 'inherit' ? outerConfig.componentBlocks : emptyObj,\n        documentFeatures: documentFeatures,\n        onChange: val => {\n          setState(state => ({\n            key: state.key,\n            value: val\n          }));\n          props.onChange(val);\n        },\n        value: state.value\n      })\n    })\n  });\n}\nfunction ChildFieldInput(props) {\n  const data = getChildFieldData(props);\n  if (props.schema.options.kind === 'block' && (props.schema.options.editIn === 'both' || props.schema.options.editIn === 'modal') && data.value) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InnerChildFieldInput, {\n      schema: props.schema,\n      ...data\n    });\n  }\n  return null;\n}\n\nfunction getInputComponent(schema) {\n  if (schema.kind === 'object') {\n    var _schema$Input;\n    return (_schema$Input = schema.Input) !== null && _schema$Input !== void 0 ? _schema$Input : ObjectFieldInput;\n  }\n  if (schema.kind === 'conditional') {\n    var _schema$Input2;\n    return (_schema$Input2 = schema.Input) !== null && _schema$Input2 !== void 0 ? _schema$Input2 : ConditionalFieldInput;\n  }\n  if (schema.kind === 'array') {\n    var _schema$Input3;\n    return (_schema$Input3 = schema.Input) !== null && _schema$Input3 !== void 0 ? _schema$Input3 : ArrayFieldInput;\n  }\n  if (schema.kind === 'child') {\n    return ChildFieldInput;\n  }\n  return schema.Input;\n}\nconst InnerFormValueContentFromPreviewProps = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.memo)(function InnerFormValueContentFromPreview(props) {\n  let Input = getInputComponent(props.schema);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Input, {\n    ...props,\n    autoFocus: !!props.autoFocus,\n    forceValidation: !!props.forceValidation\n  });\n});\nconst emptyArray$1 = [];\nconst FormValueContentFromPreviewProps = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.memo)(function FormValueContentFromPreview({\n  slugField,\n  ...props\n}) {\n  let Input = getInputComponent(props.schema);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PathContextProvider, {\n    value: emptyArray$1,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SlugFieldProvider, {\n      value: slugField,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Input, {\n        ...props,\n        autoFocus: !!props.autoFocus,\n        forceValidation: !!props.forceValidation\n      })\n    })\n  });\n});\n\nconst emptyArray = [];\nconst RESPONSIVE_PADDING = {\n  mobile: 'medium',\n  tablet: 'xlarge',\n  desktop: 'xxlarge'\n};\nfunction containerWidthForEntryLayout(config) {\n  return config.entryLayout === 'content' ? 'none' : 'medium';\n}\nconst EntryLayoutSplitPaneContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(null);\nfunction useEntryLayoutSplitPaneContext() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(EntryLayoutSplitPaneContext);\n}\nfunction ResetEntryLayoutContext(props) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(EntryLayoutSplitPaneContext.Provider, {\n    value: null,\n    children: props.children\n  });\n}\nfunction FormForEntry({\n  formatInfo,\n  forceValidation,\n  slugField,\n  entryLayout,\n  previewProps: props\n}) {\n  const isAboveMobile = useContentPanelQuery({\n    above: 'mobile'\n  });\n  if (entryLayout === 'content' && formatInfo.contentField && isAboveMobile) {\n    const {\n      contentField\n    } = formatInfo;\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PathContextProvider, {\n      value: emptyArray,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SlugFieldProvider, {\n        value: slugField,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_8__.SplitView, {\n          autoSaveId: \"keystatic-content-split-view\",\n          defaultSize: 320,\n          minSize: 240,\n          maxSize: 480,\n          flex: true,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_8__.SplitPaneSecondary, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(EntryLayoutSplitPaneContext.Provider, {\n              value: \"main\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ScrollView, {\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AddToPathProvider, {\n                  part: contentField.key,\n                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InnerFormValueContentFromPreviewProps, {\n                    forceValidation: forceValidation,\n                    ...props.fields[contentField.key]\n                  })\n                })\n              })\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_8__.SplitPanePrimary, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(EntryLayoutSplitPaneContext.Provider, {\n              value: \"side\",\n              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ScrollView, {\n                children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_7__.Grid, {\n                  gap: \"xlarge\",\n                  padding: RESPONSIVE_PADDING,\n                  children: Object.entries(props.fields).map(([key, propVal]) => key === contentField.key ? null : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(AddToPathProvider, {\n                    part: key,\n                    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(InnerFormValueContentFromPreviewProps, {\n                      forceValidation: forceValidation,\n                      ...propVal\n                    })\n                  }, key))\n                })\n              })\n            })\n          })]\n        })\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ScrollView, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PageContainer, {\n      paddingY: RESPONSIVE_PADDING,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FormValueContentFromPreviewProps\n      // autoFocus\n      , {\n        forceValidation: forceValidation,\n        slugField: slugField,\n        ...props\n      })\n    })\n  });\n}\n\nlet i = 0;\nfunction newKey() {\n  return i++;\n}\nfunction DocumentFieldInput(props) {\n  let entryLayoutPane = useEntryLayoutSplitPaneContext();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => ({\n    key: newKey(),\n    value: props.value\n  }));\n  if (state.value !== props.value) {\n    setState({\n      key: newKey(),\n      value: props.value\n    });\n  }\n  let fieldProps = {\n    label: props.label,\n    labelElementType: 'span',\n    // the editor element isn't an input, so we need to use a span for the label\n    description: props.description\n  };\n  if (entryLayoutPane === 'main') {\n    fieldProps = {\n      'aria-label': props.label\n      // `aria-description` is still in W3C Editor's Draft for ARIA 1.3.\n    };\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_6__.Field, {\n    height: entryLayoutPane === 'main' ? '100%' : undefined,\n    ...fieldProps,\n    children: inputProps => /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_3__.createElement)(DocumentEditor, {\n      ...inputProps,\n      key: state.key,\n      componentBlocks: props.componentBlocks,\n      documentFeatures: props.documentFeatures,\n      onChange: val => {\n        setState(state => ({\n          key: state.key,\n          value: val\n        }));\n        props.onChange(val);\n      },\n      value: state.value\n    })\n  });\n}\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst defaultAltField = text({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField = basicFormFieldWithSimpleReaderParse({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new FieldDataError('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  }\n});\nfunction normaliseDocumentFeatures(config) {\n  var _config$formatting, _formatting$alignment, _formatting$alignment2, _formatting$blockType, _formatting$inlineMar, _formatting$inlineMar2, _formatting$inlineMar3, _formatting$inlineMar4, _formatting$inlineMar5, _formatting$inlineMar6, _formatting$inlineMar7, _formatting$inlineMar8, _formatting$listTypes, _formatting$listTypes2, _imagesConfig$schema$, _imagesConfig$schema, _imagesConfig$schema$2, _imagesConfig$schema2;\n  const formatting = config.formatting === true ? {\n    // alignment: true, // not supported natively in markdown\n    blockTypes: true,\n    headingLevels: true,\n    inlineMarks: true,\n    listTypes: true,\n    softBreaks: true\n  } : (_config$formatting = config.formatting) !== null && _config$formatting !== void 0 ? _config$formatting : {};\n  const imagesConfig = config.images === true ? {} : config.images;\n  return {\n    formatting: {\n      alignment: formatting.alignment === true ? {\n        center: true,\n        end: true\n      } : {\n        center: !!((_formatting$alignment = formatting.alignment) !== null && _formatting$alignment !== void 0 && _formatting$alignment.center),\n        end: !!((_formatting$alignment2 = formatting.alignment) !== null && _formatting$alignment2 !== void 0 && _formatting$alignment2.end)\n      },\n      blockTypes: (formatting === null || formatting === void 0 ? void 0 : formatting.blockTypes) === true ? {\n        blockquote: true,\n        code: {\n          schema: object({})\n        }\n      } : {\n        blockquote: !!((_formatting$blockType = formatting.blockTypes) !== null && _formatting$blockType !== void 0 && _formatting$blockType.blockquote),\n        code: (_formatting$blockType2 => {\n          if (((_formatting$blockType2 = formatting.blockTypes) === null || _formatting$blockType2 === void 0 ? void 0 : _formatting$blockType2.code) === undefined) {\n            return false;\n          }\n          if (formatting.blockTypes.code === true || !formatting.blockTypes.code.schema) {\n            return {\n              schema: object({})\n            };\n          }\n          for (const key of ['type', 'children', 'language']) {\n            if (key in formatting.blockTypes.code.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for code blocks`);\n            }\n          }\n          return {\n            schema: object(formatting.blockTypes.code.schema)\n          };\n        })()\n      },\n      headings: (_obj$schema => {\n        const opt = formatting === null || formatting === void 0 ? void 0 : formatting.headingLevels;\n        const obj = typeof opt === 'object' && 'levels' in opt ? opt : {\n          levels: opt,\n          schema: undefined\n        };\n        if (obj.schema) {\n          for (const key of ['type', 'children', 'level', 'textAlign']) {\n            if (key in obj.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for headings`);\n            }\n          }\n        }\n        return {\n          levels: [...new Set(obj.levels === true ? [1, 2, 3, 4, 5, 6] : obj.levels)],\n          schema: object((_obj$schema = obj.schema) !== null && _obj$schema !== void 0 ? _obj$schema : {})\n        };\n      })(),\n      inlineMarks: formatting.inlineMarks === true ? {\n        bold: true,\n        code: true,\n        italic: true,\n        keyboard: false,\n        // not supported natively in markdown\n        strikethrough: true,\n        subscript: false,\n        // not supported natively in markdown\n        superscript: false,\n        // not supported natively in markdown\n        underline: false // not supported natively in markdown\n      } : {\n        bold: !!((_formatting$inlineMar = formatting.inlineMarks) !== null && _formatting$inlineMar !== void 0 && _formatting$inlineMar.bold),\n        code: !!((_formatting$inlineMar2 = formatting.inlineMarks) !== null && _formatting$inlineMar2 !== void 0 && _formatting$inlineMar2.code),\n        italic: !!((_formatting$inlineMar3 = formatting.inlineMarks) !== null && _formatting$inlineMar3 !== void 0 && _formatting$inlineMar3.italic),\n        strikethrough: !!((_formatting$inlineMar4 = formatting.inlineMarks) !== null && _formatting$inlineMar4 !== void 0 && _formatting$inlineMar4.strikethrough),\n        underline: !!((_formatting$inlineMar5 = formatting.inlineMarks) !== null && _formatting$inlineMar5 !== void 0 && _formatting$inlineMar5.underline),\n        keyboard: !!((_formatting$inlineMar6 = formatting.inlineMarks) !== null && _formatting$inlineMar6 !== void 0 && _formatting$inlineMar6.keyboard),\n        subscript: !!((_formatting$inlineMar7 = formatting.inlineMarks) !== null && _formatting$inlineMar7 !== void 0 && _formatting$inlineMar7.subscript),\n        superscript: !!((_formatting$inlineMar8 = formatting.inlineMarks) !== null && _formatting$inlineMar8 !== void 0 && _formatting$inlineMar8.superscript)\n      },\n      listTypes: formatting.listTypes === true ? {\n        ordered: true,\n        unordered: true\n      } : {\n        ordered: !!((_formatting$listTypes = formatting.listTypes) !== null && _formatting$listTypes !== void 0 && _formatting$listTypes.ordered),\n        unordered: !!((_formatting$listTypes2 = formatting.listTypes) !== null && _formatting$listTypes2 !== void 0 && _formatting$listTypes2.unordered)\n      },\n      softBreaks: !!formatting.softBreaks\n    },\n    links: !!config.links,\n    layouts: [...new Set((config.layouts || []).map(x => JSON.stringify(x)))].map(x => JSON.parse(x)),\n    dividers: !!config.dividers,\n    images: imagesConfig === undefined ? false : {\n      ...imagesConfig,\n      schema: {\n        alt: (_imagesConfig$schema$ = (_imagesConfig$schema = imagesConfig.schema) === null || _imagesConfig$schema === void 0 ? void 0 : _imagesConfig$schema.alt) !== null && _imagesConfig$schema$ !== void 0 ? _imagesConfig$schema$ : defaultAltField,\n        title: (_imagesConfig$schema$2 = (_imagesConfig$schema2 = imagesConfig.schema) === null || _imagesConfig$schema2 === void 0 ? void 0 : _imagesConfig$schema2.title) !== null && _imagesConfig$schema$2 !== void 0 ? _imagesConfig$schema$2 : emptyTitleField\n      }\n    },\n    tables: !!config.tables\n  };\n}\nfunction document$1({\n  label,\n  componentBlocks = {},\n  description,\n  ...documentFeaturesConfig\n}) {\n  const documentFeatures = normaliseDocumentFeatures(documentFeaturesConfig);\n  const parse = mode => (_value, data) => {\n    const markdoc = textDecoder.decode(data.content);\n    const document = fromMarkdoc(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__[\"default\"].parse(markdoc), componentBlocks);\n    const editor = createDocumentEditorForNormalization(documentFeatures, componentBlocks);\n    editor.children = document;\n    slate__WEBPACK_IMPORTED_MODULE_104__.Editor.normalize(editor, {\n      force: true\n    });\n    return deserializeFiles(editor.children, componentBlocks, data.other, data.external || new Map(), mode, documentFeatures, data.slug);\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }];\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DocumentFieldInput, {\n        componentBlocks: componentBlocks,\n        description: description,\n        label: label,\n        documentFeatures: documentFeatures,\n        ...props\n      });\n    },\n    parse: parse('edit'),\n    contentExtension: '.mdoc',\n    validate(value) {\n      return value;\n    },\n    directories: [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(componentBlocks).map(([name, block]) => [name, object(block.schema)])))), ...(typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? [fixPath(documentFeatures.images.directory)] : [])],\n    serialize(value, opts) {\n      const {\n        extraFiles,\n        node\n      } = toMarkdocDocument(value, {\n        componentBlocks,\n        documentFeatures,\n        slug: opts.slug\n      });\n      const other = new Map();\n      const external = new Map();\n      for (const file of extraFiles) {\n        if (file.parent === undefined) {\n          other.set(file.path, file.contents);\n          continue;\n        }\n        if (!external.has(file.parent)) {\n          external.set(file.parent, new Map());\n        }\n        external.get(file.parent).set(file.path, file.contents);\n      }\n      return {\n        content: textEncoder.encode(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__[\"default\"].format(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__[\"default\"].parse(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_108__[\"default\"].format(node)))),\n        other,\n        external,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: parse('read')\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.esm.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.esm.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockWrapper: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aC),\n/* harmony export */   NotEditable: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aD),\n/* harmony export */   ToolbarSeparator: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aE),\n/* harmony export */   collection: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aA),\n/* harmony export */   component: () => (/* reexport safe */ _api_5f8911b5_node_esm_js__WEBPACK_IMPORTED_MODULE_1__.c),\n/* harmony export */   config: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.az),\n/* harmony export */   fields: () => (/* binding */ index),\n/* harmony export */   singleton: () => (/* reexport safe */ _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aB)\n/* harmony export */ });\n/* harmony import */ var _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-fbab32f7.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\");\n/* harmony import */ var _api_5f8911b5_node_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-5f8911b5.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-5f8911b5.node.esm.js\");\n/* harmony import */ var _index_20a81495_node_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-20a81495.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-20a81495.node.esm.js\");\n/* harmony import */ var _keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @keystar/ui/checkbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/checkbox/dist/keystar-ui-checkbox.esm.js\");\n/* harmony import */ var _keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @keystar/ui/typography */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/typography/dist/keystar-ui-typography.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @keystar/ui/text-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/text-field/dist/keystar-ui-text-field.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @keystar/ui/button */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/button/dist/keystar-ui-button.esm.js\");\n/* harmony import */ var _keystar_ui_field__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @keystar/ui/field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/field/dist/keystar-ui-field.esm.js\");\n/* harmony import */ var _keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @keystar/ui/layout */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/layout/dist/keystar-ui-layout.esm.js\");\n/* harmony import */ var _keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @keystar/ui/combobox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/combobox/dist/keystar-ui-combobox.esm.js\");\n/* harmony import */ var minimatch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! minimatch */ \"(ssr)/./node_modules/.pnpm/minimatch@7.4.6/node_modules/minimatch/dist/mjs/index.js\");\n/* harmony import */ var _react_stately_collections__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! @react-stately/collections */ \"(ssr)/./node_modules/.pnpm/@react-stately+collections@3.10.5_react@18.2.0/node_modules/@react-stately/collections/dist/import.mjs\");\n/* harmony import */ var _useSlugsInCollection_b967166d_node_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./useSlugsInCollection-b967166d.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/useSlugsInCollection-b967166d.node.esm.js\");\n/* harmony import */ var _keystar_ui_picker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @keystar/ui/picker */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/picker/dist/keystar-ui-picker.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _keystar_ui_style__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @keystar/ui/style */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/style/dist/keystar-ui-style.esm.js\");\n/* harmony import */ var _keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @keystar/ui/number-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/number-field/dist/keystar-ui-number-field.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! @react-aria/i18n */ \"(ssr)/./node_modules/.pnpm/@react-aria+i18n@3.10.2_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.mjs\");\n/* harmony import */ var _keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @keystar/ui/dialog */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/dialog/dist/keystar-ui-dialog.esm.js\");\n/* harmony import */ var _keystar_ui_slots__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @keystar/ui/slots */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/slots/dist/keystar-ui-slots.esm.js\");\n/* harmony import */ var _keystar_ui_menu__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @keystar/ui/menu */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/menu/dist/keystar-ui-menu.esm.js\");\n/* harmony import */ var _keystar_ui_link__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @keystar/ui/link */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/link/dist/keystar-ui-link.esm.js\");\n/* harmony import */ var _keystar_ui_progress__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @keystar/ui/progress */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/progress/dist/keystar-ui-progress.esm.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! emery/assertions */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var _keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @keystar/ui/split-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/split-view/dist/keystar-ui-split-view.esm.js\");\n/* harmony import */ var _keystar_ui_drag_and_drop__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @keystar/ui/drag-and-drop */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/drag-and-drop/dist/keystar-ui-drag-and-drop.esm.js\");\n/* harmony import */ var _keystar_ui_icon__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @keystar/ui/icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/dist/keystar-ui-icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @keystar/ui/icon/icons/trash2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trash2Icon/dist/keystar-ui-icon-icons-trash2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @keystar/ui/list-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/list-view/dist/keystar-ui-list-view.esm.js\");\n/* harmony import */ var _keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @keystar/ui/tooltip */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/tooltip/dist/keystar-ui-tooltip.esm.js\");\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! is-hotkey */ \"(ssr)/./node_modules/.pnpm/is-hotkey@0.2.0/node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @keystar/ui/icon/icons/editIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/editIcon/dist/keystar-ui-icon-icons-editIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @keystar/ui/icon/icons/externalLinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/externalLinkIcon/dist/keystar-ui-icon-icons-externalLinkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_linkIcon__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @keystar/ui/icon/icons/linkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/linkIcon/dist/keystar-ui-icon-icons-linkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_unlinkIcon__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @keystar/ui/icon/icons/unlinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/unlinkIcon/dist/keystar-ui-icon-icons-unlinkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @keystar/ui/overlays */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/overlays/dist/keystar-ui-overlays.esm.js\");\n/* harmony import */ var _keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @keystar/ui/action-group */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/action-group/dist/keystar-ui-action-group.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_boldIcon__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @keystar/ui/icon/icons/boldIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/boldIcon/dist/keystar-ui-icon-icons-boldIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @keystar/ui/icon/icons/chevronDownIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/chevronDownIcon/dist/keystar-ui-icon-icons-chevronDownIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_codeIcon__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @keystar/ui/icon/icons/codeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/codeIcon/dist/keystar-ui-icon-icons-codeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_italicIcon__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @keystar/ui/icon/icons/italicIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/italicIcon/dist/keystar-ui-icon-icons-italicIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_maximizeIcon__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @keystar/ui/icon/icons/maximizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/maximizeIcon/dist/keystar-ui-icon-icons-maximizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minimizeIcon__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @keystar/ui/icon/icons/minimizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minimizeIcon/dist/keystar-ui-icon-icons-minimizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_plusIcon__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @keystar/ui/icon/icons/plusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/plusIcon/dist/keystar-ui-icon-icons-plusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_removeFormattingIcon__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @keystar/ui/icon/icons/removeFormattingIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/removeFormattingIcon/dist/keystar-ui-icon-icons-removeFormattingIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_strikethroughIcon__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @keystar/ui/icon/icons/strikethroughIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/strikethroughIcon/dist/keystar-ui-icon-icons-strikethroughIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_subscriptIcon__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @keystar/ui/icon/icons/subscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/subscriptIcon/dist/keystar-ui-icon-icons-subscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_superscriptIcon__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @keystar/ui/icon/icons/superscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/superscriptIcon/dist/keystar-ui-icon-icons-superscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_typeIcon__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @keystar/ui/icon/icons/typeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/typeIcon/dist/keystar-ui-icon-icons-typeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_underlineIcon__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @keystar/ui/icon/icons/underlineIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/underlineIcon/dist/keystar-ui-icon-icons-underlineIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignLeftIcon__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignLeftIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignLeftIcon/dist/keystar-ui-icon-icons-alignLeftIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignRightIcon__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignRightIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignRightIcon/dist/keystar-ui-icon-icons-alignRightIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignCenterIcon__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignCenterIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignCenterIcon/dist/keystar-ui-icon-icons-alignCenterIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_quoteIcon__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @keystar/ui/icon/icons/quoteIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/quoteIcon/dist/keystar-ui-icon-icons-quoteIcon.esm.js\");\n/* harmony import */ var match_sorter__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! match-sorter */ \"(ssr)/./node_modules/.pnpm/match-sorter@6.3.4/node_modules/match-sorter/dist/match-sorter.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trashIcon__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @keystar/ui/icon/icons/trashIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trashIcon/dist/keystar-ui-icon-icons-trashIcon.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minusIcon__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @keystar/ui/icon/icons/minusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minusIcon/dist/keystar-ui-icon-icons-minusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_columnsIcon__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @keystar/ui/icon/icons/columnsIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/columnsIcon/dist/keystar-ui-icon-icons-columnsIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listIcon__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @keystar/ui/icon/icons/listIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listIcon/dist/keystar-ui-icon-icons-listIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listOrderedIcon__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @keystar/ui/icon/icons/listOrderedIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listOrderedIcon/dist/keystar-ui-icon-icons-listOrderedIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_fileUpIcon__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @keystar/ui/icon/icons/fileUpIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/fileUpIcon/dist/keystar-ui-icon-icons-fileUpIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! @keystar/ui/icon/icons/imageIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/imageIcon/dist/keystar-ui-icon-icons-imageIcon.esm.js\");\n/* harmony import */ var _ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @ts-gql/tag/no-transform */ \"(ssr)/./node_modules/.pnpm/@ts-gql+tag@0.7.3_graphql@16.8.1/node_modules/@ts-gql/tag/no-transform/dist/tag.esm.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! cookie */ \"(ssr)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2Icon__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2Icon/dist/keystar-ui-icon-icons-link2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2OffIcon__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2OffIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2OffIcon/dist/keystar-ui-icon-icons-link2OffIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_pencilIcon__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @keystar/ui/icon/icons/pencilIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/pencilIcon/dist/keystar-ui-icon-icons-pencilIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_undo2Icon__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @keystar/ui/icon/icons/undo2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/undo2Icon/dist/keystar-ui-icon-icons-undo2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_utils__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! @keystar/ui/utils */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/utils/dist/keystar-ui-utils.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sheetIcon__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! @keystar/ui/icon/icons/sheetIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sheetIcon/dist/keystar-ui-icon-icons-sheetIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_tableIcon__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! @keystar/ui/icon/icons/tableIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/tableIcon/dist/keystar-ui-icon-icons-tableIcon.esm.js\");\n/* harmony import */ var _keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! @keystar/ui/listbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/listbox/dist/keystar-ui-listbox.esm.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! mdast-util-from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-from-markdown@0.8.5/node_modules/mdast-util-from-markdown/index.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_76__);\n/* harmony import */ var mdast_util_gfm_autolink_literal_from_markdown__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! mdast-util-gfm-autolink-literal/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-autolink-literal@0.1.3/node_modules/mdast-util-gfm-autolink-literal/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! micromark-extension-gfm-autolink-literal */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-autolink-literal@0.5.7/node_modules/micromark-extension-gfm-autolink-literal/index.js\");\n/* harmony import */ var mdast_util_gfm_strikethrough_from_markdown__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! mdast-util-gfm-strikethrough/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-strikethrough@0.2.3/node_modules/mdast-util-gfm-strikethrough/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! micromark-extension-gfm-strikethrough */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-strikethrough@0.6.5/node_modules/micromark-extension-gfm-strikethrough/index.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_80__);\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftOpenIcon__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftOpenIcon/dist/keystar-ui-icon-icons-panelLeftOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftCloseIcon__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftCloseIcon/dist/keystar-ui-icon-icons-panelLeftCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightOpenIcon__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightOpenIcon/dist/keystar-ui-icon-icons-panelRightOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightCloseIcon__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightCloseIcon/dist/keystar-ui-icon-icons-panelRightCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_badge__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @keystar/ui/badge */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/badge/dist/keystar-ui-badge.esm.js\");\n/* harmony import */ var _keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! @keystar/ui/nav-list */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/nav-list/dist/keystar-ui-nav-list.esm.js\");\n/* harmony import */ var _keystar_ui_status_light__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! @keystar/ui/status-light */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/status-light/dist/keystar-ui-status-light.esm.js\");\n/* harmony import */ var _keystar_ui_core__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! @keystar/ui/core */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/core/dist/keystar-ui-core.esm.js\");\n/* harmony import */ var _keystar_ui_avatar__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! @keystar/ui/avatar */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/avatar/dist/keystar-ui-avatar.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_logOutIcon__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! @keystar/ui/icon/icons/logOutIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/logOutIcon/dist/keystar-ui-icon-icons-logOutIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitPullRequestIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitPullRequestIcon/dist/keystar-ui-icon-icons-gitPullRequestIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchPlusIcon__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchPlusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchPlusIcon/dist/keystar-ui-icon-icons-gitBranchPlusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! @keystar/ui/icon/icons/githubIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/githubIcon/dist/keystar-ui-icon-icons-githubIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitForkIcon__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitForkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitForkIcon/dist/keystar-ui-icon-icons-gitForkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_monitorIcon__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! @keystar/ui/icon/icons/monitorIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/monitorIcon/dist/keystar-ui-icon-icons-monitorIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_moonIcon__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! @keystar/ui/icon/icons/moonIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/moonIcon/dist/keystar-ui-icon-icons-moonIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sunIcon__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! @keystar/ui/icon/icons/sunIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sunIcon/dist/keystar-ui-icon-icons-sunIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_userIcon__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! @keystar/ui/icon/icons/userIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/userIcon/dist/keystar-ui-icon-icons-userIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchIcon__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchIcon/dist/keystar-ui-icon-icons-gitBranchIcon.esm.js\");\n/* harmony import */ var _keystar_ui_radio__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! @keystar/ui/radio */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/radio/dist/keystar-ui-radio.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction array(element, opts) {\n  var _opts$label;\n  return {\n    kind: 'array',\n    element,\n    label: (_opts$label = opts === null || opts === void 0 ? void 0 : opts.label) !== null && _opts$label !== void 0 ? _opts$label : 'Items',\n    description: opts === null || opts === void 0 ? void 0 : opts.description,\n    itemLabel: opts === null || opts === void 0 ? void 0 : opts.itemLabel,\n    asChildTag: opts === null || opts === void 0 ? void 0 : opts.asChildTag,\n    slugField: opts === null || opts === void 0 ? void 0 : opts.slugField,\n    validation: opts === null || opts === void 0 ? void 0 : opts.validation\n  };\n}\n\nfunction CheckboxFieldInput(props) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_3__.Checkbox, {\n    isSelected: props.value,\n    onChange: props.onChange,\n    autoFocus: props.autoFocus,\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      children: props.label\n    }), props.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      slot: \"description\",\n      children: props.description\n    })]\n  });\n}\n\nfunction checkbox({\n  label,\n  defaultValue = false,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CheckboxFieldInput, {\n        ...props,\n        label: label,\n        description: description\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) return defaultValue;\n      if (typeof value !== 'boolean') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a boolean');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction child(options) {\n  return {\n    kind: 'child',\n    options: options.kind === 'block' ? {\n      ...options,\n      dividers: options.dividers,\n      formatting: options.formatting === 'inherit' ? {\n        blockTypes: 'inherit',\n        headingLevels: 'inherit',\n        inlineMarks: 'inherit',\n        listTypes: 'inherit',\n        alignment: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links,\n      images: options.images,\n      tables: options.tables,\n      componentBlocks: options.componentBlocks\n    } : {\n      kind: 'inline',\n      placeholder: options.placeholder,\n      formatting: options.formatting === 'inherit' ? {\n        inlineMarks: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links\n    }\n  };\n}\n\nfunction conditional(discriminant, values) {\n  return {\n    kind: 'conditional',\n    discriminant,\n    values: values\n  };\n}\n\nfunction validateDate(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\n    return `${label} is not a valid date`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const date = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (date < min) {\n        return `${label} must be after ${min.toLocaleDateString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (date > max) {\n        return `${label} must be no later than ${max.toLocaleDateString()}`;\n      }\n    }\n  }\n}\n\nfunction DateFieldInput(props) {\n  var _props$validation;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n    label: props.label,\n    description: props.description,\n    type: \"date\",\n    onChange: val => {\n      props.onChange(val === '' ? null : val);\n    },\n    autoFocus: props.autoFocus,\n    value: props.value === null ? '' : props.value,\n    onBlur: onBlur,\n    isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n    errorMessage: blurred || props.forceValidation ? validateDate(props.validation, props.value, props.label) : undefined\n  });\n}\n\nfunction date({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DateFieldInput, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const day = String(today.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    },\n    validate(value) {\n      const message = validateDate(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(message);\n      }\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction validateDatetime(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/.test(value)) {\n    return `${label} is not a valid datetime`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const datetime = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (datetime < min) {\n        return `${label} must be after ${min.toISOString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (datetime > max) {\n        return `${label} must be no later than ${max.toISOString()}`;\n      }\n    }\n  }\n}\n\n//ui.tsx\nfunction DatetimeFieldInput(props) {\n  var _props$validation;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n    label: props.label,\n    description: props.description,\n    type: \"datetime-local\",\n    onChange: val => {\n      props.onChange(val === '' ? null : val);\n    },\n    autoFocus: props.autoFocus,\n    value: props.value === null ? '' : props.value,\n    onBlur: onBlur,\n    isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n    errorMessage: blurred || props.forceValidation ? validateDatetime(props.validation, props.value, props.label) : undefined\n  });\n}\n\nfunction datetime({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(DatetimeFieldInput, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      if (defaultValue.kind === 'now') {\n        const now = new Date();\n        return now.toISOString();\n      }\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    },\n    validate(value) {\n      const message = validateDatetime(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(message);\n      }\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction emptyDocument() {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: '.mdoc',\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction empty() {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    serialize() {\n      return {\n        value: undefined\n      };\n    },\n    validate(value) {\n      return value;\n    }\n  });\n}\n\nfunction image({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aF, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aH)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction FileFieldInput(props) {\n  var _props$validation, _props$validation2;\n  const {\n    value\n  } = props;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  const isInEditor = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aI)();\n  const objectUrl = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aJ)(value === null ? null : value.data);\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    \"aria-describedby\": props.description ? descriptionId : undefined,\n    \"aria-labelledby\": labelId,\n    direction: \"column\",\n    gap: \"medium\",\n    role: \"group\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_9__.FieldLabel, {\n      id: labelId,\n      elementType: \"span\",\n      isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n      children: props.label\n    }), props.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      size: \"small\",\n      color: \"neutralSecondary\",\n      id: descriptionId,\n      children: props.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ButtonGroup, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ActionButton, {\n        onPress: async () => {\n          const file = await (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aK)('');\n          if (file) {\n            var _file$filename$match$, _file$filename$match;\n            props.onChange({\n              data: file.content,\n              filename: file.filename,\n              extension: (_file$filename$match$ = (_file$filename$match = file.filename.match(/\\.([^.]+$)/)) === null || _file$filename$match === void 0 ? void 0 : _file$filename$match[1]) !== null && _file$filename$match$ !== void 0 ? _file$filename$match$ : ''\n            });\n          }\n        },\n        children: \"Choose file\"\n      }), value !== null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ActionButton, {\n          prominence: \"low\",\n          onPress: () => {\n            props.onChange(null);\n            onBlur();\n          },\n          children: \"Remove\"\n        }), objectUrl && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.Button, {\n          href: objectUrl,\n          download: value.filename,\n          prominence: \"low\",\n          children: \"Download\"\n        })]\n      })]\n    }), isInEditor && value !== null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n      label: \"Filename\",\n      onChange: filename => {\n        props.onChange({\n          ...value,\n          filename\n        });\n      },\n      value: value.filename\n    }), (props.forceValidation || blurred) && ((_props$validation2 = props.validation) === null || _props$validation2 === void 0 ? void 0 : _props$validation2.isRequired) && value === null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_9__.FieldMessage, {\n      children: [props.label, \" is required\"]\n    })]\n  });\n}\n\nfunction file({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(FileFieldInput, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aG)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aH)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction MultiselectFieldInput(props) {\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    role: \"group\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": props.description ? descriptionId : undefined,\n    direction: \"column\",\n    gap: \"medium\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_9__.FieldLabel, {\n      elementType: \"span\",\n      id: labelId,\n      children: props.label\n    }), props.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      id: descriptionId,\n      size: \"small\",\n      color: \"neutralSecondary\",\n      children: props.description\n    }), props.options.map(option => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_3__.Checkbox, {\n      isSelected: props.value.includes(option.value),\n      onChange: () => {\n        if (props.value.includes(option.value)) {\n          props.onChange(props.value.filter(x => x !== option.value));\n        } else {\n          props.onChange([...props.value, option.value]);\n        }\n      },\n      children: option.label\n    }, option.value))]\n  });\n}\n\nfunction multiselect({\n  label,\n  options,\n  defaultValue = [],\n  description\n}) {\n  const valuesToOption = new Map(options.map(x => [x.value, x]));\n  const field = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(MultiselectFieldInput, {\n        label: label,\n        description: description,\n        options: options,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value)) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be an array of options');\n      }\n      if (!value.every(x => typeof x === 'string' && valuesToOption.has(x))) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(`Must be an array with one of ${options.map(x => x.value).join(', ')}`);\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction PathReferenceInput(props) {\n  var _props$validation, _props$validation2;\n  const match = (0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)(() => props.pattern ? (0,minimatch__WEBPACK_IMPORTED_MODULE_12__.filter)(props.pattern) : () => true, [props.pattern]);\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  const tree = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.b)().current;\n  const options = (0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)(() => {\n    const files = tree.kind === 'loaded' ? [...tree.data.entries.values()] : [];\n    return files.filter(val => match(val.path));\n  }, [tree, match]);\n  const _errorMessage = (props.forceValidation || blurred) && (_props$validation = props.validation) !== null && _props$validation !== void 0 && _props$validation.isRequired && props.value === null ? `${props.label} is required` : undefined;\n  // this state & effect shouldn't really exist\n  // it's here because react-aria/stately calls onSelectionChange with null\n  // after selecting an item if we immediately remove the error message\n  // so we delay it with an effect\n  const [errorMessage, setErrorMessage] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(_errorMessage);\n  (0,react__WEBPACK_IMPORTED_MODULE_7__.useEffect)(() => {\n    setErrorMessage(_errorMessage);\n  }, [_errorMessage]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_11__.Combobox, {\n    label: props.label,\n    description: props.description,\n    selectedKey: props.value,\n    onSelectionChange: key => {\n      if (typeof key === 'string' || key === null) {\n        props.onChange(key);\n      }\n    },\n    onBlur: onBlur,\n    isRequired: (_props$validation2 = props.validation) === null || _props$validation2 === void 0 ? void 0 : _props$validation2.isRequired,\n    errorMessage: errorMessage,\n    autoFocus: props.autoFocus,\n    defaultItems: options,\n    width: \"auto\",\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_11__.Item, {\n      children: item.path\n    }, item.path)\n  });\n}\n\nfunction pathReference({\n  label,\n  pattern,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(PathReferenceInput, {\n        label: label,\n        pattern: pattern,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction RelationshipInput(props) {\n  var _props$validation, _props$validation2;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  const slugs = (0,_useSlugsInCollection_b967166d_node_esm_js__WEBPACK_IMPORTED_MODULE_13__.u)(props.collection);\n  const options = (0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)(() => {\n    return slugs.map(slug => ({\n      slug\n    }));\n  }, [slugs]);\n  const _errorMessage = (props.forceValidation || blurred) && (_props$validation = props.validation) !== null && _props$validation !== void 0 && _props$validation.isRequired && props.value === null ? `${props.label} is required` : undefined;\n  // this state & effect shouldn't really exist\n  // it's here because react-aria/stately calls onSelectionChange with null\n  // after selecting an item if we immediately remove the error message\n  // so we delay it with an effect\n  const [errorMessage, setErrorMessage] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(_errorMessage);\n  (0,react__WEBPACK_IMPORTED_MODULE_7__.useEffect)(() => {\n    setErrorMessage(_errorMessage);\n  }, [_errorMessage]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_11__.Combobox, {\n    label: props.label,\n    description: props.description,\n    selectedKey: props.value,\n    onSelectionChange: key => {\n      if (typeof key === 'string' || key === null) {\n        props.onChange(key);\n      }\n    },\n    onBlur: onBlur,\n    autoFocus: props.autoFocus,\n    defaultItems: options,\n    isRequired: (_props$validation2 = props.validation) === null || _props$validation2 === void 0 ? void 0 : _props$validation2.isRequired,\n    errorMessage: errorMessage,\n    width: \"auto\",\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_101__.Item, {\n      children: item.slug\n    }, item.slug)\n  });\n}\n\nfunction relationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(RelationshipInput, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction SelectFieldInput(props) {\n  let fieldContext = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aL)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_picker__WEBPACK_IMPORTED_MODULE_14__.Picker, {\n    label: props.label,\n    description: props.description,\n    items: props.options,\n    selectedKey: props.value,\n    onSelectionChange: key => {\n      props.onChange(key);\n    },\n    autoFocus: props.autoFocus,\n    width: {\n      mobile: 'auto',\n      tablet: fieldContext.span === 12 ? 'alias.singleLineWidth' : 'auto'\n    },\n    children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_picker__WEBPACK_IMPORTED_MODULE_14__.Item, {\n      children: item.label\n    }, item.value)\n  });\n}\n\nfunction select({\n  label,\n  options,\n  defaultValue,\n  description\n}) {\n  const optionValuesSet = new Set(options.map(x => x.value));\n  if (!optionValuesSet.has(defaultValue)) {\n    throw new Error(`A defaultValue of ${defaultValue} was provided to a select field but it does not match the value of one of the options provided`);\n  }\n  const field = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SelectFieldInput, {\n        label: label,\n        options: options,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return defaultValue;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      if (!optionValuesSet.has(value)) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a valid option');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nconst emptySet = new Set();\nfunction SlugFieldInput(props) {\n  var _props$args$slug$vali, _props$args$slug, _props$args$slug$vali2, _props$args$slug2, _props$args$slug$labe, _props$args$slug3, _props$args$name$vali, _props$args$name$vali2, _props$args$name$vali3, _props$args$name$vali4, _props$args$name$vali5, _props$args$slug$labe2, _props$args$slug4, _props$args$slug5;\n  const slugContext = (0,react__WEBPACK_IMPORTED_MODULE_7__.useContext)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aM);\n  const path = (0,react__WEBPACK_IMPORTED_MODULE_7__.useContext)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aN);\n  const slugInfo = path.length === 1 && path[0] === (slugContext === null || slugContext === void 0 ? void 0 : slugContext.field) ? slugContext : {\n    slugs: emptySet,\n    glob: '*'\n  };\n  const [blurredName, setBlurredName] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(false);\n  const [blurredSlug, setBlurredSlug] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(false);\n  const [shouldGenerateSlug, setShouldGenerateSlug] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(props.value === props.defaultValue);\n  const generateSlug = name => {\n    const generated = props.naiveGenerateSlug(name);\n    if (slugInfo.slugs.has(generated)) {\n      let i = 1;\n      while (slugInfo.slugs.has(`${generated}-${i}`)) {\n        i++;\n      }\n      return `${generated}-${i}`;\n    }\n    return generated;\n  };\n  const slugErrorMessage = props.forceValidation || blurredSlug ? (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aO)(props.value.slug, (_props$args$slug$vali = (_props$args$slug = props.args.slug) === null || _props$args$slug === void 0 || (_props$args$slug = _props$args$slug.validation) === null || _props$args$slug === void 0 || (_props$args$slug = _props$args$slug.length) === null || _props$args$slug === void 0 ? void 0 : _props$args$slug.min) !== null && _props$args$slug$vali !== void 0 ? _props$args$slug$vali : 1, (_props$args$slug$vali2 = (_props$args$slug2 = props.args.slug) === null || _props$args$slug2 === void 0 || (_props$args$slug2 = _props$args$slug2.validation) === null || _props$args$slug2 === void 0 || (_props$args$slug2 = _props$args$slug2.length) === null || _props$args$slug2 === void 0 ? void 0 : _props$args$slug2.max) !== null && _props$args$slug$vali2 !== void 0 ? _props$args$slug$vali2 : Infinity, (_props$args$slug$labe = (_props$args$slug3 = props.args.slug) === null || _props$args$slug3 === void 0 ? void 0 : _props$args$slug3.label) !== null && _props$args$slug$labe !== void 0 ? _props$args$slug$labe : 'Slug', slugInfo) : undefined;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    gap: \"xlarge\",\n    direction: \"column\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n      label: props.args.name.label,\n      description: props.args.name.description,\n      autoFocus: props.autoFocus,\n      value: props.value.name,\n      isRequired: !!((_props$args$name$vali = props.args.name.validation) !== null && _props$args$name$vali !== void 0 && (_props$args$name$vali = _props$args$name$vali.length) !== null && _props$args$name$vali !== void 0 && _props$args$name$vali.min),\n      onChange: name => {\n        props.onChange({\n          name,\n          slug: shouldGenerateSlug ? generateSlug(name) : props.value.slug\n        });\n      },\n      onBlur: () => setBlurredName(true),\n      errorMessage: props.forceValidation || blurredName ? (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aO)(props.value.name, (_props$args$name$vali2 = (_props$args$name$vali3 = props.args.name.validation) === null || _props$args$name$vali3 === void 0 || (_props$args$name$vali3 = _props$args$name$vali3.length) === null || _props$args$name$vali3 === void 0 ? void 0 : _props$args$name$vali3.min) !== null && _props$args$name$vali2 !== void 0 ? _props$args$name$vali2 : 0, (_props$args$name$vali4 = (_props$args$name$vali5 = props.args.name.validation) === null || _props$args$name$vali5 === void 0 || (_props$args$name$vali5 = _props$args$name$vali5.length) === null || _props$args$name$vali5 === void 0 ? void 0 : _props$args$name$vali5.max) !== null && _props$args$name$vali4 !== void 0 ? _props$args$name$vali4 : Infinity, props.args.name.label, undefined) : undefined\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n      gap: \"regular\",\n      alignItems: \"end\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n        flex: 1,\n        label: (_props$args$slug$labe2 = (_props$args$slug4 = props.args.slug) === null || _props$args$slug4 === void 0 ? void 0 : _props$args$slug4.label) !== null && _props$args$slug$labe2 !== void 0 ? _props$args$slug$labe2 : 'Slug',\n        description: (_props$args$slug5 = props.args.slug) === null || _props$args$slug5 === void 0 ? void 0 : _props$args$slug5.description,\n        value: props.value.slug,\n        onChange: slug => {\n          setShouldGenerateSlug(false);\n          props.onChange({\n            name: props.value.name,\n            slug\n          });\n        },\n        onBlur: () => setBlurredSlug(true),\n        errorMessage: slugErrorMessage,\n        isRequired: true\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n        gap: \"regular\",\n        direction: \"column\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ActionButton, {\n          onPress: () => {\n            props.onChange({\n              name: props.value.name,\n              slug: generateSlug(props.value.name)\n            });\n          },\n          children: \"Regenerate\"\n        }), slugErrorMessage !== undefined && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Box, {\n          height: \"element.xsmall\"\n        })]\n      })]\n    })]\n  });\n}\n\nfunction parseSlugFieldAsNormalField(value) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug: ''\n    };\n  }\n  if (typeof value !== 'object') {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be an object');\n  }\n  if (Object.keys(value).length !== 2) {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Unexpected keys');\n  }\n  if (!('name' in value) || !('slug' in value)) {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Missing name or slug');\n  }\n  if (typeof value.name !== 'string') {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('name must be a string');\n  }\n  if (typeof value.slug !== 'string') {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('slug must be a string');\n  }\n  return {\n    name: value.name,\n    slug: value.slug\n  };\n}\nfunction parseAsSlugField(value, slug) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug\n    };\n  }\n  if (typeof value !== 'string') {\n    throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n  }\n  return {\n    name: value,\n    slug\n  };\n}\nfunction slug(args) {\n  var _args$slug, _args$name$defaultVal, _args$name$defaultVal2;\n  const naiveGenerateSlug = ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.generate) || (_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_15___default());\n  const defaultValue = {\n    name: (_args$name$defaultVal = args.name.defaultValue) !== null && _args$name$defaultVal !== void 0 ? _args$name$defaultVal : '',\n    slug: naiveGenerateSlug((_args$name$defaultVal2 = args.name.defaultValue) !== null && _args$name$defaultVal2 !== void 0 ? _args$name$defaultVal2 : '')\n  };\n  function validate(value, {\n    slugField\n  } = {\n    slugField: undefined\n  }) {\n    var _args$name$validation, _args$name$validation2, _args$name$validation3, _args$name$validation4, _args$slug$validation, _args$slug2, _args$slug$validation2, _args$slug3, _args$slug$label, _args$slug4;\n    const nameMessage = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aO)(value.name, (_args$name$validation = (_args$name$validation2 = args.name.validation) === null || _args$name$validation2 === void 0 || (_args$name$validation2 = _args$name$validation2.length) === null || _args$name$validation2 === void 0 ? void 0 : _args$name$validation2.min) !== null && _args$name$validation !== void 0 ? _args$name$validation : 0, (_args$name$validation3 = (_args$name$validation4 = args.name.validation) === null || _args$name$validation4 === void 0 || (_args$name$validation4 = _args$name$validation4.length) === null || _args$name$validation4 === void 0 ? void 0 : _args$name$validation4.max) !== null && _args$name$validation3 !== void 0 ? _args$name$validation3 : Infinity, args.name.label, undefined);\n    if (nameMessage !== undefined) {\n      throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(nameMessage);\n    }\n    const slugMessage = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aO)(value.slug, (_args$slug$validation = (_args$slug2 = args.slug) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.validation) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.length) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.min) !== null && _args$slug$validation !== void 0 ? _args$slug$validation : 1, (_args$slug$validation2 = (_args$slug3 = args.slug) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.validation) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.length) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.max) !== null && _args$slug$validation2 !== void 0 ? _args$slug$validation2 : Infinity, (_args$slug$label = (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.label) !== null && _args$slug$label !== void 0 ? _args$slug$label : 'Slug', slugField ? slugField : {\n      slugs: emptySet,\n      glob: '*'\n    });\n    if (slugMessage !== undefined) {\n      throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(slugMessage);\n    }\n    return value;\n  }\n  const emptySet = new Set();\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(SlugFieldInput, {\n        args: args,\n        naiveGenerateSlug: naiveGenerateSlug,\n        defaultValue: defaultValue,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return parseAsSlugField(value, args.slug);\n      }\n      return parseSlugFieldAsNormalField(value);\n    },\n    validate,\n    serialize(value) {\n      return {\n        value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        value: value.name,\n        slug: value.slug\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseSlugFieldAsNormalField(value);\n        return validate(parsed);\n      },\n      parseWithSlug(value, args) {\n        return validate(parseAsSlugField(value, args.slug), {\n          slugField: {\n            glob: args.glob,\n            slugs: emptySet\n          }\n        }).name;\n      }\n    }\n  };\n}\n\nfunction validateUrl(validation, value, label) {\n  if (value !== null && (typeof value !== 'string' || !(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aP)(value))) {\n    return `${label} is not a valid URL`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n}\n\nfunction UrlFieldInput(props) {\n  var _props$validation;\n  const [blurred, onBlur] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useReducer)(() => true, false);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n    width: \"auto\",\n    maxWidth: \"scale.6000\",\n    label: props.label,\n    description: props.description,\n    autoFocus: props.autoFocus,\n    value: props.value === null ? '' : props.value,\n    onChange: val => {\n      props.onChange(val === '' ? null : val);\n    },\n    onBlur: onBlur,\n    isRequired: (_props$validation = props.validation) === null || _props$validation === void 0 ? void 0 : _props$validation.isRequired,\n    errorMessage: props.forceValidation || blurred ? validateUrl(props.validation, props.value, props.label) : undefined\n  });\n}\n\nfunction url({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aw)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(UrlFieldInput, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue || null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax('Must be a string');\n      }\n      return value === '' ? null : value;\n    },\n    validate(value) {\n      const message = validateUrl(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax(message);\n      }\n      (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.ay)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction BlocksFieldInput(props) {\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_102__.useLocalizedStringFormatter)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.l);\n  const [modalState, setModalState] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)({\n    kind: 'closed'\n  });\n  const dismiss = () => {\n    setModalState({\n      kind: 'closed'\n    });\n  };\n  const formId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    elementType: \"section\",\n    gap: \"medium\",\n    role: \"group\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": props.schema.description ? descriptionId : undefined,\n    direction: \"column\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_field__WEBPACK_IMPORTED_MODULE_9__.FieldLabel, {\n      elementType: \"h3\",\n      id: labelId,\n      children: props.schema.label\n    }), props.schema.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      id: descriptionId,\n      size: \"small\",\n      color: \"neutralSecondary\",\n      children: props.schema.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_22__.MenuTrigger, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ActionButton, {\n        alignSelf: \"start\",\n        children: \"Add\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_menu__WEBPACK_IMPORTED_MODULE_22__.Menu, {\n        items: props.schema.element.discriminant.options,\n        onAction: key => {\n          if (typeof key !== 'string') return;\n          const discriminant = key;\n          setModalState({\n            kind: 'new',\n            initial: {\n              discriminant,\n              value: (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a7)(props.schema.element.values[`${discriminant}`])\n            }\n          });\n        },\n        children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_react_stately_collections__WEBPACK_IMPORTED_MODULE_101__.Item, {\n          children: item.label\n        }, item.value)\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aQ, {\n      ...props,\n      labelId: labelId,\n      onOpenItem: idx => {\n        setModalState({\n          kind: 'edit',\n          idx,\n          initial: (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aR)(props.elements[idx])\n        });\n      }\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aS, {\n      ...props\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_20__.DialogContainer, {\n      onDismiss: dismiss,\n      children: (_props$schema$element => {\n        if (modalState.kind === 'closed') {\n          return null;\n        }\n        const discriminant = modalState.initial.discriminant;\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_20__.Dialog, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Heading, {\n            children: [modalState.kind === 'edit' ? 'Edit' : 'Add', ' ', (_props$schema$element = props.schema.element.discriminant.options.find(x => x.value === discriminant)) === null || _props$schema$element === void 0 ? void 0 : _props$schema$element.label]\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_21__.Content, {\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ItemForm, {\n              id: formId,\n              schema: props.schema.element.values[discriminant],\n              initialValue: modalState.initial.value,\n              onSubmit: val => {\n                dismiss();\n                if (modalState.kind === 'new') {\n                  props.onChange([...props.elements.map(x => ({\n                    key: x.key\n                  })), {\n                    key: undefined,\n                    value: (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aT)({\n                      value: val,\n                      discriminant\n                    }, props.schema.element)\n                  }]);\n                  return;\n                }\n                (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aU)(val, props.elements[modalState.idx].value);\n              }\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ButtonGroup, {\n            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.Button, {\n              onPress: dismiss,\n              children: stringFormatter.format('cancel')\n            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.Button, {\n              form: formId,\n              prominence: \"high\",\n              type: \"submit\",\n              children: \"Done\"\n            })]\n          })]\n        });\n      })()\n    })]\n  });\n}\nfunction ItemForm(props) {\n  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(props.initialValue);\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(false);\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)(() => (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.Z)(props.schema, setValue, () => undefined), [props.schema, setValue])(value);\n  const {\n    dismiss\n  } = (0,_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_20__.useDialogContainer)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    id: props.id,\n    elementType: \"form\",\n    onSubmit: event => {\n      if (event.target !== event.currentTarget) return;\n      event.preventDefault();\n      if (!(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a1)(props.schema, value, undefined)) {\n        setForceValidation(true);\n        return;\n      }\n      props.onSubmit(value);\n      dismiss();\n    },\n    direction: \"column\",\n    gap: \"xxlarge\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aV, {\n      forceValidation: forceValidation,\n      autoFocus: true,\n      ...previewProps\n    })\n  });\n}\n\nfunction blocks(blocks, opts) {\n  const entries = Object.entries(blocks);\n  if (!entries.length) {\n    throw new Error('fields.blocks must have at least one entry');\n  }\n  const select$1 = select({\n    label: 'Kind',\n    defaultValue: entries[0][0],\n    options: Object.entries(blocks).map(([key, {\n      label\n    }]) => ({\n      label,\n      value: key\n    }))\n  });\n  const element = conditional(select$1, Object.fromEntries(entries.map(([key, {\n    schema\n  }]) => [key, schema])));\n  return {\n    ...array(element, {\n      label: opts.label,\n      description: opts.description,\n      validation: opts.validation,\n      itemLabel(props) {\n        const kind = props.discriminant;\n        const block = blocks[kind];\n        if (!block.itemLabel) return block.label;\n        return block.itemLabel(props.value);\n      }\n    }),\n    Input: BlocksFieldInput\n  };\n}\n\nfunction ImageField(props) {\n  const {\n    image,\n    onChange\n  } = props;\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(image.src ? 'good' : '');\n  const imageLibraryURL = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aW)();\n  const onPaste = event => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    const parsed = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a_)(text);\n    props.onChange(parsed);\n  };\n  const onLoad = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(data => {\n    onChange(data);\n    setStatus('good');\n  });\n  const config = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.S)();\n  const hasSetFields = !!(props.image.alt || props.image.width || props.image.height);\n  (0,react__WEBPACK_IMPORTED_MODULE_7__.useEffect)(() => {\n    if (!props.image.src) {\n      setStatus('');\n      return;\n    }\n    if (!(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aP)(props.image.src)) {\n      return;\n    }\n    if (hasSetFields) {\n      setStatus('good');\n      return;\n    }\n    setStatus('loading');\n    (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aX)(props.image.src, config).then(newData => {\n      onLoad(newData);\n    }).catch(() => {\n      setStatus('error');\n    });\n  }, [config, hasSetFields, onLoad, props.image.src]);\n  const [blurred, setBlurred] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(false);\n  const errorMessage = (blurred || props.forceValidation) && props.isRequired && !image.src ? 'Image URL is required' : undefined;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.VStack, {\n    gap: \"xlarge\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextField, {\n      label: \"Image URL\",\n      errorMessage: errorMessage,\n      autoFocus: props.autoFocus,\n      onPaste: onPaste,\n      onKeyDown: e => {\n        if (e.code === 'Backspace' || e.code === 'Delete') {\n          props.onChange(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aY);\n        }\n      },\n      onBlur: () => setBlurred(true),\n      value: image.src,\n      description: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n        children: [\"Copy an image URL from the\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_23__.TextLink, {\n          prominence: \"high\",\n          href: imageLibraryURL,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"Image Library\"\n        }), ' ', \"and paste it into this field.\"]\n      }),\n      endElement: status === 'loading' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n        height: \"element.regular\",\n        width: \"element.regular\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_24__.ProgressCircle, {\n          size: \"small\",\n          \"aria-label\": \"Checking\\u2026\",\n          isIndeterminate: true\n        })\n      }) : image.src ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_8__.ClearButton, {\n        onPress: () => {\n          props.onChange(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aY);\n          setStatus('');\n        },\n        preventFocus: true\n      }) : null\n    }), status === 'good' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Box, {\n        width: \"scale.1600\",\n        height: \"scale.1600\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"img\", {\n          alt: image.alt,\n          src: image.src,\n          style: {\n            objectFit: 'contain',\n            height: '100%',\n            width: '100%'\n          }\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_6__.TextArea, {\n        label: \"Alt text\",\n        value: image.alt,\n        onChange: alt => props.onChange({\n          ...image,\n          alt\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.aZ, {\n        src: image.src,\n        image: image,\n        onChange: dimensions => {\n          onChange({\n            ...props.image,\n            ...dimensions\n          });\n        }\n      })]\n    }) : null]\n  });\n}\nfunction CloudImageFieldInput(props) {\n  var _props$fields$width$v, _props$fields$height$;\n  const labelId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  const descriptionId = (0,react__WEBPACK_IMPORTED_MODULE_7__.useId)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_10__.Flex, {\n    role: \"group\",\n    gap: \"medium\",\n    marginY: \"large\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": props.schema.description ? descriptionId : undefined,\n    direction: \"column\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      color: \"neutral\",\n      size: \"medium\",\n      weight: \"medium\",\n      id: labelId,\n      children: props.schema.label\n    }), !!props.schema.description && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_4__.Text, {\n      id: descriptionId,\n      size: \"regular\",\n      color: \"neutralSecondary\",\n      children: props.schema.description\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(ImageField, {\n      image: {\n        src: props.fields.src.value,\n        alt: props.fields.alt.value,\n        width: (_props$fields$width$v = props.fields.width.value) !== null && _props$fields$width$v !== void 0 ? _props$fields$width$v : undefined,\n        height: (_props$fields$height$ = props.fields.height.value) !== null && _props$fields$height$ !== void 0 ? _props$fields$height$ : undefined\n      },\n      onChange: data => {\n        var _data$width, _data$height;\n        props.onChange({\n          src: data.src,\n          alt: data.alt,\n          width: (_data$width = data.width) !== null && _data$width !== void 0 ? _data$width : null,\n          height: (_data$height = data.height) !== null && _data$height !== void 0 ? _data$height : null\n        });\n      },\n      autoFocus: props.autoFocus,\n      isRequired: props.isRequired,\n      forceValidation: props.forceValidation\n    })]\n  });\n}\n\nfunction cloudImage({\n  label,\n  description,\n  validation\n}) {\n  return {\n    ...(0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.o)({\n      src: (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a$)({\n        label: 'URL',\n        validation: {\n          length: {\n            min: validation !== null && validation !== void 0 && validation.isRequired ? 1 : 0\n          }\n        }\n      }),\n      alt: (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a$)({\n        label: 'Alt text'\n      }),\n      height: (0,_index_20a81495_node_esm_js__WEBPACK_IMPORTED_MODULE_2__.i)({\n        label: 'Height'\n      }),\n      width: (0,_index_20a81495_node_esm_js__WEBPACK_IMPORTED_MODULE_2__.i)({\n        label: 'Width'\n      })\n    }, {\n      label,\n      description\n    }),\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(CloudImageFieldInput, {\n        ...props,\n        isRequired: validation === null || validation === void 0 ? void 0 : validation.isRequired\n      });\n    }\n  };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  array: array,\n  checkbox: checkbox,\n  child: child,\n  conditional: conditional,\n  date: date,\n  datetime: datetime,\n  document: _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.b0,\n  emptyDocument: emptyDocument,\n  empty: empty,\n  image: image,\n  file: file,\n  integer: _index_20a81495_node_esm_js__WEBPACK_IMPORTED_MODULE_2__.i,\n  multiselect: multiselect,\n  object: _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.o,\n  pathReference: pathReference,\n  relationship: relationship,\n  select: select,\n  slug: slug,\n  text: _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_0__.a$,\n  url: url,\n  blocks: blocks,\n  cloudImage: cloudImage\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/required-files-f12cd7f9.node.esm.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/required-files-f12cd7f9.node.esm.js ***!
  \*******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   l: () => (/* binding */ loadDataFile)\n/* harmony export */ });\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-yaml */ \"(ssr)/./node_modules/.pnpm/js-yaml@4.1.0/node_modules/js-yaml/dist/js-yaml.mjs\");\n\n\n\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction splitFrontmatter(data) {\n  const str = textDecoder.decode(data);\n  const match = str.match(/^---(?:\\r?\\n([^]*?))?\\r?\\n---\\r?\\n?/);\n  if (match) {\n    var _match$;\n    const encoded = textEncoder.encode(match[0]);\n    return {\n      frontmatter: (_match$ = match[1]) !== null && _match$ !== void 0 ? _match$ : '',\n      content: data.slice(encoded.byteLength)\n    };\n  }\n  return null;\n}\nfunction loadDataFile(data, formatInfo) {\n  const parse = formatInfo.data === 'json' ? JSON.parse : js_yaml__WEBPACK_IMPORTED_MODULE_1__.load;\n  if (!formatInfo.contentField) {\n    const dataFile = textDecoder.decode(data);\n    return {\n      loaded: parse(dataFile)\n    };\n  }\n  const res = splitFrontmatter(data);\n  (0,emery__WEBPACK_IMPORTED_MODULE_0__.assert)(res !== null, 'frontmatter not found');\n  return {\n    loaded: parse(res.frontmatter),\n    extraFakeFile: {\n      path: `${formatInfo.contentField.key}${formatInfo.contentField.config.contentExtension}`,\n      contents: res.content\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvcmVxdWlyZWQtZmlsZXMtZjEyY2Q3Zjkubm9kZS5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBQ0E7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHlDQUFJO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw2Q0FBTTtBQUNSO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNEJBQTRCLEVBQUUsZ0RBQWdEO0FBQzdGO0FBQ0E7QUFDQTtBQUNBOztBQUU2QiIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa2V5c3RhdGljK2NvcmVAMC4yLjEyX25leHRAMTQuMi4yX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9Aa2V5c3RhdGljL2NvcmUvZGlzdC9yZXF1aXJlZC1maWxlcy1mMTJjZDdmOS5ub2RlLmVzbS5qcz80NDhlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydCB9IGZyb20gJ2VtZXJ5JztcbmltcG9ydCB7IGxvYWQgfSBmcm9tICdqcy15YW1sJztcblxuY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmNvbnN0IHRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5mdW5jdGlvbiBzcGxpdEZyb250bWF0dGVyKGRhdGEpIHtcbiAgY29uc3Qgc3RyID0gdGV4dERlY29kZXIuZGVjb2RlKGRhdGEpO1xuICBjb25zdCBtYXRjaCA9IHN0ci5tYXRjaCgvXi0tLSg/Olxccj9cXG4oW15dKj8pKT9cXHI/XFxuLS0tXFxyP1xcbj8vKTtcbiAgaWYgKG1hdGNoKSB7XG4gICAgdmFyIF9tYXRjaCQ7XG4gICAgY29uc3QgZW5jb2RlZCA9IHRleHRFbmNvZGVyLmVuY29kZShtYXRjaFswXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZyb250bWF0dGVyOiAoX21hdGNoJCA9IG1hdGNoWzFdKSAhPT0gbnVsbCAmJiBfbWF0Y2gkICE9PSB2b2lkIDAgPyBfbWF0Y2gkIDogJycsXG4gICAgICBjb250ZW50OiBkYXRhLnNsaWNlKGVuY29kZWQuYnl0ZUxlbmd0aClcbiAgICB9O1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gbG9hZERhdGFGaWxlKGRhdGEsIGZvcm1hdEluZm8pIHtcbiAgY29uc3QgcGFyc2UgPSBmb3JtYXRJbmZvLmRhdGEgPT09ICdqc29uJyA/IEpTT04ucGFyc2UgOiBsb2FkO1xuICBpZiAoIWZvcm1hdEluZm8uY29udGVudEZpZWxkKSB7XG4gICAgY29uc3QgZGF0YUZpbGUgPSB0ZXh0RGVjb2Rlci5kZWNvZGUoZGF0YSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxvYWRlZDogcGFyc2UoZGF0YUZpbGUpXG4gICAgfTtcbiAgfVxuICBjb25zdCByZXMgPSBzcGxpdEZyb250bWF0dGVyKGRhdGEpO1xuICBhc3NlcnQocmVzICE9PSBudWxsLCAnZnJvbnRtYXR0ZXIgbm90IGZvdW5kJyk7XG4gIHJldHVybiB7XG4gICAgbG9hZGVkOiBwYXJzZShyZXMuZnJvbnRtYXR0ZXIpLFxuICAgIGV4dHJhRmFrZUZpbGU6IHtcbiAgICAgIHBhdGg6IGAke2Zvcm1hdEluZm8uY29udGVudEZpZWxkLmtleX0ke2Zvcm1hdEluZm8uY29udGVudEZpZWxkLmNvbmZpZy5jb250ZW50RXh0ZW5zaW9ufWAsXG4gICAgICBjb250ZW50czogcmVzLmNvbnRlbnRcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB7IGxvYWREYXRhRmlsZSBhcyBsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/required-files-f12cd7f9.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/useSlugsInCollection-b967166d.node.esm.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/useSlugsInCollection-b967166d.node.esm.js ***!
  \*************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   u: () => (/* binding */ useSlugsInCollection)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-fbab32f7.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\");\n\n\n\nfunction useSlugsInCollection(collection) {\n  const config = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_1__.S)();\n  const tree = (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_1__.b)().current;\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const loadedTree = tree.kind === 'loaded' ? tree.data.tree : new Map();\n    return (0,_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(config, collection, loadedTree).map(x => x.slug);\n  }, [config, tree, collection]);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvdXNlU2x1Z3NJbkNvbGxlY3Rpb24tYjk2NzE2NmQubm9kZS5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNvRjs7QUFFcEg7QUFDQSxpQkFBaUIsOERBQVM7QUFDMUIsZUFBZSw4REFBTztBQUN0QixTQUFTLDhDQUFPO0FBQ2hCO0FBQ0EsV0FBVyw4REFBaUM7QUFDNUMsR0FBRztBQUNIOztBQUVxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa2V5c3RhdGljK2NvcmVAMC4yLjEyX25leHRAMTQuMi4yX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9Aa2V5c3RhdGljL2NvcmUvZGlzdC91c2VTbHVnc0luQ29sbGVjdGlvbi1iOTY3MTY2ZC5ub2RlLmVzbS5qcz84ZWIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTIGFzIHVzZUNvbmZpZywgYiBhcyB1c2VUcmVlLCBkIGFzIGdldEVudHJpZXNJbkNvbGxlY3Rpb25XaXRoVHJlZUtleSB9IGZyb20gJy4vaW5kZXgtZmJhYjMyZjcubm9kZS5lc20uanMnO1xuXG5mdW5jdGlvbiB1c2VTbHVnc0luQ29sbGVjdGlvbihjb2xsZWN0aW9uKSB7XG4gIGNvbnN0IGNvbmZpZyA9IHVzZUNvbmZpZygpO1xuICBjb25zdCB0cmVlID0gdXNlVHJlZSgpLmN1cnJlbnQ7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBsb2FkZWRUcmVlID0gdHJlZS5raW5kID09PSAnbG9hZGVkJyA/IHRyZWUuZGF0YS50cmVlIDogbmV3IE1hcCgpO1xuICAgIHJldHVybiBnZXRFbnRyaWVzSW5Db2xsZWN0aW9uV2l0aFRyZWVLZXkoY29uZmlnLCBjb2xsZWN0aW9uLCBsb2FkZWRUcmVlKS5tYXAoeCA9PiB4LnNsdWcpO1xuICB9LCBbY29uZmlnLCB0cmVlLCBjb2xsZWN0aW9uXSk7XG59XG5cbmV4cG9ydCB7IHVzZVNsdWdzSW5Db2xsZWN0aW9uIGFzIHUgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/useSlugsInCollection-b967166d.node.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/ui/dist/keystatic-core-ui.node.esm.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/ui/dist/keystatic-core-ui.node.esm.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keystatic: () => (/* binding */ Keystatic)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @keystar/ui/button */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/button/dist/keystar-ui-button.esm.js\");\n/* harmony import */ var _keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @keystar/ui/icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/dist/keystar-ui-icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_fileX2Icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @keystar/ui/icon/icons/fileX2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/fileX2Icon/dist/keystar-ui-icon-icons-fileX2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @keystar/ui/icon/icons/githubIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/githubIcon/dist/keystar-ui-icon-icons-githubIcon.esm.js\");\n/* harmony import */ var _keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @keystar/ui/layout */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/layout/dist/keystar-ui-layout.esm.js\");\n/* harmony import */ var _keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @keystar/ui/typography */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/typography/dist/keystar-ui-typography.esm.js\");\n/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! @react-aria/i18n */ \"(ssr)/./node_modules/.pnpm/@react-aria+i18n@3.10.2_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.mjs\");\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! is-hotkey */ \"(ssr)/./node_modules/.pnpm/is-hotkey@0.2.0/node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alertCircleIcon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @keystar/ui/icon/icons/alertCircleIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alertCircleIcon/dist/keystar-ui-icon-icons-alertCircleIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listXIcon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @keystar/ui/icon/icons/listXIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listXIcon/dist/keystar-ui-icon-icons-listXIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_searchIcon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @keystar/ui/icon/icons/searchIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/searchIcon/dist/keystar-ui-icon-icons-searchIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_searchXIcon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @keystar/ui/icon/icons/searchXIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/searchXIcon/dist/keystar-ui-icon-icons-searchXIcon.esm.js\");\n/* harmony import */ var _keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @keystar/ui/link */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/link/dist/keystar-ui-link.esm.js\");\n/* harmony import */ var _keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @keystar/ui/progress */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/progress/dist/keystar-ui-progress.esm.js\");\n/* harmony import */ var _keystar_ui_search_field__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @keystar/ui/search-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/search-field/dist/keystar-ui-search-field.esm.js\");\n/* harmony import */ var _keystar_ui_status_light__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @keystar/ui/status-light */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/status-light/dist/keystar-ui-status-light.esm.js\");\n/* harmony import */ var _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @keystar/ui/style */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/style/dist/keystar-ui-style.esm.js\");\n/* harmony import */ var _keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @keystar/ui/table */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/table/dist/keystar-ui-table.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! emery */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../dist/index-fbab32f7.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-fbab32f7.node.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @keystar/ui/breadcrumbs */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/breadcrumbs/dist/keystar-ui-breadcrumbs.esm.js\");\n/* harmony import */ var _keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @keystar/ui/dialog */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/dialog/dist/keystar-ui-dialog.esm.js\");\n/* harmony import */ var _keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @keystar/ui/notice */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/notice/dist/keystar-ui-notice.esm.js\");\n/* harmony import */ var _keystar_ui_toast__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @keystar/ui/toast */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/toast/dist/keystar-ui-toast.esm.js\");\n/* harmony import */ var _keystar_ui_checkbox__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @keystar/ui/checkbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/checkbox/dist/keystar-ui-checkbox.esm.js\");\n/* harmony import */ var _keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @keystar/ui/text-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/text-field/dist/keystar-ui-text-field.esm.js\");\n/* harmony import */ var _keystar_ui_field__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @keystar/ui/field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/field/dist/keystar-ui-field.esm.js\");\n/* harmony import */ var _keystar_ui_number_field__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @keystar/ui/number-field */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/number-field/dist/keystar-ui-number-field.esm.js\");\n/* harmony import */ var _keystar_ui_combobox__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @keystar/ui/combobox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/combobox/dist/keystar-ui-combobox.esm.js\");\n/* harmony import */ var minimatch__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! minimatch */ \"(ssr)/./node_modules/.pnpm/minimatch@7.4.6/node_modules/minimatch/dist/mjs/index.js\");\n/* harmony import */ var _keystar_ui_picker__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @keystar/ui/picker */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/picker/dist/keystar-ui-picker.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(ssr)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _keystar_ui_slots__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @keystar/ui/slots */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/slots/dist/keystar-ui-slots.esm.js\");\n/* harmony import */ var _keystar_ui_drag_and_drop__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @keystar/ui/drag-and-drop */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/drag-and-drop/dist/keystar-ui-drag-and-drop.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @keystar/ui/icon/icons/trash2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trash2Icon/dist/keystar-ui-icon-icons-trash2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_list_view__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @keystar/ui/list-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/list-view/dist/keystar-ui-list-view.esm.js\");\n/* harmony import */ var _keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @keystar/ui/tooltip */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/tooltip/dist/keystar-ui-tooltip.esm.js\");\n/* harmony import */ var _keystar_ui_menu__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @keystar/ui/menu */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/menu/dist/keystar-ui-menu.esm.js\");\n/* harmony import */ var _keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @keystar/ui/action-group */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/action-group/dist/keystar-ui-action-group.esm.js\");\n/* harmony import */ var _keystar_ui_badge__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @keystar/ui/badge */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/badge/dist/keystar-ui-badge.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_copyPlusIcon__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @keystar/ui/icon/icons/copyPlusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/copyPlusIcon/dist/keystar-ui-icon-icons-copyPlusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @keystar/ui/icon/icons/externalLinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/externalLinkIcon/dist/keystar-ui-icon-icons-externalLinkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_historyIcon__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @keystar/ui/icon/icons/historyIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/historyIcon/dist/keystar-ui-icon-icons-historyIcon.esm.js\");\n/* harmony import */ var urql__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! urql */ \"(ssr)/./node_modules/.pnpm/urql@4.0.7_graphql@16.8.1_react@18.2.0/node_modules/urql/dist/urql.es.js\");\n/* harmony import */ var urql__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! urql */ \"(ssr)/./node_modules/.pnpm/@urql+core@5.0.1_graphql@16.8.1/node_modules/@urql/core/dist/urql-core.mjs\");\n/* harmony import */ var _ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @ts-gql/tag/no-transform */ \"(ssr)/./node_modules/.pnpm/@ts-gql+tag@0.7.3_graphql@16.8.1/node_modules/@ts-gql/tag/no-transform/dist/tag.esm.js\");\n/* harmony import */ var _keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @keystar/ui/split-view */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/split-view/dist/keystar-ui-split-view.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftOpenIcon__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftOpenIcon/dist/keystar-ui-icon-icons-panelLeftOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelLeftCloseIcon__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelLeftCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelLeftCloseIcon/dist/keystar-ui-icon-icons-panelLeftCloseIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightOpenIcon__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightOpenIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightOpenIcon/dist/keystar-ui-icon-icons-panelRightOpenIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_panelRightCloseIcon__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @keystar/ui/icon/icons/panelRightCloseIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/panelRightCloseIcon/dist/keystar-ui-icon-icons-panelRightCloseIcon.esm.js\");\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! js-yaml */ \"(ssr)/./node_modules/.pnpm/js-yaml@4.1.0/node_modules/js-yaml/dist/js-yaml.mjs\");\n/* harmony import */ var js_base64__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! js-base64 */ \"(ssr)/./node_modules/.pnpm/js-base64@3.7.7/node_modules/js-base64/base64.mjs\");\n/* harmony import */ var lru_cache__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! lru-cache */ \"(ssr)/./node_modules/.pnpm/lru-cache@7.18.3/node_modules/lru-cache/index.mjs\");\n/* harmony import */ var _dist_required_files_f12cd7f9_node_esm_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../../dist/required-files-f12cd7f9.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/required-files-f12cd7f9.node.esm.js\");\n/* harmony import */ var _keystar_ui_core__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @keystar/ui/core */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/core/dist/keystar-ui-core.esm.js\");\n/* harmony import */ var _urql_exchange_graphcache__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! @urql/exchange-graphcache */ \"(ssr)/./node_modules/.pnpm/@urql+exchange-graphcache@6.5.1_graphql@16.8.1/node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache.mjs\");\n/* harmony import */ var _urql_exchange_auth__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! @urql/exchange-auth */ \"(ssr)/./node_modules/.pnpm/@urql+exchange-auth@2.1.6_graphql@16.8.1/node_modules/@urql/exchange-auth/dist/urql-exchange-auth.mjs\");\n/* harmony import */ var _urql_exchange_persisted__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! @urql/exchange-persisted */ \"(ssr)/./node_modules/.pnpm/@urql+exchange-persisted@4.2.0_graphql@16.8.1/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_54__);\n/* harmony import */ var _dist_useSlugsInCollection_b967166d_node_esm_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../../dist/useSlugsInCollection-b967166d.node.esm.js */ \"(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/useSlugsInCollection-b967166d.node.esm.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/.pnpm/zod@3.22.5/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/./node_modules/.pnpm/idb-keyval@6.2.1/node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _keystar_ui_avatar__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @keystar/ui/avatar */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/avatar/dist/keystar-ui-avatar.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchIcon__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchIcon/dist/keystar-ui-icon-icons-gitBranchIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitBranchPlusIcon__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitBranchPlusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitBranchPlusIcon/dist/keystar-ui-icon-icons-gitBranchPlusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitPullRequestIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitPullRequestIcon/dist/keystar-ui-icon-icons-gitPullRequestIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_plusIcon__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @keystar/ui/icon/icons/plusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/plusIcon/dist/keystar-ui-icon-icons-plusIcon.esm.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! emery/assertions */ \"(ssr)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_62__);\n/* harmony import */ var _keystar_ui_icon_icons_editIcon__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @keystar/ui/icon/icons/editIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/editIcon/dist/keystar-ui-icon-icons-editIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_linkIcon__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @keystar/ui/icon/icons/linkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/linkIcon/dist/keystar-ui-icon-icons-linkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_unlinkIcon__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! @keystar/ui/icon/icons/unlinkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/unlinkIcon/dist/keystar-ui-icon-icons-unlinkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_overlays__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @keystar/ui/overlays */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/overlays/dist/keystar-ui-overlays.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_boldIcon__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! @keystar/ui/icon/icons/boldIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/boldIcon/dist/keystar-ui-icon-icons-boldIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_chevronDownIcon__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @keystar/ui/icon/icons/chevronDownIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/chevronDownIcon/dist/keystar-ui-icon-icons-chevronDownIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_codeIcon__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @keystar/ui/icon/icons/codeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/codeIcon/dist/keystar-ui-icon-icons-codeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_italicIcon__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @keystar/ui/icon/icons/italicIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/italicIcon/dist/keystar-ui-icon-icons-italicIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_maximizeIcon__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @keystar/ui/icon/icons/maximizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/maximizeIcon/dist/keystar-ui-icon-icons-maximizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minimizeIcon__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! @keystar/ui/icon/icons/minimizeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minimizeIcon/dist/keystar-ui-icon-icons-minimizeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_removeFormattingIcon__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! @keystar/ui/icon/icons/removeFormattingIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/removeFormattingIcon/dist/keystar-ui-icon-icons-removeFormattingIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_strikethroughIcon__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! @keystar/ui/icon/icons/strikethroughIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/strikethroughIcon/dist/keystar-ui-icon-icons-strikethroughIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_subscriptIcon__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! @keystar/ui/icon/icons/subscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/subscriptIcon/dist/keystar-ui-icon-icons-subscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_superscriptIcon__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! @keystar/ui/icon/icons/superscriptIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/superscriptIcon/dist/keystar-ui-icon-icons-superscriptIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_typeIcon__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! @keystar/ui/icon/icons/typeIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/typeIcon/dist/keystar-ui-icon-icons-typeIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_underlineIcon__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! @keystar/ui/icon/icons/underlineIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/underlineIcon/dist/keystar-ui-icon-icons-underlineIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignLeftIcon__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignLeftIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignLeftIcon/dist/keystar-ui-icon-icons-alignLeftIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignRightIcon__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignRightIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignRightIcon/dist/keystar-ui-icon-icons-alignRightIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_alignCenterIcon__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! @keystar/ui/icon/icons/alignCenterIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/alignCenterIcon/dist/keystar-ui-icon-icons-alignCenterIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_quoteIcon__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @keystar/ui/icon/icons/quoteIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/quoteIcon/dist/keystar-ui-icon-icons-quoteIcon.esm.js\");\n/* harmony import */ var match_sorter__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! match-sorter */ \"(ssr)/./node_modules/.pnpm/match-sorter@6.3.4/node_modules/match-sorter/dist/match-sorter.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_trashIcon__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! @keystar/ui/icon/icons/trashIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/trashIcon/dist/keystar-ui-icon-icons-trashIcon.esm.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_minusIcon__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! @keystar/ui/icon/icons/minusIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/minusIcon/dist/keystar-ui-icon-icons-minusIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_columnsIcon__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! @keystar/ui/icon/icons/columnsIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/columnsIcon/dist/keystar-ui-icon-icons-columnsIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listIcon__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! @keystar/ui/icon/icons/listIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listIcon/dist/keystar-ui-icon-icons-listIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_listOrderedIcon__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! @keystar/ui/icon/icons/listOrderedIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/listOrderedIcon/dist/keystar-ui-icon-icons-listOrderedIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_fileUpIcon__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! @keystar/ui/icon/icons/fileUpIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/fileUpIcon/dist/keystar-ui-icon-icons-fileUpIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_imageIcon__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! @keystar/ui/icon/icons/imageIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/imageIcon/dist/keystar-ui-icon-icons-imageIcon.esm.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! cookie */ \"(ssr)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2Icon__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2Icon/dist/keystar-ui-icon-icons-link2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_link2OffIcon__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! @keystar/ui/icon/icons/link2OffIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/link2OffIcon/dist/keystar-ui-icon-icons-link2OffIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_pencilIcon__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! @keystar/ui/icon/icons/pencilIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/pencilIcon/dist/keystar-ui-icon-icons-pencilIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_undo2Icon__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! @keystar/ui/icon/icons/undo2Icon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/undo2Icon/dist/keystar-ui-icon-icons-undo2Icon.esm.js\");\n/* harmony import */ var _keystar_ui_utils__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! @keystar/ui/utils */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/utils/dist/keystar-ui-utils.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sheetIcon__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! @keystar/ui/icon/icons/sheetIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sheetIcon/dist/keystar-ui-icon-icons-sheetIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_tableIcon__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! @keystar/ui/icon/icons/tableIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/tableIcon/dist/keystar-ui-icon-icons-tableIcon.esm.js\");\n/* harmony import */ var _keystar_ui_listbox__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! @keystar/ui/listbox */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/listbox/dist/keystar-ui-listbox.esm.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! mdast-util-from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-from-markdown@0.8.5/node_modules/mdast-util-from-markdown/index.js\");\n/* harmony import */ var mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__webpack_require__.n(mdast_util_from_markdown__WEBPACK_IMPORTED_MODULE_101__);\n/* harmony import */ var mdast_util_gfm_autolink_literal_from_markdown__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! mdast-util-gfm-autolink-literal/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-autolink-literal@0.1.3/node_modules/mdast-util-gfm-autolink-literal/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_autolink_literal__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! micromark-extension-gfm-autolink-literal */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-autolink-literal@0.5.7/node_modules/micromark-extension-gfm-autolink-literal/index.js\");\n/* harmony import */ var mdast_util_gfm_strikethrough_from_markdown__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! mdast-util-gfm-strikethrough/from-markdown */ \"(ssr)/./node_modules/.pnpm/mdast-util-gfm-strikethrough@0.2.3/node_modules/mdast-util-gfm-strikethrough/from-markdown.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! micromark-extension-gfm-strikethrough */ \"(ssr)/./node_modules/.pnpm/micromark-extension-gfm-strikethrough@0.6.5/node_modules/micromark-extension-gfm-strikethrough/index.js\");\n/* harmony import */ var micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_105___default = /*#__PURE__*/__webpack_require__.n(micromark_extension_gfm_strikethrough__WEBPACK_IMPORTED_MODULE_105__);\n/* harmony import */ var _keystar_ui_nav_list__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! @keystar/ui/nav-list */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/nav-list/dist/keystar-ui-nav-list.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_logOutIcon__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! @keystar/ui/icon/icons/logOutIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/logOutIcon/dist/keystar-ui-icon-icons-logOutIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_gitForkIcon__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! @keystar/ui/icon/icons/gitForkIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/gitForkIcon/dist/keystar-ui-icon-icons-gitForkIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_monitorIcon__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! @keystar/ui/icon/icons/monitorIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/monitorIcon/dist/keystar-ui-icon-icons-monitorIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_moonIcon__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! @keystar/ui/icon/icons/moonIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/moonIcon/dist/keystar-ui-icon-icons-moonIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_sunIcon__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! @keystar/ui/icon/icons/sunIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/sunIcon/dist/keystar-ui-icon-icons-sunIcon.esm.js\");\n/* harmony import */ var _keystar_ui_icon_icons_userIcon__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! @keystar/ui/icon/icons/userIcon */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/icon/icons/userIcon/dist/keystar-ui-icon-icons-userIcon.esm.js\");\n/* harmony import */ var _keystar_ui_radio__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! @keystar/ui/radio */ \"(ssr)/./node_modules/.pnpm/@keystar+ui@0.4.9_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystar/ui/radio/dist/keystar-ui-radio.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// the collator enables language-sensitive string comparison\nconst collator = new Intl.Collator(undefined, {\n  sensitivity: 'base'\n});\n\n/**\n * Creates a comparison function that should be provided to the `sort()` method\n * of your data array.\n */\nfunction sortByDescriptor(sortDescriptor) {\n  const key = sortDescriptor.column;\n  (0,emery__WEBPACK_IMPORTED_MODULE_18__.assert)(key != null, '`sortDescriptor.column` is required');\n  return (a, b) => {\n    const valueA = a[key];\n    const valueB = b[key];\n    const modifier = sortDescriptor.direction === 'ascending' ? 1 : -1;\n\n    // always push `null` and `undefined` to the bottom\n    if (valueA == null) return 1;\n    if (valueB == null) return -1;\n\n    // the collator is only appropriate for strings, it fails in subtle\n    // ways for floats, dates, etc.\n    if (typeof valueA === 'string' && typeof valueB === 'string') {\n      return collator.compare(valueA, valueB) * modifier;\n    }\n    return compare(valueA, valueB) * modifier;\n  };\n}\n\n/** Default comparison for non-string values */\nfunction compare(a, b) {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}\n\nfunction EmptyState(props) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    direction: \"column\",\n    gap: \"large\",\n    justifyContent: \"center\",\n    minHeight: \"scale.3000\",\n    paddingX: {\n      mobile: 'medium',\n      tablet: 'xlarge',\n      desktop: 'xxlarge'\n    },\n    children: 'children' in props ? props.children : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n      children: [props.icon && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n        src: props.icon,\n        size: \"large\",\n        color: \"neutralEmphasis\"\n      }), props.title && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        align: \"center\",\n        size: \"medium\",\n        children: props.title\n      }), props.message && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        align: \"center\",\n        children: props.message\n      }), props.actions]\n    })\n  });\n}\n\nclass NotFoundError extends Error {\n  constructor() {\n    super('Not found');\n    this.name = 'NotFoundError';\n  }\n}\nfunction isNotFoundError(err) {\n  return typeof err === 'object' && err !== null && err instanceof NotFoundError;\n}\nfunction notFound() {\n  throw new NotFoundError();\n}\nclass NotFoundErrorBoundaryInner extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notFound: false,\n      lastHref: props.href\n    };\n  }\n  static getDerivedStateFromError(err) {\n    if (isNotFoundError(err)) {\n      return {\n        notFound: true\n      };\n    }\n    throw err;\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (props.href !== state.lastHref && state.notFound) {\n      return {\n        notFound: false,\n        lastHref: props.href\n      };\n    }\n    return {\n      notFound: state.notFound,\n      lastHref: props.href\n    };\n  }\n  render() {\n    if (this.state.notFound) return this.props.fallback;\n    return this.props.children;\n  }\n}\nfunction NotFoundBoundary(props) {\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(NotFoundErrorBoundaryInner, {\n    ...props,\n    href: router.href\n  });\n}\n\nfunction CollectionPage(props) {\n  var _config$collections;\n  const {\n    collection,\n    config\n  } = props;\n  const containerWidth = 'none'; // TODO: use a \"large\" when we have more columns\n  const collectionConfig = (_config$collections = config.collections) === null || _config$collections === void 0 ? void 0 : _config$collections[collection];\n  if (!collectionConfig) notFound();\n  const [searchTerm, setSearchTerm] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  let debouncedSearchTerm = useDebouncedValue(searchTerm, 300);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n    containerWidth: containerWidth,\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CollectionPageHeader, {\n      collectionLabel: collectionConfig.label,\n      createHref: `${props.basePath}/collection/${encodeURIComponent(props.collection)}/create`,\n      searchTerm: searchTerm,\n      onSearchTermChange: setSearchTerm\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CollectionPageContent, {\n      searchTerm: debouncedSearchTerm,\n      ...props\n    })]\n  });\n}\nfunction CollectionPageHeader(props) {\n  const {\n    collectionLabel,\n    createHref\n  } = props;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const isAboveMobile = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.useMediaQuery)(_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.above.mobile);\n  const [searchVisible, setSearchVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(isAboveMobile);\n  const searchRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setSearchVisible(isAboveMobile);\n  }, [isAboveMobile]);\n\n  // entries are presented in a virtualized table view, so we replace the\n  // default (e.g. ctrl+f) browser search behaviour\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const listener = event => {\n      // bail if the search field is already focused; let users invoke the\n      // browser search if they need to\n      if (document.activeElement === searchRef.current) {\n        return;\n      }\n      if ((0,is_hotkey__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('mod+f', event)) {\n        var _searchRef$current;\n        event.preventDefault();\n        (_searchRef$current = searchRef.current) === null || _searchRef$current === void 0 || _searchRef$current.select();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n      elementType: \"h1\",\n      id: \"page-title\",\n      size: \"small\",\n      flex: true,\n      minWidth: 0,\n      children: collectionLabel\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"div\", {\n      role: \"search\",\n      style: {\n        display: searchVisible ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_search_field__WEBPACK_IMPORTED_MODULE_14__.SearchField, {\n        ref: searchRef,\n        \"aria-label\": stringFormatter.format('search') // TODO: l10n \"Search {collection}\"?\n        ,\n        onChange: props.onSearchTermChange,\n        onClear: () => {\n          props.onSearchTermChange('');\n          if (!isAboveMobile) {\n            // the timeout ensures that the \"add\" button isn't pressed\n            setTimeout(() => {\n              setSearchVisible(false);\n            }, 250);\n          }\n        },\n        onBlur: () => {\n          if (!isAboveMobile && props.searchTerm === '') {\n            setSearchVisible(false);\n          }\n        },\n        placeholder: stringFormatter.format('search'),\n        value: props.searchTerm,\n        width: \"scale.2400\"\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n      \"aria-label\": \"show search\",\n      isHidden: searchVisible || {\n        above: 'mobile'\n      },\n      onPress: () => {\n        setSearchVisible(true);\n        // NOTE: this hack is to force the search field to focus, and invoke\n        // the software keyboard on mobile safari\n        let tempInput = document.createElement('input');\n        tempInput.style.position = 'absolute';\n        tempInput.style.opacity = '0';\n        document.body.appendChild(tempInput);\n        tempInput.focus();\n        setTimeout(() => {\n          var _searchRef$current2;\n          (_searchRef$current2 = searchRef.current) === null || _searchRef$current2 === void 0 || _searchRef$current2.focus();\n          tempInput.remove();\n        }, 0);\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n        src: _keystar_ui_icon_icons_searchIcon__WEBPACK_IMPORTED_MODULE_10__.searchIcon\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n      marginStart: \"auto\",\n      prominence: \"high\",\n      href: createHref,\n      isHidden: searchVisible ? {\n        below: 'tablet'\n      } : undefined,\n      children: stringFormatter.format('add')\n    })]\n  });\n}\nfunction CollectionPageContent(props) {\n  const trees = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.b)();\n  const tree = trees.merged.kind === 'loaded' ? trees.merged.data.current.entries.get((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.g)(props.config, props.collection)) : null;\n  if (trees.merged.kind === 'error') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n      icon: _keystar_ui_icon_icons_alertCircleIcon__WEBPACK_IMPORTED_MODULE_8__.alertCircleIcon,\n      title: \"Unable to load collection\",\n      message: trees.merged.error.message,\n      actions: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n        tone: \"accent\",\n        href: props.basePath,\n        children: \"Dashboard\"\n      })\n    });\n  }\n  if (trees.merged.kind === 'loading') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n        \"aria-label\": \"Loading Entries\",\n        isIndeterminate: true,\n        size: \"large\"\n      })\n    });\n  }\n  if (!tree) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n      icon: _keystar_ui_icon_icons_listXIcon__WEBPACK_IMPORTED_MODULE_9__.listXIcon,\n      title: \"Empty collection\",\n      message: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n        children: [\"There aren't any entries yet.\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__.TextLink, {\n          href: `${props.basePath}/collection/${encodeURIComponent(props.collection)}/create`,\n          children: \"Create the first entry\"\n        }), ' ', \"to see it here.\"]\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CollectionTable, {\n    ...props,\n    trees: trees.merged.data\n  });\n}\nfunction CollectionTable(props) {\n  let {\n    searchTerm\n  } = props;\n  let {\n    currentBranch,\n    defaultBranch\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.c)();\n  let isLocalMode = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.i)(props.config);\n  let router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  let [sortDescriptor, setSortDescriptor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    column: 'name',\n    direction: 'ascending'\n  });\n  let hideStatusColumn = isLocalMode || currentBranch === defaultBranch;\n  const entriesWithStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const defaultEntries = new Map((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.d)(props.config, props.collection, props.trees.default.tree).map(x => [x.slug, x.key]));\n    return (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.d)(props.config, props.collection, props.trees.current.tree).map(entry => {\n      return {\n        name: entry.slug,\n        status: defaultEntries.has(entry.slug) ? defaultEntries.get(entry.slug) === entry.key ? 'Unchanged' : 'Changed' : 'Added'\n      };\n    });\n  }, [props.collection, props.config, props.trees]);\n  const filteredItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return entriesWithStatus.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [entriesWithStatus, searchTerm]);\n  const sortedItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return [...filteredItems].sort(sortByDescriptor(sortDescriptor));\n  }, [filteredItems, sortDescriptor]);\n  const columns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return hideStatusColumn ? [{\n      name: 'Name',\n      key: 'name'\n    }] : [{\n      name: 'Name',\n      key: 'name'\n    }, {\n      name: 'Status',\n      key: 'status',\n      minWidth: 140,\n      width: '20%'\n    }];\n  }, [hideStatusColumn]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.TableView, {\n    \"aria-labelledby\": \"page-title\",\n    selectionMode: \"none\",\n    onSortChange: setSortDescriptor,\n    sortDescriptor: sortDescriptor,\n    density: \"spacious\",\n    overflowMode: \"truncate\",\n    prominence: \"low\",\n    onRowAction: key => {\n      router.push(getItemPath(props.basePath, props.collection, key));\n    },\n    renderEmptyState: () => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n      icon: _keystar_ui_icon_icons_searchXIcon__WEBPACK_IMPORTED_MODULE_11__.searchXIcon,\n      title: \"No results\",\n      message: `No items matching \"${searchTerm}\" were found.`\n    }),\n    flex: true,\n    marginTop: {\n      tablet: 'large'\n    },\n    marginBottom: {\n      mobile: 'regular',\n      tablet: 'xlarge'\n    },\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.css)({\n      marginInline: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.regular,\n      [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.above.mobile]: {\n        marginInline: `calc(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.xlarge} - ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.medium})`\n      },\n      [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.above.tablet]: {\n        marginInline: `calc(${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.xxlarge} - ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.medium})`\n      },\n      '[role=rowheader]': {\n        cursor: 'pointer'\n      }\n    }),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.TableHeader, {\n      columns: columns,\n      children: ({\n        name,\n        key,\n        ...options\n      }) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Column, {\n        isRowHeader: true,\n        allowsSorting: true,\n        ...options,\n        children: name\n      }, key)\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.TableBody, {\n      items: sortedItems,\n      children: item => hideStatusColumn ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Row, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Cell, {\n          textValue: item.name,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            weight: \"medium\",\n            children: item.name\n          })\n        })\n      }, item.name) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Row, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Cell, {\n          textValue: item.name,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            weight: \"medium\",\n            children: item.name\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_table__WEBPACK_IMPORTED_MODULE_17__.Cell, {\n          textValue: item.status,\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_status_light__WEBPACK_IMPORTED_MODULE_15__.StatusLight, {\n            tone: statusTones[item.status],\n            children: item.status\n          })\n        })]\n      }, item.name)\n    })]\n  });\n}\nfunction getItemPath(basePath, collection, key) {\n  return `${basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(key)}`;\n}\nfunction useDebouncedValue(value, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\nconst statusTones = {\n  Added: 'positive',\n  Changed: 'accent',\n  Unchanged: 'neutral'\n};\n\nconst AppSlugContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nconst AppSlugProvider = AppSlugContext.Provider;\nfunction InstallGitHubApp(props) {\n  var _URL$searchParams$get;\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const appSlugFromContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppSlugContext);\n  const appSlug = (_URL$searchParams$get = new URL(router.href, 'https://example.com').searchParams.get('slug')) !== null && _URL$searchParams$get !== void 0 ? _URL$searchParams$get : appSlugFromContext === null || appSlugFromContext === void 0 ? void 0 : appSlugFromContext.value;\n  const parsedRepo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.p)(props.config.storage.repo);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    direction: \"column\",\n    gap: \"regular\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      alignItems: \"end\",\n      gap: \"regular\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_26__.TextField, {\n        label: \"Repo Name\",\n        width: \"100%\",\n        isReadOnly: true,\n        value: parsedRepo.name\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n        onPress: () => {\n          navigator.clipboard.writeText(parsedRepo.name);\n        },\n        children: \"Copy Repo Name\"\n      })]\n    }), appSlug ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n      prominence: \"high\",\n      href: `https://github.com/apps/${appSlug}/installations/new`,\n      children: \"Install GitHub App\"\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n      tone: \"caution\",\n      children: appSlugFromContext ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: [\"The \", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n          children: appSlugFromContext.envName\n        }), \" environment variable wasn't provided so we can't link to the GitHub app installation page. You should find the App on GitHub and add the repo yourself.\"]\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"Find the App on GitHub and add the repo.\"\n      })\n    })]\n  });\n}\n\nfunction ForkRepoDialog(props) {\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const client = (0,urql__WEBPACK_IMPORTED_MODULE_115__.useClient)();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    kind: 'idle'\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const listener = async event => {\n      if (event.key === 'ks-refetch-installations' && event.newValue === 'true') {\n        localStorage.removeItem('ks-refetch-installations');\n        try {\n          var _res$data;\n          const auth = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.e)(props.config);\n          if (!auth) throw new Error('Unauthorized');\n          const res = await client.query(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.G, (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.p)(props.config.storage.repo)).toPromise();\n          if ((_res$data = res.data) !== null && _res$data !== void 0 && (_res$data = _res$data.repository) !== null && _res$data !== void 0 && (_res$data = _res$data.forks.nodes) !== null && _res$data !== void 0 && _res$data.some(x => (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'ADMIN' || (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'WRITE' || (x === null || x === void 0 ? void 0 : x.viewerPermission) === 'MAINTAIN')) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n            props.onCreate();\n          }\n        } catch (err) {\n          setState({\n            kind: 'error',\n            error: err\n          });\n        }\n      }\n    };\n    addEventListener('storage', listener);\n    return () => removeEventListener('storage', listener);\n  }, [client, props]);\n  const appSlug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppSlugContext);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.Dialog, {\n    size: \"small\",\n    isDismissable: true,\n    onDismiss: () => {\n      props.onDismiss();\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n      children: \"Fork Repo\"\n    }), state.kind === 'error' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_34__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n          tone: \"critical\",\n          children: state.error.message\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ButtonGroup, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          onPress: props.onDismiss,\n          children: stringFormatter.format('cancel')\n        })\n      })]\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_34__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          marginBottom: \"large\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: \"You don't have permission to write to this repo so to save your changes, you need to fork the repo.\"\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: [\"To start,\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__.TextLink, {\n              href: `https://github.com/${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.s)(props.config.storage.repo)}/fork`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"fork the repo on GitHub\"\n            }), \". Then, come back to this page and\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__.TextLink, {\n              href: `https://github.com/apps/${appSlug === null || appSlug === void 0 ? void 0 : appSlug.value}/installations/new?state=close`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"install the Keystatic GitHub App on your fork.\"\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\n\nclass TrackedMap extends Map {\n  #onGet;\n  constructor(onGet, entries) {\n    super(entries);\n    this.#onGet = onGet;\n  }\n  get(key) {\n    this.#onGet(key);\n    return super.get(key);\n  }\n}\nfunction parseEntry(args, files) {\n  const dataFilepath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(args.dirpath, args.format);\n  const data = files.get(dataFilepath);\n  if (!data) {\n    throw new Error(`Could not find data file at ${dataFilepath}`);\n  }\n  const {\n    loaded,\n    extraFakeFile\n  } = (0,_dist_required_files_f12cd7f9_node_esm_js__WEBPACK_IMPORTED_MODULE_52__.l)(data, args.format);\n  const filesWithFakeFile = new Map(files);\n  if (extraFakeFile) {\n    filesWithFakeFile.set(`${args.dirpath}/${extraFakeFile.path}`, extraFakeFile.contents);\n  }\n  const usedFiles = new Set([dataFilepath]);\n  const rootSchema = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(args.schema);\n  let initialState;\n  const getFile = filepath => {\n    usedFiles.add(filepath);\n    return filesWithFakeFile.get(filepath);\n  };\n  try {\n    initialState = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.h)(rootSchema, loaded, [], [], (schema, value, path, pathWithArrayFieldSlugs) => {\n      var _args$slug;\n      if (path.length === 1 && path[0] === ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.field)) {\n        if (schema.formKind !== 'slug') {\n          throw new Error(`slugField is not a slug field`);\n        }\n        return schema.parse(value, {\n          slug: args.slug.slug\n        });\n      }\n      if (schema.formKind === 'asset') {\n        var _args$slug2, _args$slug3, _args$slug4;\n        const suggestedFilenamePrefix = pathWithArrayFieldSlugs.join('/');\n        const filepath = schema.filename(value, {\n          suggestedFilenamePrefix,\n          slug: (_args$slug2 = args.slug) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.slug\n        });\n        const asset = filepath ? getFile(`${schema.directory ? `${schema.directory}${((_args$slug3 = args.slug) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.slug) === undefined ? '' : `/${args.slug.slug}`}` : args.dirpath}/${filepath}`) : undefined;\n        return schema.parse(value, {\n          asset,\n          slug: (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.slug\n        });\n      }\n      if (schema.formKind === 'content') {\n        var _args$slug7;\n        const rootPath = `${args.dirpath}/${pathWithArrayFieldSlugs.join('/')}`;\n        const mainFilepath = rootPath + schema.contentExtension;\n        const mainContents = getFile(mainFilepath);\n        const otherFiles = new TrackedMap(key => {\n          usedFiles.add(`${rootPath}/${key}`);\n        });\n        const otherDirectories = new Map();\n        for (const [filename] of filesWithFakeFile) {\n          if (filename.startsWith(rootPath + '/')) {\n            const relativePath = filename.slice(rootPath.length + 1);\n            otherFiles.set(relativePath, filesWithFakeFile.get(filename));\n          }\n        }\n        for (const dir of (_schema$directories = schema.directories) !== null && _schema$directories !== void 0 ? _schema$directories : []) {\n          var _schema$directories, _args$slug5, _args$slug6;\n          const dirFiles = new TrackedMap(relativePath => usedFiles.add(start + relativePath));\n          const start = `${dir}${((_args$slug5 = args.slug) === null || _args$slug5 === void 0 ? void 0 : _args$slug5.slug) === undefined ? '' : `/${(_args$slug6 = args.slug) === null || _args$slug6 === void 0 ? void 0 : _args$slug6.slug}`}/`;\n          for (const [filename, val] of filesWithFakeFile) {\n            if (filename.startsWith(start)) {\n              const relativePath = filename.slice(start.length);\n              dirFiles.set(relativePath, val);\n            }\n          }\n          if (dirFiles.size) {\n            otherDirectories.set(dir, dirFiles);\n          }\n        }\n        return schema.parse(value, {\n          content: mainContents,\n          other: otherFiles,\n          external: otherDirectories,\n          slug: (_args$slug7 = args.slug) === null || _args$slug7 === void 0 ? void 0 : _args$slug7.slug\n        });\n      }\n      return schema.parse(value, undefined);\n    }, false);\n  } catch (err) {\n    throw (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.t)(err);\n  }\n  if (extraFakeFile) {\n    usedFiles.delete(`${args.dirpath}/${extraFakeFile.path}`);\n  }\n  return {\n    initialState,\n    initialFiles: [...usedFiles]\n  };\n}\nfunction getAllFilesInTree(tree) {\n  return [...tree.values()].flatMap(val => val.children ? getAllFilesInTree(val.children) : [val.entry]);\n}\nfunction useItemData(args) {\n  var _args$slug9;\n  const {\n    current: currentBranch\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.b)();\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const isRepoPrivate = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.k)();\n  const branchInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.c)();\n  const rootTree = currentBranch.kind === 'loaded' ? currentBranch.data.tree : undefined;\n  const locationsForTreeKey = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    var _args$slug8;\n    return (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.m)((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(args.schema), args.dirpath, (_args$slug8 = args.slug) === null || _args$slug8 === void 0 ? void 0 : _args$slug8.slug, args.format);\n  }, [args.dirpath, args.format, args.schema, (_args$slug9 = args.slug) === null || _args$slug9 === void 0 ? void 0 : _args$slug9.slug]);\n  const localTreeKey = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.n)(locationsForTreeKey, rootTree !== null && rootTree !== void 0 ? rootTree : new Map()), [locationsForTreeKey, rootTree]);\n  const tree = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return rootTree !== null && rootTree !== void 0 ? rootTree : new Map();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [localTreeKey, locationsForTreeKey]);\n  const hasLoaded = currentBranch.kind === 'loaded';\n  return (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.q)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _getTreeNodeAtPath;\n    if (!hasLoaded) return _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.L;\n    const dataFilepathSha = (_getTreeNodeAtPath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.r)(tree, (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(args.dirpath, args.format))) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.entry.sha;\n    if (dataFilepathSha === undefined) {\n      return 'not-found';\n    }\n    const _args = {\n      config: args.config,\n      dirpath: args.dirpath,\n      format: args.format,\n      schema: args.schema,\n      slug: args.slug\n    };\n    const allBlobs = locationsForTreeKey.flatMap(dir => {\n      const node = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.r)(tree, dir);\n      if (!node) return [];\n      return node.children ? getAllFilesInTree(node.children) : [node.entry];\n    }).map(entry => {\n      const blob = fetchBlob(args.config, entry.sha, entry.path, baseCommit, isRepoPrivate, {\n        owner: branchInfo.mainOwner,\n        name: branchInfo.mainRepo\n      });\n      if (blob instanceof Uint8Array) {\n        return [entry.path, blob];\n      }\n      return blob.then(blob => [entry.path, blob]);\n    });\n    if (allBlobs.every(x => Array.isArray(x))) {\n      const {\n        initialFiles,\n        initialState\n      } = parseEntry(_args, new Map(allBlobs));\n      return {\n        initialState,\n        initialFiles,\n        localTreeKey\n      };\n    }\n    return Promise.all(allBlobs).then(async data => {\n      const {\n        initialState,\n        initialFiles\n      } = parseEntry(_args, new Map(data));\n      return {\n        initialState,\n        initialFiles,\n        localTreeKey\n      };\n    });\n  }, [hasLoaded, tree, args.dirpath, args.format, args.config, args.schema, args.slug, locationsForTreeKey, baseCommit, isRepoPrivate, branchInfo.mainOwner, branchInfo.mainRepo, localTreeKey]));\n}\nconst blobCache = new lru_cache__WEBPACK_IMPORTED_MODULE_116__[\"default\"]({\n  max: 200\n});\nasync function hydrateBlobCache(contents) {\n  const sha = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.w)(contents);\n  blobCache.set(sha, contents);\n  return sha;\n}\nasync function fetchGitHubBlob(config, oid, filepath, commitSha, isRepoPrivate, repo) {\n  if (!isRepoPrivate) {\n    var _getPathPrefix;\n    return fetch(`https://raw.githubusercontent.com/${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.s)(repo)}/${commitSha}/${(_getPathPrefix = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${filepath}`);\n  }\n  const auth = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.e)(config);\n  return fetch(config.storage.kind === 'github' ? `https://api.github.com/repos/${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.s)(config.storage.repo)}/git/blobs/${oid}` : `${_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.K}/v1/github/blob/${oid}`, {\n    headers: {\n      Authorization: `Bearer ${auth.accessToken}`,\n      Accept: 'application/vnd.github.raw',\n      ...(config.storage.kind === 'cloud' ? _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.y : {})\n    }\n  });\n}\nfunction fetchBlob(config, oid, filepath, commitSha, isRepoPrivate, repo) {\n  if (blobCache.has(oid)) return blobCache.get(oid);\n  const promise = ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(config) || config.storage.kind === 'cloud' ? fetchGitHubBlob(config, oid, filepath, commitSha, isRepoPrivate, repo) : fetch(`/api/keystatic/blob/${oid}/${filepath}`, {\n    headers: {\n      'no-cors': '1'\n    }\n  })).then(x => x.arrayBuffer()).then(x => {\n    const array = new Uint8Array(x);\n    blobCache.set(oid, array);\n    return array;\n  }).catch(err => {\n    blobCache.delete(oid);\n    throw err;\n  });\n  blobCache.set(oid, promise);\n  return promise;\n}\n\n(0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.injectGlobal)({\n  body: {\n    overflow: 'hidden'\n  }\n});\nfunction createUrqlClient(config) {\n  const repo = config.storage.kind === 'github' ? (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.p)(config.storage.repo) : {\n    owner: 'repo-owner',\n    name: 'repo-name'\n  };\n  return (0,urql__WEBPACK_IMPORTED_MODULE_117__.createClient)({\n    url: config.storage.kind === 'github' ? 'https://api.github.com/graphql' : `${_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.K}/v1/github/graphql`,\n    requestPolicy: 'cache-and-network',\n    exchanges: [(0,_urql_exchange_auth__WEBPACK_IMPORTED_MODULE_118__.authExchange)(async utils => {\n      let authState = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.e)(config);\n      return {\n        addAuthToOperation(operation) {\n          authState = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.A)(config);\n          if (!authState) {\n            return operation;\n          }\n          return utils.appendHeaders(operation, {\n            Authorization: `Bearer ${authState.accessToken}`,\n            ...(config.storage.kind === 'cloud' ? _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.y : {})\n          });\n        },\n        didAuthError() {\n          return false;\n        },\n        willAuthError(operation) {\n          var _operation$query$defi;\n          authState = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.A)(config);\n          if (operation.query.definitions[0].kind === 'OperationDefinition' && (_operation$query$defi = operation.query.definitions[0].name) !== null && _operation$query$defi !== void 0 && _operation$query$defi.value.includes('AppShell') && !authState) {\n            if (config.storage.kind === 'github') {\n              window.location.href = '/api/keystatic/github/login';\n            } else {\n              (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.B)('', config);\n            }\n            return true;\n          }\n          if (!authState) {\n            return true;\n          }\n          return false;\n        },\n        async refreshAuth() {\n          authState = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.e)(config);\n        }\n      };\n    }), (0,_urql_exchange_graphcache__WEBPACK_IMPORTED_MODULE_119__.cacheExchange)({\n      updates: {\n        Mutation: {\n          createRef(result, args, cache, _info) {\n            cache.updateQuery({\n              query: config.storage.kind === 'github' ? _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.G : _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.C,\n              variables: repo\n            }, data => {\n              var _data$repository;\n              if (data !== null && data !== void 0 && (_data$repository = data.repository) !== null && _data$repository !== void 0 && (_data$repository = _data$repository.refs) !== null && _data$repository !== void 0 && _data$repository.nodes && result.createRef && typeof result.createRef === 'object' && 'ref' in result.createRef) {\n                return {\n                  ...data,\n                  repository: {\n                    ...data.repository,\n                    refs: {\n                      ...data.repository.refs,\n                      nodes: [...data.repository.refs.nodes, result.createRef.ref]\n                    }\n                  }\n                };\n              }\n              return data;\n            });\n          },\n          deleteRef(result, args, cache, _info) {\n            cache.updateQuery({\n              query: config.storage.kind === 'github' ? _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.G : _dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.C,\n              variables: repo\n            }, data => {\n              var _data$repository2;\n              if (data !== null && data !== void 0 && (_data$repository2 = data.repository) !== null && _data$repository2 !== void 0 && (_data$repository2 = _data$repository2.refs) !== null && _data$repository2 !== void 0 && _data$repository2.nodes && result.deleteRef && typeof result.deleteRef === 'object' && '__typename' in result.deleteRef && typeof args.input === 'object' && args.input !== null && 'refId' in args.input && typeof args.input.refId === 'string') {\n                const refId = args.input.refId;\n                return {\n                  ...data,\n                  repository: {\n                    ...data.repository,\n                    refs: {\n                      ...data.repository.refs,\n                      nodes: data.repository.refs.nodes.filter(x => (x === null || x === void 0 ? void 0 : x.id) !== refId)\n                    }\n                  }\n                };\n              }\n              return data;\n            });\n          }\n        }\n      }\n    }), ...(config.storage.kind === 'github' ? [] : [(0,_urql_exchange_persisted__WEBPACK_IMPORTED_MODULE_120__.persistedExchange)({\n      enableForMutation: true,\n      enforcePersistedQueries: true\n    })]), urql__WEBPACK_IMPORTED_MODULE_117__.fetchExchange]\n  });\n}\nfunction Provider({\n  children,\n  config\n}) {\n  const themeContext = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.z)();\n  const {\n    push: navigate\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const keystarRouter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    navigate\n  }), [navigate]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.T, {\n    value: themeContext,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_core__WEBPACK_IMPORTED_MODULE_53__.KeystarProvider, {\n      locale: config.locale || 'en-US',\n      colorScheme: themeContext.theme,\n      router: keystarRouter,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_core__WEBPACK_IMPORTED_MODULE_53__.ClientSideOnlyDocumentElement, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"link\", {\n        href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\",\n        rel: \"stylesheet\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(urql__WEBPACK_IMPORTED_MODULE_115__.Provider, {\n        value: (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => createUrqlClient(config), [config]),\n        children: children\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_toast__WEBPACK_IMPORTED_MODULE_24__.Toaster, {})]\n    })\n  });\n}\n\nconst textEncoder = new TextEncoder();\nconst frontmatterSplit = textEncoder.encode('---\\n');\nfunction combineFrontmatterAndContents(frontmatter, contents) {\n  const array = new Uint8Array(frontmatter.byteLength + contents.byteLength + frontmatterSplit.byteLength * 2);\n  array.set(frontmatterSplit);\n  array.set(frontmatter, frontmatterSplit.byteLength);\n  array.set(frontmatterSplit, frontmatterSplit.byteLength + frontmatter.byteLength);\n  array.set(contents, frontmatterSplit.byteLength * 2 + frontmatter.byteLength);\n  return array;\n}\nfunction serializeEntryToFiles(args) {\n  var _args$slug, _args$slug2;\n  let {\n    value: stateWithExtraFilesRemoved,\n    extraFiles\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.D)(args.state, (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(args.schema), (_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.field, (_args$slug2 = args.slug) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.value, true);\n  const dataFormat = args.format.data;\n  let dataContent = textEncoder.encode(dataFormat === 'json' ? JSON.stringify(stateWithExtraFilesRemoved, null, 2) + '\\n' : (0,js_yaml__WEBPACK_IMPORTED_MODULE_51__.dump)(stateWithExtraFilesRemoved));\n  if (args.format.contentField) {\n    const filename = `${args.format.contentField.key}${args.format.contentField.config.contentExtension}`;\n    let contents;\n    extraFiles = extraFiles.filter(x => {\n      if (x.path !== filename) return true;\n      contents = x.contents;\n      return false;\n    });\n    (0,emery__WEBPACK_IMPORTED_MODULE_18__.assert)(contents !== undefined, 'Expected content field to be present');\n    dataContent = combineFrontmatterAndContents(dataContent, contents);\n  }\n  return [{\n    path: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(args.basePath, args.format),\n    contents: dataContent\n  }, ...extraFiles.map(file => ({\n    path: `${file.parent ? args.slug ? `${file.parent}/${args.slug.value}` : file.parent : args.basePath}/${file.path}`,\n    contents: file.contents\n  }))];\n}\nfunction useUpsertItem(args) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    kind: 'idle'\n  });\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const branchInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.E);\n  const setTreeSha = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.F)();\n  const [, mutate] = (0,urql__WEBPACK_IMPORTED_MODULE_115__.useMutation)(createCommitMutation);\n  const repoWithWriteAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.R);\n  const appSlug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppSlugContext);\n  const unscopedTreeData = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.H)();\n  return [state, async override => {\n    try {\n      var _getPathPrefix, _args$initialFiles;\n      const unscopedTree = unscopedTreeData.kind === 'loaded' ? unscopedTreeData.data.tree : undefined;\n      if (!unscopedTree) return false;\n      if (repoWithWriteAccess === null && args.config.storage.kind === 'github' && appSlug !== null && appSlug !== void 0 && appSlug.value) {\n        setState({\n          kind: 'needs-fork'\n        });\n        return false;\n      }\n      setState({\n        kind: 'loading'\n      });\n      const pathPrefix = (_getPathPrefix = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(args.config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : '';\n      let additions = serializeEntryToFiles({\n        basePath: args.basePath,\n        config: args.config,\n        schema: args.schema,\n        format: args.format,\n        state: args.state,\n        slug: args.slug\n      }).map(addition => ({\n        ...addition,\n        path: pathPrefix + addition.path\n      }));\n      const additionPathToSha = new Map(await Promise.all(additions.map(async addition => [addition.path, await hydrateBlobCache(addition.contents)])));\n      const filesToDelete = new Set((_args$initialFiles = args.initialFiles) === null || _args$initialFiles === void 0 ? void 0 : _args$initialFiles.map(x => pathPrefix + x));\n      for (const file of additions) {\n        filesToDelete.delete(file.path);\n      }\n      additions = additions.filter(addition => {\n        const sha = additionPathToSha.get(addition.path);\n        const existing = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.r)(unscopedTree, addition.path);\n        return (existing === null || existing === void 0 ? void 0 : existing.entry.sha) !== sha;\n      });\n      const deletions = [...filesToDelete].map(path => ({\n        path\n      }));\n      const updatedTree = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.I)(unscopedTree, {\n        additions,\n        deletions: [...filesToDelete]\n      });\n      await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.J)(updatedTree.entries);\n      if (args.config.storage.kind === 'github' || args.config.storage.kind === 'cloud') {\n        var _override$branch, _override$sha, _result$error, _result$data;\n        const branch = {\n          branchName: (_override$branch = override === null || override === void 0 ? void 0 : override.branch) !== null && _override$branch !== void 0 ? _override$branch : branchInfo.currentBranch,\n          repositoryNameWithOwner: `${repoWithWriteAccess.owner}/${repoWithWriteAccess.name}`\n        };\n        const runMutation = expectedHeadOid => mutate({\n          input: {\n            branch,\n            expectedHeadOid,\n            message: {\n              headline: `Update ${args.basePath}`\n            },\n            fileChanges: {\n              additions: additions.map(addition => ({\n                ...addition,\n                contents: (0,js_base64__WEBPACK_IMPORTED_MODULE_121__.fromUint8Array)(addition.contents)\n              })),\n              deletions\n            }\n          }\n        });\n        let result = await runMutation((_override$sha = override === null || override === void 0 ? void 0 : override.sha) !== null && _override$sha !== void 0 ? _override$sha : baseCommit);\n        const gqlError = (_result$error = result.error) === null || _result$error === void 0 || (_result$error = _result$error.graphQLErrors[0]) === null || _result$error === void 0 ? void 0 : _result$error.originalError;\n        if (gqlError && 'type' in gqlError) {\n          if (gqlError.type === 'BRANCH_PROTECTION_RULE_VIOLATION') {\n            setState({\n              kind: 'needs-new-branch',\n              reason: 'Changes must be made via pull request to this branch. Create a new branch to save changes.'\n            });\n            return false;\n          }\n          if (gqlError.type === 'STALE_DATA') {\n            var _refData$data, _args$slug3;\n            // we don't want this to go into the cache yet\n            // so we create a new client just for this\n            const refData = await createUrqlClient(args.config).query(FetchRef, {\n              owner: repoWithWriteAccess.owner,\n              name: repoWithWriteAccess.name,\n              ref: `refs/heads/${branchInfo.currentBranch}`\n            }).toPromise();\n            if (!((_refData$data = refData.data) !== null && _refData$data !== void 0 && (_refData$data = _refData$data.repository) !== null && _refData$data !== void 0 && (_refData$data = _refData$data.ref) !== null && _refData$data !== void 0 && _refData$data.target)) {\n              throw new Error('Branch not found');\n            }\n            const tree = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.M)(await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.N)(refData.data.repository.ref.target.oid, args.config), args.config);\n            const treeKey = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.n)((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.m)((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(args.schema), args.basePath, (_args$slug3 = args.slug) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.value, args.format), tree.tree);\n            if (treeKey === args.currentLocalTreeKey) {\n              result = await runMutation(refData.data.repository.ref.target.oid);\n            } else {\n              setState({\n                kind: 'needs-new-branch',\n                reason: 'This entry has been updated since it was opened. Create a new branch to save changes.'\n              });\n              return false;\n            }\n          }\n        }\n        if (result.error) {\n          throw result.error;\n        }\n        const target = (_result$data = result.data) === null || _result$data === void 0 || (_result$data = _result$data.createCommitOnBranch) === null || _result$data === void 0 || (_result$data = _result$data.ref) === null || _result$data === void 0 ? void 0 : _result$data.target;\n        if (target) {\n          setState({\n            kind: 'updated'\n          });\n          return true;\n        }\n        throw new Error('Failed to update');\n      } else {\n        const res = await fetch('/api/keystatic/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'no-cors': '1'\n          },\n          body: JSON.stringify({\n            additions: additions.map(addition => ({\n              ...addition,\n              contents: (0,js_base64__WEBPACK_IMPORTED_MODULE_121__.fromUint8Array)(addition.contents)\n            })),\n            deletions\n          })\n        });\n        if (!res.ok) {\n          throw new Error(await res.text());\n        }\n        const newTree = await res.json();\n        const {\n          tree\n        } = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.J)(newTree);\n        setTreeSha(await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.O)(tree));\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      }\n    } catch (err) {\n      setState({\n        kind: 'error',\n        error: err\n      });\n      return false;\n    }\n  }, () => {\n    setState({\n      kind: 'idle'\n    });\n  }];\n}\nconst createCommitMutation = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_45__.gql)`\n  mutation CreateCommit($input: CreateCommitOnBranchInput!) {\n    createCommitOnBranch(input: $input) {\n      ref {\n        id\n        target {\n          id\n          oid\n          ... on Commit {\n            tree {\n              id\n              oid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nfunction useDeleteItem(args) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    kind: 'idle'\n  });\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const branchInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.E);\n  const [, mutate] = (0,urql__WEBPACK_IMPORTED_MODULE_115__.useMutation)(createCommitMutation);\n  const setTreeSha = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.F)();\n  const repoWithWriteAccess = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.R);\n  const appSlug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppSlugContext);\n  const unscopedTreeData = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.H)();\n  return [state, async () => {\n    try {\n      const unscopedTree = unscopedTreeData.kind === 'loaded' ? unscopedTreeData.data.tree : undefined;\n      if (!unscopedTree) return false;\n      if (repoWithWriteAccess === null && args.storage.kind === 'github' && appSlug !== null && appSlug !== void 0 && appSlug.value) {\n        setState({\n          kind: 'needs-fork'\n        });\n        return false;\n      }\n      setState({\n        kind: 'loading'\n      });\n      const deletions = args.initialFiles.map(x => {\n        var _getPathPrefix2;\n        return ((_getPathPrefix2 = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(args.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : '') + x;\n      });\n      const updatedTree = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.I)(unscopedTree, {\n        additions: [],\n        deletions\n      });\n      await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.J)(updatedTree.entries);\n      if (args.storage.kind === 'github' || args.storage.kind === 'cloud') {\n        const {\n          error\n        } = await mutate({\n          input: {\n            branch: {\n              repositoryNameWithOwner: `${repoWithWriteAccess.owner}/${repoWithWriteAccess.name}`,\n              branchName: branchInfo.currentBranch\n            },\n            message: {\n              headline: `Delete ${args.basePath}`\n            },\n            expectedHeadOid: baseCommit,\n            fileChanges: {\n              deletions: deletions.map(path => ({\n                path\n              }))\n            }\n          }\n        });\n        if (error) {\n          throw error;\n        }\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      } else {\n        const res = await fetch('/api/keystatic/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'no-cors': '1'\n          },\n          body: JSON.stringify({\n            additions: [],\n            deletions: deletions.map(path => ({\n              path\n            }))\n          })\n        });\n        if (!res.ok) {\n          throw new Error(await res.text());\n        }\n        const newTree = await res.json();\n        const {\n          tree\n        } = await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.J)(newTree);\n        setTreeSha(await (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.O)(tree));\n        setState({\n          kind: 'updated'\n        });\n        return true;\n      }\n    } catch (err) {\n      setState({\n        kind: 'error',\n        error: err\n      });\n    }\n  }, () => {\n    setState({\n      kind: 'idle'\n    });\n  }];\n}\nconst FetchRef = (0,_ts_gql_tag_no_transform__WEBPACK_IMPORTED_MODULE_45__.gql)`\n  query FetchRef($owner: String!, $name: String!, $ref: String!) {\n    repository(owner: $owner, name: $name) {\n      id\n      ref(qualifiedName: $ref) {\n        id\n        target {\n          id\n          oid\n        }\n      }\n    }\n  }\n`;\n\nfunction useHasChanged(args) {\n  const serialize = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(state => {\n    const slug = args.slugField ? (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)({\n      schema: args.schema.fields,\n      slugField: args.slugField\n    }, state) : undefined;\n    return {\n      slug,\n      state: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.D)(state, args.schema, args.slugField, slug, true)\n    };\n  }, [args.schema, args.slugField]);\n  const initialFilesForUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => args.initialState === null ? null : serialize(args.initialState), [args.initialState, serialize]);\n  const filesForUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => serialize(args.state), [serialize, args.state]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return !fast_deep_equal__WEBPACK_IMPORTED_MODULE_54___default()(initialFilesForUpdate, filesForUpdate);\n  }, [initialFilesForUpdate, filesForUpdate]);\n}\n\nfunction useSlugFieldInfo(collection, slugToExclude) {\n  const config = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.S)();\n  const allSlugs = (0,_dist_useSlugsInCollection_b967166d_node_esm_js__WEBPACK_IMPORTED_MODULE_55__.u)(collection);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const slugs = new Set(allSlugs);\n    if (slugToExclude) {\n      slugs.delete(slugToExclude);\n    }\n    const collectionConfig = config.collections[collection];\n    return {\n      field: collectionConfig.slugField,\n      slugs,\n      glob: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.U)(config, collection)\n    };\n  }, [allSlugs, collection, config, slugToExclude]);\n}\n\nconst units = {\n  seconds: 60,\n  minutes: 60,\n  hours: 24,\n  days: 7,\n  weeks: 4,\n  months: 12,\n  years: Infinity\n};\nfunction formatTimeAgo(targetDate, currentDate, formatter) {\n  let duration = (targetDate.getTime() - currentDate.getTime()) / 1000;\n  for (const [name, amount] of Object.entries(units)) {\n    if (Math.abs(duration) < amount) {\n      return formatter.format(Math.round(duration), name);\n    }\n    duration /= amount;\n  }\n  return 'unknown';\n}\nfunction RelativeTime(props) {\n  const {\n    locale\n  } = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocale)();\n  const [now] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new Date());\n  const formatted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const formatter = new Intl.RelativeTimeFormat(locale);\n    formatter.format(props.date.getTime() - now.getTime(), 'second');\n    return formatTimeAgo(props.date, now, formatter);\n  }, [locale, now, props.date]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"time\", {\n    dateTime: props.date.toISOString(),\n    children: formatted\n  });\n}\nfunction showDraftRestoredToast(savedAt, hasChangedSince) {\n  _keystar_ui_toast__WEBPACK_IMPORTED_MODULE_24__.toastQueue.info( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n    children: [\"Restored draft from \", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(RelativeTime, {\n      date: savedAt\n    }), \".\", ' ', hasChangedSince && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      color: \"accent\",\n      children: \"Other changes have been made to this entry since the draft. You may want to discard the draft changes.\"\n    })]\n  }), {\n    timeout: 8000\n  });\n}\nlet store;\nfunction getStore() {\n  if (!store) {\n    store = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_122__.createStore)('keystatic', 'items');\n  }\n  return store;\n}\n// the as anys are because the indexeddb types dont't accept readonly arrays\n\nfunction setDraft(key, val) {\n  return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_122__.set)(key, val, getStore());\n}\nfunction delDraft(key) {\n  return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_122__.del)(key, getStore());\n}\nfunction getDraft(key) {\n  return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_122__.get)(key, getStore());\n}\n\nconst storedValSchema$2 = zod__WEBPACK_IMPORTED_MODULE_123__.z.object({\n  version: zod__WEBPACK_IMPORTED_MODULE_123__.z.literal(1),\n  savedAt: zod__WEBPACK_IMPORTED_MODULE_123__.z.date(),\n  slug: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  beforeTreeKey: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  files: zod__WEBPACK_IMPORTED_MODULE_123__.z.map(zod__WEBPACK_IMPORTED_MODULE_123__.z.string(), zod__WEBPACK_IMPORTED_MODULE_123__.z.instanceof(Uint8Array))\n});\nfunction ItemPage(props) {\n  var _draft$state, _getPathPrefix, _getPathPrefix2;\n  const {\n    collection,\n    config,\n    itemSlug,\n    initialFiles,\n    initialState,\n    localTreeKey,\n    draft\n  } = props;\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const collectionConfig = config.collections[collection];\n  const schema = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(collectionConfig.schema), [collectionConfig.schema]);\n  const [{\n    state,\n    localTreeKey: localTreeKeyInState\n  }, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    state: (_draft$state = draft === null || draft === void 0 ? void 0 : draft.state) !== null && _draft$state !== void 0 ? _draft$state : initialState,\n    localTreeKey\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (draft && state === draft.state) {\n      showDraftRestoredToast(draft.savedAt, localTreeKey !== draft.treeKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draft]);\n  if (localTreeKeyInState !== localTreeKey) {\n    setState({\n      state: initialState,\n      localTreeKey\n    });\n  }\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Z)(schema, stateUpdater => {\n    setState(state => ({\n      localTreeKey: state.localTreeKey,\n      state: stateUpdater(state.state)\n    }));\n  }, () => undefined), [schema])(state);\n  const hasChanged = useHasChanged({\n    initialState,\n    schema,\n    state,\n    slugField: collectionConfig.slugField\n  });\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n  const formatInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.V)(config, collection);\n  const currentBasePath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(config, collection, itemSlug);\n  const futureBasePath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(config, collection, slug);\n  const branchInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.c)();\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: collectionConfig.schema,\n    basePath: futureBasePath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const key = ['collection', collection, props.itemSlug];\n    if (hasChanged) {\n      const serialized = serializeEntryToFiles({\n        basePath: futureBasePath,\n        config,\n        format: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.V)(config, collection),\n        schema: collectionConfig.schema,\n        slug: {\n          field: collectionConfig.slugField,\n          value: slug\n        },\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        beforeTreeKey: localTreeKey,\n        slug,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [collection, collectionConfig, config, futureBasePath, localTreeKey, props.itemSlug, slug, state, hasChanged]);\n  const update = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__._)(_update);\n  const [deleteResult, deleteItem, resetDeleteItem] = useDeleteItem({\n    initialFiles,\n    storage: config.storage,\n    basePath: currentBasePath\n  });\n  const onReset = () => {\n    setState({\n      state: initialState,\n      localTreeKey\n    });\n  };\n  const viewHref = config.storage.kind !== 'local' ? `${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.$)(branchInfo)}${formatInfo.dataLocation === 'index' ? `/tree/${branchInfo.currentBranch}/${(_getPathPrefix = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${currentBasePath}` : `/blob/${branchInfo.currentBranch}/${(_getPathPrefix2 = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(config.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : ''}${currentBasePath}${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a0)(formatInfo)}`}` : undefined;\n  const previewHref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return collectionConfig.previewUrl ? collectionConfig.previewUrl.replace('{slug}', props.itemSlug).replace('{branch}', branchInfo.currentBranch) : undefined;\n  }, [branchInfo.currentBranch, collectionConfig.previewUrl, props.itemSlug]);\n  const onDelete = async () => {\n    if (await deleteItem()) {\n      router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}`);\n    }\n  };\n  const onDuplicate = async () => {\n    let hasUpdated = true;\n    if (hasChanged) {\n      hasUpdated = await onUpdate();\n    }\n    if (hasUpdated) {\n      router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}/create?duplicate=${slug}`);\n    }\n  };\n  const slugInfo = useSlugFieldInfo(collection, itemSlug);\n  const isSavingDisabled = updateResult.kind === 'loading' || !hasChanged;\n  const onUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    if (isSavingDisabled) return false;\n    if (!(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a1)(schema, state, slugInfo)) {\n      setForceValidation(true);\n      return false;\n    }\n    const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n    const hasUpdated = await update();\n    if (hasUpdated && slug !== itemSlug) {\n      router.replace(`${props.basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(slug)}`);\n    }\n    return hasUpdated;\n  }, [collection, collectionConfig, isSavingDisabled, itemSlug, props.basePath, router, schema, slugInfo, state, update]);\n  const formID = 'item-edit-form';\n\n  // allow shortcuts \"cmd+s\" and \"ctrl+s\" to save\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const listener = event => {\n      if (updateResult.kind === 'loading') {\n        return;\n      }\n      if ((0,is_hotkey__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('mod+s', event)) {\n        event.preventDefault();\n        onUpdate();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, [updateResult.kind, onUpdate]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(ItemPageShell, {\n      headerActions: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(HeaderActions, {\n        formID: formID,\n        isLoading: updateResult.kind === 'loading',\n        hasChanged: hasChanged,\n        onDelete: onDelete,\n        onDuplicate: onDuplicate,\n        onReset: onReset,\n        viewHref: viewHref,\n        previewHref: previewHref\n      }),\n      ...props,\n      children: [updateResult.kind === 'error' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n        tone: \"critical\",\n        children: updateResult.error.message\n      }), deleteResult.kind === 'error' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n        tone: \"critical\",\n        children: deleteResult.error.message\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Box, {\n        id: formID,\n        height: \"100%\",\n        minHeight: 0,\n        minWidth: 0,\n        elementType: \"form\",\n        onSubmit: event => {\n          if (event.target !== event.currentTarget) return;\n          event.preventDefault();\n          onUpdate();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a2, {\n          previewProps: previewProps,\n          forceValidation: forceValidation,\n          entryLayout: collectionConfig.entryLayout,\n          formatInfo: formatInfo,\n          slugField: slugInfo\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger wouldn't work since\n      // this doesn't open on click but after doing a network request and it failing and manually wiring about a popover and modal would be a pain\n      , {\n        onDismiss: resetUpdateItem,\n        children: updateResult.kind === 'needs-new-branch' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreateBranchDuringUpdateDialog, {\n          branchOid: baseCommit,\n          onCreate: async newBranch => {\n            const itemBasePath = `/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(collection)}/item/`;\n            router.push(itemBasePath + encodeURIComponent(itemSlug));\n            const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n            const hasUpdated = await update({\n              branch: newBranch,\n              sha: baseCommit\n            });\n            if (hasUpdated && slug !== itemSlug) {\n              router.replace(itemBasePath + encodeURIComponent(slug));\n            }\n          },\n          reason: updateResult.reason,\n          onDismiss: resetUpdateItem\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: resetUpdateItem,\n        children: updateResult.kind === 'needs-fork' && (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(props.config) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ForkRepoDialog, {\n          onCreate: async () => {\n            const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n            const hasUpdated = await update();\n            if (hasUpdated && slug !== itemSlug) {\n              router.replace(`${props.basePath}/collection/${encodeURIComponent(collection)}/item/${encodeURIComponent(slug)}`);\n            }\n          },\n          onDismiss: resetUpdateItem,\n          config: props.config\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: resetDeleteItem,\n        children: deleteResult.kind === 'needs-fork' && (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(props.config) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ForkRepoDialog, {\n          onCreate: async () => {\n            await deleteItem();\n            router.push(`${props.basePath}/collection/${encodeURIComponent(collection)}`);\n          },\n          onDismiss: resetDeleteItem,\n          config: props.config\n        })\n      })]\n    })\n  });\n}\nfunction HeaderActions(props) {\n  let {\n    formID,\n    hasChanged,\n    isLoading,\n    onDelete,\n    onDuplicate,\n    onReset,\n    previewHref,\n    viewHref\n  } = props;\n  const isBelowTablet = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.useMediaQuery)(_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.below.tablet);\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const [deleteAlertIsOpen, setDeleteAlertOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [duplicateAlertIsOpen, setDuplicateAlertOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const menuActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    let items = [{\n      key: 'reset',\n      label: 'Reset changes',\n      // TODO: l10n\n      icon: _keystar_ui_icon_icons_historyIcon__WEBPACK_IMPORTED_MODULE_44__.historyIcon\n    }, {\n      key: 'delete',\n      label: 'Delete entry…',\n      // TODO: l10n\n      icon: _keystar_ui_icon_icons_trash2Icon__WEBPACK_IMPORTED_MODULE_36__.trash2Icon\n    }, {\n      key: 'duplicate',\n      label: 'Duplicate entry…',\n      // TODO: l10n\n      icon: _keystar_ui_icon_icons_copyPlusIcon__WEBPACK_IMPORTED_MODULE_42__.copyPlusIcon\n    }];\n    if (previewHref) {\n      items.push({\n        key: 'preview',\n        label: 'Preview',\n        icon: _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_43__.externalLinkIcon,\n        href: previewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    if (viewHref) {\n      items.push({\n        key: 'view',\n        label: 'View on GitHub',\n        icon: _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_4__.githubIcon,\n        href: viewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    return items;\n  }, [previewHref, viewHref]);\n  const indicatorElement = (() => {\n    if (isLoading) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n        \"aria-label\": \"Saving changes\",\n        isIndeterminate: true,\n        size: \"small\",\n        alignSelf: \"center\"\n      });\n    }\n    if (hasChanged) {\n      return isBelowTablet ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Box, {\n        backgroundColor: \"pendingEmphasis\",\n        height: \"scale.75\",\n        width: \"scale.75\",\n        borderRadius: \"full\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n          visuallyHidden: true,\n          children: \"Unsaved\"\n        })\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_badge__WEBPACK_IMPORTED_MODULE_41__.Badge, {\n        tone: \"pending\",\n        children: \"Unsaved\"\n      });\n    }\n    return null;\n  })();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n    children: [indicatorElement, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_40__.ActionGroup, {\n      buttonLabelBehavior: \"hide\",\n      overflowMode: \"collapse\",\n      prominence: \"low\",\n      density: \"compact\",\n      maxWidth: isBelowTablet ? 'element.regular' : undefined // force switch to action menu on small devices\n      ,\n      items: menuActions,\n      disabledKeys: hasChanged ? [] : ['reset'],\n      onAction: key => {\n        switch (key) {\n          case 'reset':\n            onReset();\n            break;\n          case 'delete':\n            setDeleteAlertOpen(true);\n            break;\n          case 'duplicate':\n            if (hasChanged) {\n              setDuplicateAlertOpen(true);\n            } else {\n              onDuplicate();\n            }\n            break;\n        }\n      },\n      children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Item, {\n        textValue: item.label,\n        href: item.href,\n        target: item.target,\n        rel: item.rel,\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          src: item.icon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n          children: item.label\n        })]\n      }, item.key)\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n      form: formID,\n      isDisabled: isLoading,\n      prominence: \"high\",\n      type: \"submit\",\n      children: stringFormatter.format('save')\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer, {\n      onDismiss: () => setDeleteAlertOpen(false),\n      children: deleteAlertIsOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.AlertDialog, {\n        title: \"Delete entry\",\n        tone: \"critical\",\n        cancelLabel: \"Cancel\",\n        primaryActionLabel: \"Yes, delete\",\n        autoFocusButton: \"cancel\",\n        onPrimaryAction: onDelete,\n        children: \"Are you sure? This action cannot be undone.\"\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer, {\n      onDismiss: () => setDuplicateAlertOpen(false),\n      children: duplicateAlertIsOpen && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.AlertDialog, {\n        title: \"Save and duplicate entry\",\n        tone: \"neutral\",\n        cancelLabel: \"Cancel\",\n        primaryActionLabel: \"Save and duplicate\",\n        autoFocusButton: \"primary\",\n        onPrimaryAction: onDuplicate,\n        children: \"You have unsaved changes. Save this entry to duplicate it.\"\n      })\n    })]\n  });\n}\nfunction CreateBranchDuringUpdateDialog(props) {\n  var _data$createRef;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const repositoryId = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a3)();\n  const [branchName, setBranchName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [{\n    error,\n    fetching,\n    data\n  }, createBranch] = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a4)();\n  const isLoading = fetching || !!(data !== null && data !== void 0 && (_data$createRef = data.createRef) !== null && _data$createRef !== void 0 && _data$createRef.__typename);\n  const config = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.S)();\n  const branchPrefix = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a5)(config);\n  const propsForBranchPrefix = branchPrefix ? {\n    UNSAFE_className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.css)({\n      '& input': {\n        paddingInlineStart: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.xsmall\n      }\n    }),\n    startElement: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      alignItems: \"center\",\n      paddingStart: \"regular\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        color: \"neutralSecondary\",\n        children: branchPrefix\n      })\n    })\n  } : {};\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.Dialog, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(\"form\", {\n      style: {\n        display: 'contents'\n      },\n      onSubmit: async event => {\n        var _result$data;\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        const fullBranchName = (branchPrefix !== null && branchPrefix !== void 0 ? branchPrefix : '') + branchName;\n        const name = `refs/heads/${fullBranchName}`;\n        const result = await createBranch({\n          input: {\n            name,\n            oid: props.branchOid,\n            repositoryId\n          }\n        });\n        if ((_result$data = result.data) !== null && _result$data !== void 0 && (_result$data = _result$data.createRef) !== null && _result$data !== void 0 && _result$data.__typename) {\n          props.onCreate(fullBranchName);\n        }\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        children: stringFormatter.format('newBranch')\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_slots__WEBPACK_IMPORTED_MODULE_34__.Content, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n          gap: \"large\",\n          direction: \"column\",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_26__.TextField, {\n            value: branchName,\n            onChange: setBranchName,\n            label: \"Branch name\",\n            description: props.reason,\n            autoFocus: true,\n            errorMessage: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a6)(error),\n            ...propsForBranchPrefix\n          })\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ButtonGroup, {\n        children: [isLoading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n          isIndeterminate: true,\n          size: \"small\",\n          \"aria-label\": \"Creating Branch\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          isDisabled: isLoading,\n          onPress: props.onDismiss,\n          children: stringFormatter.format('cancel')\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          isDisabled: isLoading,\n          prominence: \"high\",\n          type: \"submit\",\n          children: \"Create branch and save\"\n        })]\n      })]\n    })\n  });\n}\nfunction ItemPageWrapper(props) {\n  var _props$config$collect;\n  const collectionConfig = (_props$config$collect = props.config.collections) === null || _props$config$collect === void 0 ? void 0 : _props$config$collect[props.collection];\n  if (!collectionConfig) notFound();\n  const format = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.V)(props.config, props.collection), [props.config, props.collection]);\n  const slugInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return {\n      slug: props.itemSlug,\n      field: collectionConfig.slugField\n    };\n  }, [collectionConfig.slugField, props.itemSlug]);\n  const draftData = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.q)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const raw = await getDraft(['collection', props.collection, props.itemSlug]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema$2.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(props.config, props.collection, stored.slug),\n      format,\n      schema: collectionConfig.schema,\n      slug: {\n        field: collectionConfig.slugField,\n        slug: stored.slug\n      }\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt,\n      treeKey: stored.beforeTreeKey\n    };\n  }, [collectionConfig, format, props.collection, props.config, props.itemSlug]));\n  const itemData = useItemData({\n    config: props.config,\n    dirpath: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(props.config, props.collection, props.itemSlug),\n    schema: collectionConfig.schema,\n    format,\n    slug: slugInfo\n  });\n  if (itemData.kind === 'error') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n          tone: \"critical\",\n          children: itemData.error.message\n        })\n      })\n    });\n  }\n  if (itemData.kind === 'loading' || draftData.kind === 'loading') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"scale.3000\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n          \"aria-label\": \"Loading Item\",\n          isIndeterminate: true,\n          size: \"large\"\n        })\n      })\n    });\n  }\n  if (itemData.data === 'not-found') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ItemPageShell, {\n      ...props,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n          tone: \"caution\",\n          children: \"Entry not found.\"\n        })\n      })\n    });\n  }\n  const loadedDraft = draftData.kind === 'loaded' ? draftData.data : undefined;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ItemPage, {\n    collection: props.collection,\n    basePath: props.basePath,\n    config: props.config,\n    itemSlug: props.itemSlug,\n    initialState: itemData.data.initialState,\n    initialFiles: itemData.data.initialFiles,\n    draft: loadedDraft,\n    localTreeKey: itemData.data.localTreeKey\n  });\n}\nconst ItemPageShell = props => {\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const collectionConfig = props.config.collections[props.collection];\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n    containerWidth: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Y)(collectionConfig),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Breadcrumbs, {\n        flex: true,\n        size: \"medium\",\n        minWidth: 0,\n        onAction: key => {\n          if (key === 'collection') {\n            router.push(`${props.basePath}/collection/${encodeURIComponent(props.collection)}`);\n          }\n        },\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Item, {\n          children: collectionConfig.label\n        }, \"collection\"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Item, {\n          children: props.itemSlug\n        }, \"item\")]\n      }), props.headerActions]\n    }), props.children]\n  });\n};\n\nfunction CreateItemWrapper(props) {\n  var _props$config$collect;\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const duplicateSlug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const url = new URL(router.href, 'http://localhost');\n    return url.searchParams.get('duplicate');\n  }, [router.href]);\n  const collectionConfig = (_props$config$collect = props.config.collections) === null || _props$config$collect === void 0 ? void 0 : _props$config$collect[props.collection];\n  if (!collectionConfig) notFound();\n  const format = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.V)(props.config, props.collection), [props.config, props.collection]);\n  const draftData = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.q)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const raw = await getDraft(['collection-create', props.collection, ...(duplicateSlug ? [duplicateSlug] : [])]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema$1.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(props.config, props.collection, stored.slug),\n      format,\n      schema: collectionConfig.schema,\n      slug: {\n        field: collectionConfig.slugField,\n        slug: stored.slug\n      }\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt\n    };\n  }, [collectionConfig, duplicateSlug, format, props.collection, props.config]));\n  const slug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (duplicateSlug) {\n      return {\n        field: collectionConfig.slugField,\n        slug: duplicateSlug\n      };\n    }\n  }, [duplicateSlug, collectionConfig.slugField]);\n  const itemData = useItemData({\n    config: props.config,\n    dirpath: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(props.config, props.collection, duplicateSlug !== null && duplicateSlug !== void 0 ? duplicateSlug : ''),\n    schema: collectionConfig.schema,\n    format,\n    slug\n  });\n  const duplicateInitalState = duplicateSlug && itemData.kind === 'loaded' && itemData.data !== 'not-found' ? itemData.data.initialState : undefined;\n  const duplicateInitalStateWithUpdatedSlug = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (duplicateInitalState) {\n      let slugFieldValue = duplicateInitalState[collectionConfig.slugField];\n      // we'll make a best effort to add something to the slug after duplicated so it's different\n      // but if it fails a user can change it before creating\n      // (e.g. potentially it's not just a text field so appending -copy might not work)\n      try {\n        const slugFieldSchema = collectionConfig.schema[collectionConfig.slugField];\n        if (slugFieldSchema.kind !== 'form' || slugFieldSchema.formKind !== 'slug') {\n          throw new Error('not slug field');\n        }\n        const serialized = slugFieldSchema.serializeWithSlug(slugFieldValue);\n        slugFieldValue = slugFieldSchema.parse(serialized.value, {\n          slug: `${serialized.slug}-copy`\n        });\n      } catch {}\n      return {\n        ...duplicateInitalState,\n        [collectionConfig.slugField]: slugFieldValue\n      };\n    }\n  }, [collectionConfig.schema, collectionConfig.slugField, duplicateInitalState]);\n  if (duplicateSlug && itemData.kind === 'error') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n        tone: \"critical\",\n        children: itemData.error.message\n      })\n    });\n  }\n  if (duplicateSlug && itemData.kind === 'loading' || draftData.kind === 'loading') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"scale.3000\",\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n        \"aria-label\": \"Loading Item\",\n        isIndeterminate: true,\n        size: \"large\"\n      })\n    });\n  }\n  if (duplicateSlug && itemData.kind === 'loaded' && itemData.data === 'not-found') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n        tone: \"caution\",\n        children: \"Entry not found.\"\n      })\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreateItem, {\n    collection: props.collection,\n    config: props.config,\n    basePath: props.basePath,\n    draft: draftData.kind === 'loaded' ? draftData.data : undefined,\n    duplicateSlug: duplicateSlug,\n    initialState: duplicateInitalStateWithUpdatedSlug\n  });\n}\nconst storedValSchema$1 = zod__WEBPACK_IMPORTED_MODULE_123__.z.object({\n  version: zod__WEBPACK_IMPORTED_MODULE_123__.z.literal(1),\n  savedAt: zod__WEBPACK_IMPORTED_MODULE_123__.z.date(),\n  slug: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  files: zod__WEBPACK_IMPORTED_MODULE_123__.z.map(zod__WEBPACK_IMPORTED_MODULE_123__.z.string(), zod__WEBPACK_IMPORTED_MODULE_123__.z.instanceof(Uint8Array))\n});\nfunction CreateItem(props) {\n  var _props$config$collect2, _props$draft$state, _props$draft;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const collectionConfig = (_props$config$collect2 = props.config.collections) === null || _props$config$collect2 === void 0 ? void 0 : _props$config$collect2[props.collection];\n  if (!collectionConfig) notFound();\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const schema = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(collectionConfig.schema), [collectionConfig.schema]);\n  const initialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    var _props$initialState;\n    return (_props$initialState = props.initialState) !== null && _props$initialState !== void 0 ? _props$initialState : (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a7)(schema);\n  }, [props.initialState, schema]);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_props$draft$state = (_props$draft = props.draft) === null || _props$draft === void 0 ? void 0 : _props$draft.state) !== null && _props$draft$state !== void 0 ? _props$draft$state : initialState);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (props.draft && state === props.draft.state) {\n      showDraftRestoredToast(props.draft.savedAt, false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.draft]);\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Z)(schema, setState, () => undefined), [schema])(state);\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n  const formatInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.V)(props.config, props.collection);\n  const basePath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.W)(props.config, props.collection, slug);\n  const [createResult, _createItem, resetCreateItemState] = useUpsertItem({\n    state,\n    basePath,\n    initialFiles: undefined,\n    config: props.config,\n    schema: collectionConfig.schema,\n    format: formatInfo,\n    currentLocalTreeKey: undefined,\n    slug: {\n      field: collectionConfig.slugField,\n      value: slug\n    }\n  });\n  const createItem = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__._)(_createItem);\n  const hasChanged = useHasChanged({\n    initialState,\n    schema,\n    state,\n    slugField: collectionConfig.slugField\n  });\n  const hasCreated = createResult.kind === 'updated' || createResult.kind === 'loading';\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const key = ['collection-create', props.collection, ...(props.duplicateSlug ? [props.duplicateSlug] : [])];\n    if (hasChanged && !hasCreated) {\n      const serialized = serializeEntryToFiles({\n        basePath,\n        config: props.config,\n        format: formatInfo,\n        schema: collectionConfig.schema,\n        slug: {\n          field: collectionConfig.slugField,\n          value: slug\n        },\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        slug,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [collectionConfig, slug, state, hasChanged, props.duplicateSlug, props.collection, props.config, basePath, formatInfo, hasCreated]);\n  let collectionPath = `${props.basePath}/collection/${encodeURIComponent(props.collection)}`;\n  const currentSlug = createResult.kind === 'updated' || createResult.kind === 'loading' ? slug : undefined;\n  const slugInfo = useSlugFieldInfo(props.collection, currentSlug);\n  const onCreate = async () => {\n    if (createResult.kind === 'loading') return;\n    if (!(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a1)(schema, state, slugInfo)) {\n      setForceValidation(true);\n      return;\n    }\n    if (await createItem()) {\n      const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n      router.push(`${collectionPath}/item/${encodeURIComponent(slug)}`);\n      _keystar_ui_toast__WEBPACK_IMPORTED_MODULE_24__.toastQueue.positive('Entry created', {\n        timeout: 5000\n      }); // TODO: l10n\n    }\n  };\n\n  // note we're still \"loading\" when it's already been created\n  // since we're waiting to go to the item page\n  const isLoading = createResult.kind === 'loading' || createResult.kind === 'updated';\n  const formID = 'item-create-form';\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n      containerWidth: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Y)(collectionConfig),\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Breadcrumbs, {\n          size: \"medium\",\n          flex: true,\n          minWidth: 0,\n          onAction: key => {\n            if (key === 'collection') {\n              router.push(collectionPath);\n            }\n          },\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Item, {\n            children: collectionConfig.label\n          }, \"collection\"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_breadcrumbs__WEBPACK_IMPORTED_MODULE_21__.Item, {\n            children: stringFormatter.format('add')\n          }, \"current\")]\n        }), isLoading && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n          \"aria-label\": \"Creating entry\",\n          isIndeterminate: true,\n          size: \"small\"\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_38__.TooltipTrigger, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n            prominence: \"low\",\n            \"aria-label\": \"Reset\",\n            onPress: () => {\n              setState(initialState);\n              setForceValidation(false);\n            },\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n              src: _keystar_ui_icon_icons_historyIcon__WEBPACK_IMPORTED_MODULE_44__.historyIcon\n            })\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_tooltip__WEBPACK_IMPORTED_MODULE_38__.Tooltip, {\n            children: \"Reset\"\n          })]\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          isDisabled: isLoading,\n          prominence: \"high\",\n          type: \"submit\",\n          form: formID,\n          marginStart: \"auto\",\n          children: stringFormatter.format('create')\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        id: formID,\n        elementType: \"form\",\n        onSubmit: event => {\n          if (event.target !== event.currentTarget) return;\n          event.preventDefault();\n          onCreate();\n        },\n        direction: \"column\",\n        gap: \"xxlarge\",\n        height: \"100%\",\n        minHeight: 0,\n        minWidth: 0,\n        children: [createResult.kind === 'error' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n          tone: \"critical\",\n          children: createResult.error.message\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a2, {\n          previewProps: previewProps,\n          forceValidation: forceValidation,\n          entryLayout: collectionConfig.entryLayout,\n          formatInfo: formatInfo,\n          slugField: slugInfo\n        })]\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n    // ideally this would be a popover on desktop but using a DialogTrigger\n    // wouldn't work since this doesn't open on click but after doing a\n    // network request and it failing and manually wiring about a popover\n    // and modal would be a pain\n    , {\n      onDismiss: resetCreateItemState,\n      children: createResult.kind === 'needs-new-branch' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreateBranchDuringUpdateDialog, {\n        branchOid: baseCommit,\n        onCreate: async newBranch => {\n          router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(props.collection)}/create`);\n          if (await createItem({\n            branch: newBranch,\n            sha: baseCommit\n          })) {\n            const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n            router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/collection/${encodeURIComponent(props.collection)}/item/${encodeURIComponent(slug)}`);\n          }\n        },\n        reason: createResult.reason,\n        onDismiss: resetCreateItemState\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n    // ideally this would be a popover on desktop but using a DialogTrigger\n    // wouldn't work since this doesn't open on click but after doing a\n    // network request and it failing and manually wiring about a popover\n    // and modal would be a pain\n    , {\n      onDismiss: resetCreateItemState,\n      children: createResult.kind === 'needs-fork' && (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(props.config) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ForkRepoDialog, {\n        onCreate: async () => {\n          if (await createItem()) {\n            const slug = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Q)(collectionConfig, state);\n            router.push(`${collectionPath}/item/${encodeURIComponent(slug)}`);\n          }\n        },\n        onDismiss: resetCreateItemState,\n        config: props.config\n      })\n    })]\n  });\n}\n\nconst DashboardSection = ({\n  children,\n  title\n}) => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    elementType: \"section\",\n    direction: \"column\",\n    gap: \"medium\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      casing: \"uppercase\",\n      color: \"neutralTertiary\",\n      size: \"small\",\n      weight: \"bold\",\n      elementType: \"h2\",\n      children: title\n    }), children]\n  });\n};\nconst FILL_COLS = 'fill';\nconst DashboardGrid = props => {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"div\", {\n    className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.css)({\n      display: 'grid',\n      gap: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.space.large,\n      gridAutoRows: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.element.xlarge,\n      gridTemplateColumns: `[${FILL_COLS}-start] 1fr [${FILL_COLS}-end]`,\n      [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.containerQueries.above.mobile]: {\n        gridTemplateColumns: `[${FILL_COLS}-start] 1fr 1fr [${FILL_COLS}-end]`\n      },\n      [_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.containerQueries.above.tablet]: {\n        gridTemplateColumns: `[${FILL_COLS}-start] 1fr 1fr 1fr [${FILL_COLS}-end]`\n      }\n    }),\n    ...props\n  });\n};\nconst DashboardCard = props => {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const {\n    linkProps\n  } = (0,_keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__.useLink)(props, ref);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    backgroundColor: \"canvas\",\n    padding: \"large\",\n    position: \"relative\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      direction: \"column\",\n      gap: \"medium\",\n      flex: true,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        elementType: \"h3\",\n        size: \"small\",\n        truncate: true,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"a\", {\n          ref: ref,\n          href: props.href,\n          ...linkProps,\n          className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.classNames)((0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.css)({\n            color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.foreground.neutral,\n            outline: 'none',\n            '&:hover': {\n              color: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.foreground.neutralEmphasis,\n              '::before': {\n                backgroundColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.alias.backgroundIdle,\n                borderColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.border.neutral\n              }\n            },\n            '&:active': {\n              '::before': {\n                backgroundColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.alias.backgroundHovered,\n                borderColor: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.alias.borderHovered\n              }\n            },\n            '&:focus-visible::before': {\n              outline: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.alias.focusRing} solid ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.alias.focusRing}`,\n              outlineOffset: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.alias.focusRingGap\n            },\n            // fill the available space so that the card is clickable\n            '::before': {\n              border: `${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.border.regular} solid ${_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.color.border.muted}`,\n              borderRadius: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.size.radius.medium,\n              content: '\"\"',\n              position: 'absolute',\n              inset: 0,\n              transition: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.transition)(['background-color', 'border-color'])\n            }\n          })),\n          children: props.label\n        })\n      }), props.children]\n    }), props.endElement]\n  });\n};\n\nfunction useLocalizedString() {\n  let stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  return stringFormatter;\n}\n\nfunction BranchSection(props) {\n  let branchInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.c)();\n  let router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  let localizedString = useLocalizedString();\n  if ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.i)(props.config)) {\n    return null;\n  }\n  let repoURL = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.$)(branchInfo);\n  let isDefaultBranch = branchInfo.currentBranch === branchInfo.defaultBranch;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(DashboardSection, {\n    title: localizedString.format('currentBranch'),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      alignItems: \"center\",\n      gap: \"regular\",\n      border: \"muted\",\n      borderRadius: \"medium\",\n      backgroundColor: \"canvas\",\n      padding: \"large\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n        src: _keystar_ui_icon_icons_gitBranchIcon__WEBPACK_IMPORTED_MODULE_57__.gitBranchIcon,\n        color: \"neutralTertiary\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        size: \"medium\",\n        weight: \"semibold\",\n        children: branchInfo.currentBranch\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      gap: \"regular\",\n      wrap: true,\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogTrigger, {\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n            src: _keystar_ui_icon_icons_gitBranchPlusIcon__WEBPACK_IMPORTED_MODULE_58__.gitBranchPlusIcon\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: localizedString.format('newBranch')\n          })]\n        }), close => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a8, {\n          onDismiss: close,\n          onCreate: branchName => {\n            close();\n            router.push(router.href.replace(/\\/branch\\/[^/]+/, '/branch/' + encodeURIComponent(branchName)));\n          }\n        })]\n      }), !isDefaultBranch && (branchInfo.pullRequestNumber === undefined ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n        href: `${repoURL}/pull/new/${branchInfo.currentBranch}`,\n        target: \"_blank\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          src: _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_59__.gitPullRequestIcon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n          children: localizedString.format('createPullRequest')\n        })]\n      }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n        href: `${repoURL}/pull/${branchInfo.pullRequestNumber}`,\n        target: \"_blank\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          src: _keystar_ui_icon_icons_gitPullRequestIcon__WEBPACK_IMPORTED_MODULE_59__.gitPullRequestIcon\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n          children: [\"Pull request #\", branchInfo.pullRequestNumber]\n        })]\n      }))]\n    })]\n  });\n}\n\nfunction DashboardCards() {\n  const navItems = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a9)();\n  const hasSections = navItems.some(item => 'children' in item);\n  const items = navItems.map(item => renderItemOrGroup(item));\n  return hasSections ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment, {\n    children: items\n  }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardSection, {\n    title: \"Content\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardGrid, {\n      children: items\n    })\n  });\n}\nlet dividerCount = 0;\nfunction renderItemOrGroup(itemOrGroup) {\n  if ('isDivider' in itemOrGroup) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      gridColumn: FILL_COLS,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Divider, {\n        alignSelf: \"center\",\n        size: \"medium\",\n        width: \"alias.singleLineWidth\"\n      })\n    }, dividerCount++);\n  }\n  if ('children' in itemOrGroup) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardSection, {\n      title: itemOrGroup.title,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardGrid, {\n        children: itemOrGroup.children.map(child => renderItemOrGroup(child))\n      })\n    }, itemOrGroup.title);\n  }\n  let changeElement = (() => {\n    if (!itemOrGroup.changed) {\n      return undefined;\n    }\n    return typeof itemOrGroup.changed === 'number' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_badge__WEBPACK_IMPORTED_MODULE_41__.Badge, {\n      tone: \"accent\",\n      marginStart: \"auto\",\n      children: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aa)(itemOrGroup.changed, {\n        singular: 'change',\n        plural: 'changes'\n      })\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_badge__WEBPACK_IMPORTED_MODULE_41__.Badge, {\n      tone: \"accent\",\n      children: \"Changed\"\n    });\n  })();\n  let endElement = (() => {\n    // entry counts are only available for collections\n    if (typeof itemOrGroup.entryCount !== 'number') {\n      return changeElement;\n    }\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      gap: \"medium\",\n      alignItems: \"center\",\n      children: [changeElement, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.ActionButton, {\n        \"aria-label\": \"Add\",\n        href: `${itemOrGroup.href}/create`,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n          src: _keystar_ui_icon_icons_plusIcon__WEBPACK_IMPORTED_MODULE_60__.plusIcon\n        })\n      })]\n    });\n  })();\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardCard, {\n    label: itemOrGroup.label,\n    href: itemOrGroup.href,\n    endElement: endElement,\n    children: typeof itemOrGroup.entryCount === 'number' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      color: \"neutralSecondary\",\n      children: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aa)(itemOrGroup.entryCount, {\n        singular: 'entry',\n        plural: 'entries'\n      })\n    }) : null\n  }, itemOrGroup.key);\n}\n\nfunction DashboardPage(props) {\n  var _viewer$name;\n  const stringFormatter = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_114__.useLocalizedStringFormatter)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.l);\n  const viewer = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ab)();\n  const cloudInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ac)();\n  const user = viewer ? {\n    name: (_viewer$name = viewer.name) !== null && _viewer$name !== void 0 ? _viewer$name : viewer.login,\n    avatarUrl: viewer.avatarUrl\n  } : cloudInfo === null || cloudInfo === void 0 ? void 0 : cloudInfo.user;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n    containerWidth: \"large\",\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        elementType: \"h1\",\n        id: \"page-title\",\n        size: \"small\",\n        children: stringFormatter.format('dashboard')\n      })\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n      isScrollable: true,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        direction: \"column\",\n        gap: \"xxlarge\",\n        children: [user && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(UserInfo, {\n          user: user,\n          manageAccount: !!cloudInfo\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(BranchSection, {\n          config: props.config\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardCards, {})]\n      })\n    })]\n  });\n}\nfunction UserInfo({\n  user,\n  manageAccount\n}) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    gap: \"medium\",\n    isHidden: {\n      below: 'tablet'\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_avatar__WEBPACK_IMPORTED_MODULE_56__.Avatar, {\n      src: user.avatarUrl,\n      name: user.name,\n      size: \"large\"\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.VStack, {\n      gap: \"medium\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        size: \"medium\",\n        elementType: \"p\",\n        UNSAFE_style: {\n          fontWeight: _keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.tokenSchema.typography.fontWeight.bold\n        },\n        children: [\"Hello, \", user.name, \"!\"]\n      }), manageAccount && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_link__WEBPACK_IMPORTED_MODULE_12__.TextLink, {\n        href: \"https://keystatic.cloud/account\",\n        children: \"Manage Account\"\n      })]\n    })]\n  });\n}\n\nconst MainPanelLayout = props => {\n  let isBelowDesktop = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.useMediaQuery)(_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.below.desktop);\n  let sidebarState = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ad)();\n  let ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  let context = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ae)(ref);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.af, {\n    value: context,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_46__.SplitView, {\n      autoSaveId: \"keystatic-app-split-view\",\n      isCollapsed: isBelowDesktop || !sidebarState.isOpen,\n      onCollapseChange: sidebarState.toggle,\n      defaultSize: 260,\n      minSize: 180,\n      maxSize: 400\n      // styles\n      ,\n      height: \"100vh\",\n      children: [isBelowDesktop ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ag, {}) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_46__.SplitPanePrimary, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ah, {})\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_split_view__WEBPACK_IMPORTED_MODULE_46__.SplitPaneSecondary, {\n        ref: ref,\n        children: props.children\n      })]\n    })\n  });\n};\n\nconst AppShell = props => {\n  const content = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ai.Consumer, {\n    children: error => error && !(error !== null && error !== void 0 && error.graphQLErrors.some(err => {\n      var _err$originalError;\n      return (err === null || err === void 0 || (_err$originalError = err.originalError) === null || _err$originalError === void 0 ? void 0 : _err$originalError.type) === 'NOT_FOUND';\n    })) ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n      icon: _keystar_ui_icon_icons_alertCircleIcon__WEBPACK_IMPORTED_MODULE_8__.alertCircleIcon,\n      title: \"Failed to load shell\",\n      message: error.message\n    }) : props.children\n  });\n  const inner = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aj.Provider, {\n    value: props.config,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ak.Provider, {\n      value: {\n        basePath: props.basePath\n      },\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.al, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(MainPanelLayout, {\n          children: content\n        })\n      })\n    })\n  });\n  if ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(props.config) || props.config.storage.kind === 'cloud') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.am, {\n      currentBranch: props.currentBranch,\n      config: props.config,\n      children: inner\n    });\n  }\n  if ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.i)(props.config)) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.an, {\n      config: props.config,\n      children: inner\n    });\n  }\n  return null;\n};\n\nfunction SingletonPage({\n  singleton,\n  initialFiles,\n  initialState,\n  localTreeKey,\n  config,\n  draft\n}) {\n  var _getPathPrefix, _getPathPrefix2;\n  const [forceValidation, setForceValidation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const singletonConfig = config.singletons[singleton];\n  const schema = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.o)(singletonConfig.schema), [singletonConfig.schema]);\n  const singletonPath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ap)(config, singleton);\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const [{\n    state,\n    localTreeKey: localTreeKeyInState\n  }, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n    var _draft$state;\n    return {\n      localTreeKey: localTreeKey,\n      state: (_draft$state = draft === null || draft === void 0 ? void 0 : draft.state) !== null && _draft$state !== void 0 ? _draft$state : initialState === null ? (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a7)(schema) : initialState\n    };\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (draft && state === draft.state) {\n      showDraftRestoredToast(draft.savedAt, localTreeKey !== draft.treeKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draft]);\n  if (localTreeKeyInState !== localTreeKey) {\n    setState({\n      localTreeKey: localTreeKey,\n      state: initialState === null ? (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a7)(schema) : initialState\n    });\n  }\n  const isCreating = initialState === null;\n  const hasChanged = useHasChanged({\n    initialState,\n    state,\n    schema,\n    slugField: undefined\n  }) || isCreating;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const key = ['singleton', singleton];\n    if (hasChanged) {\n      const serialized = serializeEntryToFiles({\n        basePath: singletonPath,\n        config,\n        format: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ao)(config, singleton),\n        schema: singletonConfig.schema,\n        slug: undefined,\n        state\n      });\n      const files = new Map(serialized.map(x => [x.path, x.contents]));\n      const data = {\n        beforeTreeKey: localTreeKey,\n        files,\n        savedAt: new Date(),\n        version: 1\n      };\n      setDraft(key, data);\n    } else {\n      delDraft(key);\n    }\n  }, [config, localTreeKey, state, hasChanged, singleton, singletonPath, singletonConfig]);\n  const previewProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Z)(schema, stateUpdater => {\n    setState(state => ({\n      localTreeKey: state.localTreeKey,\n      state: stateUpdater(state.state)\n    }));\n  }, () => undefined), [schema])(state);\n  const baseCommit = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.j)();\n  const formatInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ao)(config, singleton);\n  const [updateResult, _update, resetUpdateItem] = useUpsertItem({\n    state,\n    initialFiles,\n    config,\n    schema: singletonConfig.schema,\n    basePath: singletonPath,\n    format: formatInfo,\n    currentLocalTreeKey: localTreeKey,\n    slug: undefined\n  });\n  const update = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__._)(_update);\n  const onCreate = async () => {\n    if (updateResult.kind === 'loading' || !hasChanged) return;\n    if (!(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a1)(schema, state, undefined)) {\n      setForceValidation(true);\n      return;\n    }\n    await update();\n  };\n  const formID = 'singleton-form';\n  const onReset = () => setState({\n    localTreeKey: localTreeKey,\n    state: initialState === null ? (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a7)(schema) : initialState\n  });\n  const isBelowTablet = (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.useMediaQuery)(_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.breakpointQueries.below.tablet);\n  const branchInfo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.c)();\n  const previewHref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!singletonConfig.previewUrl) return undefined;\n    return singletonConfig.previewUrl.replace('{branch}', branchInfo.currentBranch);\n  }, [branchInfo.currentBranch, singletonConfig.previewUrl]);\n  const isGitHub = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(config) || (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aq)(config);\n  const singletonExists = !!initialState;\n  const viewHref = isGitHub && singletonExists ? `${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.$)(branchInfo)}${formatInfo.dataLocation === 'index' ? `/tree/${branchInfo.currentBranch}/${(_getPathPrefix = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(config.storage)) !== null && _getPathPrefix !== void 0 ? _getPathPrefix : ''}${singletonPath}` : `/blob/${(_getPathPrefix2 = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.x)(config.storage)) !== null && _getPathPrefix2 !== void 0 ? _getPathPrefix2 : ''}${branchInfo.currentBranch}/${singletonPath}${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a0)(formatInfo)}`}` : undefined;\n  const menuActions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const actions = [{\n      key: 'reset',\n      label: 'Reset',\n      icon: _keystar_ui_icon_icons_historyIcon__WEBPACK_IMPORTED_MODULE_44__.historyIcon\n    }];\n    if (previewHref) {\n      actions.push({\n        key: 'preview',\n        label: 'Preview',\n        icon: _keystar_ui_icon_icons_externalLinkIcon__WEBPACK_IMPORTED_MODULE_43__.externalLinkIcon,\n        href: previewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    if (viewHref) {\n      actions.push({\n        key: 'view',\n        label: 'View on GitHub',\n        icon: _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_4__.githubIcon,\n        href: viewHref,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      });\n    }\n    return actions;\n  }, [previewHref, viewHref]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n    containerWidth: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.Y)(singletonConfig),\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        flex: true,\n        alignItems: \"center\",\n        gap: \"regular\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n          elementType: \"h1\",\n          id: \"page-title\",\n          size: \"small\",\n          children: singletonConfig.label\n        }), updateResult.kind === 'loading' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n          \"aria-label\": `Updating ${singletonConfig.label}`,\n          isIndeterminate: true,\n          size: \"small\",\n          alignSelf: \"center\"\n        }) : hasChanged && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_badge__WEBPACK_IMPORTED_MODULE_41__.Badge, {\n          tone: \"pending\",\n          children: \"Unsaved\"\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_40__.ActionGroup, {\n        buttonLabelBehavior: \"hide\",\n        overflowMode: \"collapse\",\n        prominence: \"low\",\n        density: \"compact\",\n        maxWidth: isBelowTablet ? 'element.regular' : undefined // force switch to action menu on small devices\n        ,\n        items: menuActions,\n        disabledKeys: hasChanged ? [] : ['reset'],\n        onAction: key => {\n          switch (key) {\n            case 'reset':\n              onReset();\n              break;\n          }\n        },\n        children: item => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_action_group__WEBPACK_IMPORTED_MODULE_40__.Item, {\n          textValue: item.label,\n          href: item.href,\n          target: item.target,\n          rel: item.rel,\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n            src: item.icon\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: item.label\n          })]\n        }, item.key)\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n        form: formID,\n        isDisabled: updateResult.kind === 'loading',\n        prominence: \"high\",\n        type: \"submit\",\n        children: isCreating ? 'Create' : 'Save'\n      })]\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      elementType: \"form\",\n      id: formID,\n      onSubmit: event => {\n        if (event.target !== event.currentTarget) return;\n        event.preventDefault();\n        onCreate();\n      },\n      direction: \"column\",\n      gap: \"xxlarge\",\n      height: \"100%\",\n      minHeight: 0,\n      minWidth: 0,\n      children: [updateResult.kind === 'error' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n        tone: \"critical\",\n        children: updateResult.error.message\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a2, {\n        previewProps: previewProps,\n        forceValidation: forceValidation,\n        entryLayout: singletonConfig.entryLayout,\n        formatInfo: formatInfo,\n        slugField: undefined\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger wouldn't work since\n      // this doesn't open on click but after doing a network request and it failing and manually wiring about a popover and modal would be a pain\n      , {\n        onDismiss: resetUpdateItem,\n        children: updateResult.kind === 'needs-new-branch' && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreateBranchDuringUpdateDialog, {\n          branchOid: baseCommit,\n          onCreate: async newBranch => {\n            router.push(`/keystatic/branch/${encodeURIComponent(newBranch)}/singleton/${encodeURIComponent(singleton)}`);\n            update({\n              branch: newBranch,\n              sha: baseCommit\n            });\n          },\n          reason: updateResult.reason,\n          onDismiss: resetUpdateItem\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_dialog__WEBPACK_IMPORTED_MODULE_22__.DialogContainer\n      // ideally this would be a popover on desktop but using a DialogTrigger\n      // wouldn't work since this doesn't open on click but after doing a\n      // network request and it failing and manually wiring about a popover\n      // and modal would be a pain\n      , {\n        onDismiss: resetUpdateItem,\n        children: updateResult.kind === 'needs-fork' && (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(config) && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ForkRepoDialog, {\n          onCreate: async () => {\n            update();\n          },\n          onDismiss: resetUpdateItem,\n          config: config\n        })\n      })]\n    })]\n  });\n}\nconst storedValSchema = zod__WEBPACK_IMPORTED_MODULE_123__.z.object({\n  version: zod__WEBPACK_IMPORTED_MODULE_123__.z.literal(1),\n  savedAt: zod__WEBPACK_IMPORTED_MODULE_123__.z.date(),\n  beforeTreeKey: zod__WEBPACK_IMPORTED_MODULE_123__.z.string().optional(),\n  files: zod__WEBPACK_IMPORTED_MODULE_123__.z.map(zod__WEBPACK_IMPORTED_MODULE_123__.z.string(), zod__WEBPACK_IMPORTED_MODULE_123__.z.instanceof(Uint8Array))\n});\nfunction SingletonPageWrapper(props) {\n  var _props$config$singlet;\n  const singletonConfig = (_props$config$singlet = props.config.singletons) === null || _props$config$singlet === void 0 ? void 0 : _props$config$singlet[props.singleton];\n  if (!singletonConfig) notFound();\n  const header = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.a, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n      elementType: \"h1\",\n      id: \"page-title\",\n      size: \"small\",\n      children: singletonConfig.label\n    })\n  });\n  const format = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ao)(props.config, props.singleton), [props.config, props.singleton]);\n  const dirpath = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ap)(props.config, props.singleton);\n  const draftData = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.q)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const raw = await getDraft(['singleton', props.singleton]);\n    if (!raw) throw new Error('No draft found');\n    const stored = storedValSchema.parse(raw);\n    const parsed = parseEntry({\n      config: props.config,\n      dirpath,\n      format,\n      schema: singletonConfig.schema,\n      slug: undefined\n    }, stored.files);\n    return {\n      state: parsed.initialState,\n      savedAt: stored.savedAt,\n      treeKey: stored.beforeTreeKey\n    };\n  }, [dirpath, format, props.config, props.singleton, singletonConfig.schema]));\n  const itemData = useItemData({\n    config: props.config,\n    dirpath,\n    schema: singletonConfig.schema,\n    format,\n    slug: undefined\n  });\n  if (itemData.kind === 'error') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n      children: [header, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_notice__WEBPACK_IMPORTED_MODULE_23__.Notice, {\n          margin: \"xxlarge\",\n          tone: \"critical\",\n          children: itemData.error.message\n        })\n      })]\n    });\n  }\n  if (itemData.kind === 'loading' || draftData.kind === 'loading') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n      children: [header, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"scale.3000\",\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n            \"aria-label\": `Loading ${singletonConfig.label}`,\n            isIndeterminate: true,\n            size: \"large\"\n          })\n        })\n      })]\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(SingletonPage, {\n    singleton: props.singleton,\n    config: props.config,\n    initialState: itemData.data === 'not-found' ? null : itemData.data.initialState,\n    initialFiles: itemData.data === 'not-found' ? [] : itemData.data.initialFiles,\n    localTreeKey: itemData.data === 'not-found' ? undefined : itemData.data.localTreeKey,\n    draft: draftData.kind === 'loaded' ? draftData.data : undefined\n  });\n}\n\nfunction CreatedGitHubApp(props) {\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n        children: \"You've installed Keystatic! \\uD83C\\uDF89\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"To start using Keystatic, you need to install the GitHub app you've created.\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: [\"Make sure to add the App to the\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n          children: (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.s)(props.config.storage.repo)\n        }), ' ', \"repository.\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(InstallGitHubApp, {\n        config: props.config\n      })]\n    })\n  });\n}\n\nfunction KeystaticSetup(props) {\n  const [deployedURL, setDeployedURL] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  const [organization, setOrganization] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      elementType: \"form\",\n      action: `https://github.com${organization ? `/organizations/${organization}` : ''}/settings/apps/new`,\n      method: \"post\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n          children: \"Keystatic Setup\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"Keystatic doesn't have the required config.\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"If you've already created your GitHub app, make sure to add the following environment variables:\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Box, {\n        elementType: \"ul\",\n        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"li\", {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n            children: \"KEYSTATIC_GITHUB_CLIENT_ID\"\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"li\", {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n            children: \"KEYSTATIC_GITHUB_CLIENT_SECRET\"\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"li\", {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n            children: \"KEYSTATIC_SECRET\"\n          })\n        })]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"If you haven't created your GitHub app for Keystatic, you can create one below.\"\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_26__.TextField, {\n        label: \"Deployed App URL\",\n        description: \"This should the root of your domain. If you're not sure where Keystatic will be deployed, leave this blank and you can update the GitHub app later.\",\n        value: deployedURL,\n        onChange: setDeployedURL\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_text_field__WEBPACK_IMPORTED_MODULE_26__.TextField, {\n        label: \"GitHub organization (if any)\",\n        description: \"You must be an owner or GitHub App manager in the organization to create the GitHub App. Leave this blank to create the app in your personal account.\",\n        value: organization,\n        onChange: setOrganization\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: [\"After visiting GitHub to create the GitHub app, you'll be redirected back here and secrets generated from GitHub will be written to your\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"code\", {\n          children: \".env\"\n        }), \" file.\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"input\", {\n        type: \"text\",\n        name: \"manifest\",\n        className: (0,_keystar_ui_style__WEBPACK_IMPORTED_MODULE_16__.css)({\n          display: 'none'\n        }),\n        value: JSON.stringify({\n          name: `${(0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.p)(props.config.storage.repo).owner} Keystatic`,\n          url: deployedURL ? `${deployedURL}/keystatic` : `${window.location.origin}/keystatic`,\n          public: true,\n          redirect_url: `${window.location.origin}/api/keystatic/github/created-app`,\n          callback_urls: [`${window.location.origin}/api/keystatic/github/oauth/callback`, `http://127.0.0.1/api/keystatic/github/oauth/callback`, ...(deployedURL ? [`${deployedURL}/api/keystatic/github/oauth/callback`] : [])],\n          request_oauth_on_install: true,\n          default_permissions: {\n            contents: 'write',\n            metadata: 'read',\n            pull_requests: 'read'\n          }\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n        prominence: \"high\",\n        type: \"submit\",\n        children: \"Create GitHub App\"\n      })]\n    })\n  });\n}\n\nfunction RepoNotFound(props) {\n  const repo = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.s)(props.config.storage.repo);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"xxlarge\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n      backgroundColor: \"surface\",\n      padding: \"large\",\n      border: \"color.alias.borderIdle\",\n      borderRadius: \"medium\",\n      direction: \"column\",\n      justifyContent: \"center\",\n      gap: \"xlarge\",\n      maxWidth: \"scale.4600\",\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Heading, {\n          children: \"Repo not found\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: [\"Keystatic is configured for the\", ' ', /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(\"a\", {\n          href: `https://github.com/${repo}`,\n          children: repo\n        }), \" GitHub repo but Keystatic isn't able to access this repo. This is either because you don't have access to this repo or you haven't added the GitHub app to it.\"]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(InstallGitHubApp, {\n        config: props.config\n      })]\n    })\n  });\n}\n\nconst storedStateSchema = zod__WEBPACK_IMPORTED_MODULE_123__.z.object({\n  state: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  from: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  code_verifier: zod__WEBPACK_IMPORTED_MODULE_123__.z.string()\n});\nconst tokenResponseSchema = zod__WEBPACK_IMPORTED_MODULE_123__.z.object({\n  access_token: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  token_type: zod__WEBPACK_IMPORTED_MODULE_123__.z.string(),\n  expires_in: zod__WEBPACK_IMPORTED_MODULE_123__.z.number()\n});\nfunction KeystaticCloudAuthCallback({\n  config\n}) {\n  var _config$cloud2;\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const url = new URL(window.location.href);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  const storedState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const _storedState = localStorage.getItem('keystatic-cloud-state');\n    const storedState = storedStateSchema.safeParse((() => {\n      try {\n        return JSON.parse(_storedState || '');\n      } catch {\n        return null;\n      }\n    })());\n    return storedState;\n  }, []);\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var _config$cloud;\n    if (code && state && storedState.success && (_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) {\n      const {\n        project\n      } = config.cloud;\n      (async () => {\n        const res = await fetch(`${_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.K}/oauth/token`, {\n          method: 'POST',\n          body: new URLSearchParams({\n            code,\n            client_id: project,\n            redirect_uri: `${window.location.origin}/keystatic/cloud/oauth/callback`,\n            code_verifier: storedState.data.code_verifier,\n            grant_type: 'authorization_code'\n          }).toString(),\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ..._dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.y\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`Bad response: ${res.status} ${res.statusText}\\n\\n${await res.text()}`);\n        }\n        const data = await res.json();\n        const parsed = tokenResponseSchema.parse(data);\n        localStorage.setItem('keystatic-cloud-access-token', JSON.stringify({\n          token: parsed.access_token,\n          project,\n          validUntil: Date.now() + parsed.expires_in * 1000\n        }));\n        router.push(`/keystatic/${storedState.data.from}`);\n      })().catch(error => {\n        setError(error);\n      });\n    }\n  }, [code, state, router, storedState, config]);\n  if (!((_config$cloud2 = config.cloud) !== null && _config$cloud2 !== void 0 && _config$cloud2.project)) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      children: \"Missing Keystatic Cloud config\"\n    });\n  }\n  if (!code || !state) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      children: \"Missing code or state\"\n    });\n  }\n  if (storedState.success === false || state !== storedState.data.state) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      children: \"Invalid state\"\n    });\n  }\n  if (error) {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n      children: error.message\n    });\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_progress__WEBPACK_IMPORTED_MODULE_13__.ProgressCircle, {\n      size: \"large\",\n      isIndeterminate: true,\n      \"aria-label\": \"Authenticating\"\n    })\n  });\n}\n\nfunction parseParamsWithoutBranch(params) {\n  if (params.length === 0) {\n    return {};\n  }\n  if (params.length === 2 && params[0] === 'singleton') {\n    return {\n      singleton: params[1]\n    };\n  }\n  if (params.length < 2 || params[0] !== 'collection') return null;\n  const collection = params[1];\n  if (params.length === 2) {\n    return {\n      collection\n    };\n  }\n  if (params.length === 3 && params[2] === 'create') {\n    return {\n      collection,\n      kind: 'create'\n    };\n  }\n  if (params.length === 4 && params[2] === 'item') {\n    const slug = params[3];\n    return {\n      collection,\n      kind: 'edit',\n      slug\n    };\n  }\n  return null;\n}\nfunction RedirectToBranch(props) {\n  const {\n    push\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  const {\n    data,\n    error\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.at);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var _error$response, _data$repository, _data$repository2, _error$graphQLErrors, _error$graphQLErrors2;\n    if ((error === null || error === void 0 || (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      if (props.config.storage.kind === 'github') {\n        window.location.href = '/api/keystatic/github/login';\n      } else {\n        (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.B)('', props.config);\n      }\n    }\n    if (data !== null && data !== void 0 && (_data$repository = data.repository) !== null && _data$repository !== void 0 && _data$repository.defaultBranchRef) {\n      push(`/keystatic/branch/${encodeURIComponent(data.repository.defaultBranchRef.name)}`);\n    }\n    if (props.config.storage.kind === 'github' && !(data !== null && data !== void 0 && (_data$repository2 = data.repository) !== null && _data$repository2 !== void 0 && _data$repository2.id) && (error === null || error === void 0 || (_error$graphQLErrors = error.graphQLErrors) === null || _error$graphQLErrors === void 0 || (_error$graphQLErrors = _error$graphQLErrors[0]) === null || _error$graphQLErrors === void 0 || (_error$graphQLErrors = _error$graphQLErrors.originalError) === null || _error$graphQLErrors === void 0 ? void 0 : _error$graphQLErrors.type) === 'NOT_FOUND' || (error === null || error === void 0 || (_error$graphQLErrors2 = error.graphQLErrors) === null || _error$graphQLErrors2 === void 0 || (_error$graphQLErrors2 = _error$graphQLErrors2[0]) === null || _error$graphQLErrors2 === void 0 || (_error$graphQLErrors2 = _error$graphQLErrors2.originalError) === null || _error$graphQLErrors2 === void 0 ? void 0 : _error$graphQLErrors2.type) === 'FORBIDDEN') {\n      window.location.href = '/api/keystatic/github/repo-not-found';\n    }\n  }, [data, error, push, props.config]);\n  return null;\n}\nfunction PageInner({\n  config\n}) {\n  var _config$cloud;\n  const {\n    params\n  } = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  let branch = null,\n    parsedParams,\n    basePath;\n  if (params.join('/') === 'cloud/oauth/callback') {\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(KeystaticCloudAuthCallback, {\n      config: config\n    });\n  }\n  let wrapper = x => x;\n  if ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aq)(config) || (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.i)(config) && (_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) {\n    wrapper = element => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.au, {\n      config: config,\n      children: element\n    });\n  }\n  if ((0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(config) || (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.aq)(config)) {\n    const origWrapper = wrapper;\n    wrapper = element => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(AuthWrapper, {\n      config: config,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.av, {\n        config: config,\n        children: origWrapper(element)\n      })\n    });\n    if (params.length === 0) {\n      return wrapper( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(RedirectToBranch, {\n        config: config\n      }));\n    }\n    if (params.length === 1 && (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.v)(config)) {\n      if (params[0] === 'setup') return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(KeystaticSetup, {\n        config: config\n      });\n      if (params[0] === 'repo-not-found') {\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(RepoNotFound, {\n          config: config\n        });\n      }\n      if (params[0] === 'created-github-app') {\n        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreatedGitHubApp, {\n          config: config\n        });\n      }\n    }\n    if (params[0] !== 'branch' || params.length < 2) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n        children: \"Not found\"\n      });\n    }\n    branch = params[1];\n    basePath = `/keystatic/branch/${encodeURIComponent(branch)}`;\n    parsedParams = parseParamsWithoutBranch(params.slice(2));\n  } else {\n    parsedParams = parseParamsWithoutBranch(params);\n    basePath = '/keystatic';\n  }\n  return wrapper( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(AppShell, {\n    config: config,\n    currentBranch: branch || '',\n    basePath: basePath,\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(NotFoundBoundary, {\n      fallback: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.P, {\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.X, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(EmptyState, {\n            icon: _keystar_ui_icon_icons_fileX2Icon__WEBPACK_IMPORTED_MODULE_3__.fileX2Icon,\n            title: \"Not found\",\n            message: \"This page could not be found.\"\n          })\n        })\n      }),\n      children: parsedParams === null ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(AlwaysNotFound, {}) : parsedParams.collection ? parsedParams.kind === 'create' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CreateItemWrapper, {\n        collection: parsedParams.collection,\n        config: config,\n        basePath: basePath\n      }, parsedParams.collection) : parsedParams.kind === 'edit' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ItemPageWrapper, {\n        collection: parsedParams.collection,\n        basePath: basePath,\n        config: config,\n        itemSlug: parsedParams.slug\n      }, parsedParams.collection) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(CollectionPage, {\n        basePath: basePath,\n        collection: parsedParams.collection,\n        config: config\n      }, parsedParams.collection) : parsedParams.singleton ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(SingletonPageWrapper, {\n        config: config,\n        singleton: parsedParams.singleton\n      }, parsedParams.singleton) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(DashboardPage, {\n        config: config,\n        basePath: basePath\n      })\n    })\n  }));\n}\nfunction AlwaysNotFound() {\n  notFound();\n}\nfunction AuthWrapper(props) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('unknown');\n  const router = (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.u)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.e)(props.config).then(auth => {\n      if (auth) {\n        setState('valid');\n        return;\n      }\n      setState('explicit-auth');\n    });\n  }, [props.config]);\n  if (state === 'valid') {\n    return props.children;\n  }\n  if (state === 'explicit-auth') {\n    if (props.config.storage.kind === 'github') {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          href: `/api/keystatic/github/login${router.params.length ? `?${new URLSearchParams({\n            from: router.params.map(encodeURIComponent).join('/')\n          })}` : ''}`\n          // even though we'll never be in an iframe, so this isn't really distinct from _self\n          // it makes react-aria avoid using client-side routing which we need here\n          ,\n          target: \"_top\",\n          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {\n            src: _keystar_ui_icon_icons_githubIcon__WEBPACK_IMPORTED_MODULE_4__.githubIcon\n          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: \"Log in with GitHub\"\n          })]\n        })\n      });\n    }\n    if (props.config.storage.kind === 'cloud') {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_layout__WEBPACK_IMPORTED_MODULE_5__.Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_button__WEBPACK_IMPORTED_MODULE_1__.Button, {\n          onPress: () => {\n            (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.B)(router.params.map(encodeURIComponent).join('/'), props.config);\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_keystar_ui_typography__WEBPACK_IMPORTED_MODULE_6__.Text, {\n            children: \"Log in with Keystatic Cloud\"\n          })\n        })\n      });\n    }\n  }\n  return null;\n}\nfunction RedirectToLoopback(props) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (window.location.hostname === 'localhost') {\n      window.location.href = window.location.href.replace('localhost', '127.0.0.1');\n    }\n  }, []);\n  if (window.location.hostname === 'localhost') {\n    return null;\n  }\n  return props.children;\n}\nfunction Keystatic(props) {\n  if (props.config.storage.kind === 'github') {\n    (0,_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.ar)(props.config.storage.repo);\n  }\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(ClientOnly, {\n    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(RedirectToLoopback, {\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(AppSlugProvider, {\n        value: props.appSlug,\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_dist_index_fbab32f7_node_esm_js__WEBPACK_IMPORTED_MODULE_19__.as, {\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(Provider, {\n            config: props.config,\n            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(PageInner, {\n              config: props.config\n            })\n          })\n        })\n      })\n    })\n  });\n}\nfunction ClientOnly(props) {\n  const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setMounted(true);\n  }, []);\n  if (!mounted) return null;\n  return props.children;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/ui/dist/keystatic-core-ui.node.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/api/generic/dist/keystatic-core-api-generic.node.react-server.esm.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/api/generic/dist/keystatic-core-api-generic.node.react-server.esm.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeGenericAPIRouteHandler: () => (/* binding */ makeGenericAPIRouteHandler)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n/* harmony import */ var iron_webcrypto__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! iron-webcrypto */ \"(rsc)/./node_modules/.pnpm/iron-webcrypto@0.10.1/node_modules/iron-webcrypto/dist/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.22.5/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _dist_read_local_018858c4_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../dist/read-local-018858c4.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/read-local-018858c4.node.react-server.esm.js\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(node_crypto__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _dist_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../dist/index-90608531.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(rsc)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ignore */ \"(rsc)/./node_modules/.pnpm/ignore@5.3.1/node_modules/ignore/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(ignore__WEBPACK_IMPORTED_MODULE_15__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction redirect(to, initialHeaders) {\n  return {\n    body: null,\n    status: 307,\n    headers: [...(initialHeaders !== null && initialHeaders !== void 0 ? initialHeaders : []), ['Location', to]]\n  };\n}\n\nconst ghAppSchema = zod__WEBPACK_IMPORTED_MODULE_16__.z.object({\n  slug: zod__WEBPACK_IMPORTED_MODULE_16__.z.string(),\n  client_id: zod__WEBPACK_IMPORTED_MODULE_16__.z.string(),\n  client_secret: zod__WEBPACK_IMPORTED_MODULE_16__.z.string()\n});\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\nasync function handleGitHubAppCreation(req, slugEnvVarName) {\n  const searchParams = new URL(req.url, 'https://localhost').searchParams;\n  const code = searchParams.get('code');\n  if (typeof code !== 'string' || !/^[a-zA-Z0-9]+$/.test(code)) {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const ghAppRes = await fetch(`https://api.github.com/app-manifests/${code}/conversions`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!ghAppRes.ok) {\n    console.log(ghAppRes);\n    return {\n      status: 500,\n      body: 'An error occurred while creating the GitHub App'\n    };\n  }\n  const ghAppDataRaw = await ghAppRes.json();\n  const ghAppDataResult = ghAppSchema.safeParse(ghAppDataRaw);\n  if (!ghAppDataResult.success) {\n    console.log(ghAppDataRaw);\n    return {\n      status: 500,\n      body: 'An unexpected response was received from GitHub'\n    };\n  }\n  const toAddToEnv = `# Keystatic\nKEYSTATIC_GITHUB_CLIENT_ID=${ghAppDataResult.data.client_id}\nKEYSTATIC_GITHUB_CLIENT_SECRET=${ghAppDataResult.data.client_secret}\nKEYSTATIC_SECRET=${(0,node_crypto__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(40).toString('hex')}\n${slugEnvVarName ? `${slugEnvVarName}=${ghAppDataResult.data.slug}\\n` : ''}`;\n  let prevEnv;\n  try {\n    prevEnv = await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile('.env', 'utf-8');\n  } catch (err) {\n    if (err.code !== 'ENOENT') throw err;\n  }\n  const newEnv = prevEnv ? `${prevEnv}\\n\\n${toAddToEnv}` : toAddToEnv;\n  await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().writeFile('.env', newEnv);\n  await wait(200);\n  return redirect('/keystatic/created-github-app?slug=' + ghAppDataResult.data.slug);\n}\nfunction localModeApiHandler(config, localBaseDirectory) {\n  const baseDirectory = node_path__WEBPACK_IMPORTED_MODULE_1___default().resolve(localBaseDirectory !== null && localBaseDirectory !== void 0 ? localBaseDirectory : process.cwd());\n  return async (req, params) => {\n    const joined = params.join('/');\n    if (req.method === 'GET' && joined === 'tree') {\n      return tree(req, config, baseDirectory);\n    }\n    if (req.method === 'GET' && params[0] === 'blob') {\n      return blob(req, config, params, baseDirectory);\n    }\n    if (req.method === 'POST' && joined === 'update') {\n      return update(req, config, baseDirectory);\n    }\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  };\n}\nasync function tree(req, config, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  return {\n    status: 200,\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(await (0,_dist_read_local_018858c4_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_3__.r)(baseDirectory))\n  };\n}\nfunction getIsPathValid(config) {\n  const allowedDirectories = (0,_dist_read_local_018858c4_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_3__.g)(config);\n  return filepath => !filepath.includes('\\\\') && filepath.split('/').every(x => x !== '.' && x !== '..') && allowedDirectories.some(x => filepath.startsWith(x));\n}\nasync function blob(req, config, params, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const expectedSha = params[1];\n  const filepath = params.slice(2).join('/');\n  const isFilepathValid = getIsPathValid(config);\n  if (!isFilepathValid(filepath)) {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  let contents;\n  try {\n    contents = await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(node_path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDirectory, filepath));\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    }\n    throw err;\n  }\n  const sha = await (0,_dist_read_local_018858c4_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_3__.b)(contents);\n  if (sha !== expectedSha) {\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  }\n  return {\n    status: 200,\n    body: contents\n  };\n}\nasync function update(req, config, baseDirectory) {\n  if (req.headers.get('no-cors') !== '1' || req.headers.get('content-type') !== 'application/json') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const isFilepathValid = getIsPathValid(config);\n  const updates = zod__WEBPACK_IMPORTED_MODULE_16__.z.object({\n    additions: zod__WEBPACK_IMPORTED_MODULE_16__.z.array(zod__WEBPACK_IMPORTED_MODULE_16__.z.object({\n      path: zod__WEBPACK_IMPORTED_MODULE_16__.z.string().refine(isFilepathValid),\n      contents: zod__WEBPACK_IMPORTED_MODULE_16__.z.string().transform(x => Buffer.from(x, 'base64'))\n    })),\n    deletions: zod__WEBPACK_IMPORTED_MODULE_16__.z.array(zod__WEBPACK_IMPORTED_MODULE_16__.z.object({\n      path: zod__WEBPACK_IMPORTED_MODULE_16__.z.string().refine(isFilepathValid)\n    }))\n  }).safeParse(await req.json());\n  if (!updates.success) {\n    return {\n      status: 400,\n      body: 'Bad data'\n    };\n  }\n  for (const addition of updates.data.additions) {\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().mkdir(node_path__WEBPACK_IMPORTED_MODULE_1___default().dirname(node_path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDirectory, addition.path)), {\n      recursive: true\n    });\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().writeFile(node_path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDirectory, addition.path), addition.contents);\n  }\n  for (const deletion of updates.data.deletions) {\n    await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().rm(node_path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDirectory, deletion.path), {\n      force: true\n    });\n  }\n  return {\n    status: 200,\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(await (0,_dist_read_local_018858c4_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_3__.r)(baseDirectory))\n  };\n}\n\nfunction bytesToHex(bytes) {\n  let str = '';\n  for (const byte of bytes) {\n    str += byte.toString(16).padStart(2, '0');\n  }\n  return str;\n}\n\nconst keystaticRouteRegex = /^branch\\/[^]+(\\/collection\\/[^/]+(|\\/(create|item\\/[^/]+))|\\/singleton\\/[^/]+)?$/;\nconst keyToEnvVar = {\n  clientId: 'KEYSTATIC_GITHUB_CLIENT_ID',\n  clientSecret: 'KEYSTATIC_GITHUB_CLIENT_SECRET',\n  secret: 'KEYSTATIC_SECRET'\n};\nfunction tryOrUndefined(fn) {\n  try {\n    return fn();\n  } catch {\n    return undefined;\n  }\n}\nfunction makeGenericAPIRouteHandler(_config, options) {\n  var _config$clientId, _config$clientSecret, _config$secret;\n  const _config2 = {\n    clientId: (_config$clientId = _config.clientId) !== null && _config$clientId !== void 0 ? _config$clientId : tryOrUndefined(() => process.env.KEYSTATIC_GITHUB_CLIENT_ID),\n    clientSecret: (_config$clientSecret = _config.clientSecret) !== null && _config$clientSecret !== void 0 ? _config$clientSecret : tryOrUndefined(() => process.env.KEYSTATIC_GITHUB_CLIENT_SECRET),\n    secret: (_config$secret = _config.secret) !== null && _config$secret !== void 0 ? _config$secret : tryOrUndefined(() => process.env.KEYSTATIC_SECRET),\n    config: _config.config\n  };\n  const getParams = req => {\n    let url;\n    try {\n      url = new URL(req.url);\n    } catch (err) {\n      throw new Error(`Found incomplete URL in Keystatic API route URL handler${(options === null || options === void 0 ? void 0 : options.slugEnvName) === 'NEXT_PUBLIC_KEYSTATIC_GITHUB_APP_SLUG' ? \". Make sure you're using the latest version of @keystatic/next\" : ''}`);\n    }\n    return url.pathname.replace(/^\\/api\\/keystatic\\/?/, '').split('/').map(x => decodeURIComponent(x)).filter(Boolean);\n  };\n  if (_config2.config.storage.kind === 'local') {\n    const handler = localModeApiHandler(_config2.config, _config.localBaseDirectory);\n    return req => {\n      const params = getParams(req);\n      return handler(req, params);\n    };\n  }\n  if (_config2.config.storage.kind === 'cloud') {\n    return async function keystaticAPIRoute() {\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    };\n  }\n  if (!_config2.clientId || !_config2.clientSecret || !_config2.secret) {\n    if (false) {}\n    return async function keystaticAPIRoute(req) {\n      const params = getParams(req);\n      const joined = params.join('/');\n      if (joined === 'github/created-app') {\n        return createdGithubApp(req, options === null || options === void 0 ? void 0 : options.slugEnvName);\n      }\n      if (joined === 'github/login' || joined === 'github/repo-not-found' || joined === 'github/logout') {\n        return redirect('/keystatic/setup');\n      }\n      return {\n        status: 404,\n        body: 'Not Found'\n      };\n    };\n  }\n  const config = {\n    clientId: _config2.clientId,\n    clientSecret: _config2.clientSecret,\n    secret: _config2.secret,\n    config: _config2.config\n  };\n  return async function keystaticAPIRoute(req) {\n    const params = getParams(req);\n    const joined = params.join('/');\n    if (joined === 'github/oauth/callback') {\n      return githubOauthCallback(req, config);\n    }\n    if (joined === 'github/login') {\n      return githubLogin(req, config);\n    }\n    if (joined === 'github/refresh-token') {\n      return githubRefreshToken(req, config);\n    }\n    if (joined === 'github/repo-not-found') {\n      return githubRepoNotFound(req, config);\n    }\n    if (joined === 'github/logout') {\n      return redirect('/keystatic', [['Set-Cookie', immediatelyExpiringCookie('keystatic-gh-access-token')], ['Set-Cookie', immediatelyExpiringCookie('keystatic-gh-refresh-token')]]);\n    }\n    return {\n      status: 404,\n      body: 'Not Found'\n    };\n  };\n}\nconst tokenDataResultType = zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].object({\n  access_token: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].string(),\n  expires_in: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].number(),\n  refresh_token: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].string(),\n  refresh_token_expires_in: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].number(),\n  scope: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].string(),\n  token_type: zod__WEBPACK_IMPORTED_MODULE_16__[\"default\"].literal('bearer')\n});\nasync function githubOauthCallback(req, config) {\n  var _req$headers$get;\n  const searchParams = new URL(req.url, 'http://localhost').searchParams;\n  const error = searchParams.get('error');\n  const errorDescription = searchParams.get('error_description');\n  if (typeof errorDescription === 'string') {\n    return {\n      status: 400,\n      body: `An error occurred when trying to authenticate with GitHub:\\n${errorDescription}${error === 'redirect_uri_mismatch' ? `\\n\\nIf you were trying to sign in locally and recently upgraded Keystatic from @keystatic/core@0.0.69 or below, you need to add \\`http://127.0.0.1/api/keystatic/github/oauth/callback\\` as a callback URL in your GitHub app.` : ''}`\n    };\n  }\n  const code = searchParams.get('code');\n  const state = searchParams.get('state');\n  if (typeof code !== 'string') {\n    return {\n      status: 400,\n      body: 'Bad Request'\n    };\n  }\n  const cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse((_req$headers$get = req.headers.get('cookie')) !== null && _req$headers$get !== void 0 ? _req$headers$get : '');\n  const fromCookie = state ? cookies['ks-' + state] : undefined;\n  const from = typeof fromCookie === 'string' && keystaticRouteRegex.test(fromCookie) ? fromCookie : undefined;\n  const url = new URL('https://github.com/login/oauth/access_token');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('client_secret', config.clientSecret);\n  url.searchParams.set('code', code);\n  const tokenRes = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!tokenRes.ok) {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  const _tokenData = await tokenRes.json();\n  const tokenDataParseResult = tokenDataResultType.safeParse(_tokenData);\n  if (!tokenDataParseResult.success) {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  const headers = await getTokenCookies(tokenDataParseResult.data, config);\n  if (state === 'close') {\n    return {\n      headers: [...headers, ['Content-Type', 'text/html']],\n      body: \"<script>localStorage.setItem('ks-refetch-installations', 'true');window.close();</script>\",\n      status: 200\n    };\n  }\n  return redirect(`/keystatic${from ? `/${from}` : ''}`, headers);\n}\nasync function getTokenCookies(tokenData, config) {\n  const headers = [['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('keystatic-gh-access-token', tokenData.access_token, {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    maxAge: tokenData.expires_in,\n    expires: new Date(Date.now() + tokenData.expires_in * 1000),\n    path: '/'\n  })], ['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('keystatic-gh-refresh-token', await iron_webcrypto__WEBPACK_IMPORTED_MODULE_17__.seal(node_crypto__WEBPACK_IMPORTED_MODULE_4__.webcrypto, tokenData.refresh_token, config.secret, {\n    ...iron_webcrypto__WEBPACK_IMPORTED_MODULE_17__.defaults,\n    ttl: tokenData.refresh_token_expires_in * 1000\n  }), {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    httpOnly: true,\n    maxAge: tokenData.refresh_token_expires_in,\n    expires: new Date(Date.now() + tokenData.refresh_token_expires_in * 100),\n    path: '/'\n  })]];\n  return headers;\n}\nasync function getRefreshToken(req, config) {\n  const cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse(req.headers.get('cookie') || '');\n  const refreshTokenCookie = cookies['keystatic-gh-refresh-token'];\n  if (!refreshTokenCookie) return;\n  let refreshToken;\n  try {\n    refreshToken = await iron_webcrypto__WEBPACK_IMPORTED_MODULE_17__.unseal(node_crypto__WEBPACK_IMPORTED_MODULE_4__.webcrypto, refreshTokenCookie, config.secret, iron_webcrypto__WEBPACK_IMPORTED_MODULE_17__.defaults);\n  } catch {\n    return;\n  }\n  if (typeof refreshToken !== 'string') return;\n  return refreshToken;\n}\nasync function githubRefreshToken(req, config) {\n  const headers = await refreshGitHubAuth(req, config);\n  if (!headers) {\n    return {\n      status: 401,\n      body: 'Authorization failed'\n    };\n  }\n  return {\n    status: 200,\n    headers,\n    body: ''\n  };\n}\nasync function refreshGitHubAuth(req, config) {\n  const refreshToken = await getRefreshToken(req, config);\n  if (!refreshToken) {\n    return;\n  }\n  const url = new URL('https://github.com/login/oauth/access_token');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('client_secret', config.clientSecret);\n  url.searchParams.set('grant_type', 'refresh_token');\n  url.searchParams.set('refresh_token', refreshToken);\n  const tokenRes = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  if (!tokenRes.ok) {\n    return;\n  }\n  const _tokenData = await tokenRes.json();\n  const tokenDataParseResult = tokenDataResultType.safeParse(_tokenData);\n  if (!tokenDataParseResult.success) {\n    return;\n  }\n  return getTokenCookies(tokenDataParseResult.data, config);\n}\nasync function githubRepoNotFound(req, config) {\n  const headers = await refreshGitHubAuth(req, config);\n  if (headers) {\n    return redirect('/keystatic/repo-not-found', headers);\n  }\n  return githubLogin(req, config);\n}\nasync function githubLogin(req, config) {\n  const reqUrl = new URL(req.url);\n  const rawFrom = reqUrl.searchParams.get('from');\n  const from = typeof rawFrom === 'string' && keystaticRouteRegex.test(rawFrom) ? rawFrom : '/';\n  const state = bytesToHex(node_crypto__WEBPACK_IMPORTED_MODULE_4__.webcrypto.getRandomValues(new Uint8Array(10)));\n  const url = new URL('https://github.com/login/oauth/authorize');\n  url.searchParams.set('client_id', config.clientId);\n  url.searchParams.set('redirect_uri', `${reqUrl.origin}/api/keystatic/github/oauth/callback`);\n  if (from === '/') {\n    return redirect(url.toString());\n  }\n  url.searchParams.set('state', state);\n  return redirect(url.toString(), [['Set-Cookie', cookie__WEBPACK_IMPORTED_MODULE_0__.serialize('ks-' + state, from, {\n    sameSite: 'lax',\n    secure: \"development\" === 'production',\n    // 1 day\n    maxAge: 60 * 60 * 24,\n    expires: new Date(Date.now() + 60 * 60 * 24 * 1000),\n    path: '/',\n    httpOnly: true\n  })]]);\n}\nasync function createdGithubApp(req, slugEnvVarName) {\n  if (false) {}\n  return handleGitHubAppCreation(req, slugEnvVarName);\n}\nfunction immediatelyExpiringCookie(name) {\n  return cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, '', {\n    secure: \"development\" === 'production',\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 0,\n    expires: new Date()\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/api/generic/dist/keystatic-core-api-generic.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-59e5ebd9.node.react-server.esm.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-59e5ebd9.node.react-server.esm.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ component)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-90608531.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n\n\n\n\n\n\n// this is written like this rather than ArrayField<ComponentSchema> to avoid TypeScript erroring about circularity\nfunction component(options) {\n  return options;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLTU5ZTVlYmQ5Lm5vZGUucmVhY3Qtc2VydmVyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUEyQjtBQUN3QjtBQUNwQztBQUNnQjtBQUNFOztBQUVqQztBQUNBO0FBQ0E7QUFDQTs7QUFFMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvYXBpLTU5ZTVlYmQ5Lm5vZGUucmVhY3Qtc2VydmVyLmVzbS5qcz9jNjdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAncmVhY3QvanN4LXJ1bnRpbWUnO1xuaW1wb3J0ICcuL2luZGV4LTkwNjA4NTMxLm5vZGUucmVhY3Qtc2VydmVyLmVzbS5qcyc7XG5pbXBvcnQgJ2VtZXJ5JztcbmltcG9ydCAnQHNpbmRyZXNvcmh1cy9zbHVnaWZ5JztcbmltcG9ydCAnQGJyYWludHJlZS9zYW5pdGl6ZS11cmwnO1xuXG4vLyB0aGlzIGlzIHdyaXR0ZW4gbGlrZSB0aGlzIHJhdGhlciB0aGFuIEFycmF5RmllbGQ8Q29tcG9uZW50U2NoZW1hPiB0byBhdm9pZCBUeXBlU2NyaXB0IGVycm9yaW5nIGFib3V0IGNpcmN1bGFyaXR5XG5mdW5jdGlvbiBjb21wb25lbnQob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucztcbn1cblxuZXhwb3J0IHsgY29tcG9uZW50IGFzIGMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-59e5ebd9.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-8bb79b3a.node.react-server.esm.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-8bb79b3a.node.react-server.esm.js ***!
  \***********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ integer)\n/* harmony export */ });\n/* harmony import */ var _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-90608531.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction validateInteger(validation, value, label) {\n  if (value !== null && (typeof value !== 'number' || !Number.isInteger(value))) {\n    return `${label} must be a whole number`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if (value !== null) {\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined && value < validation.min) {\n      return `${label} must be at least ${validation.min}`;\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined && value > validation.max) {\n      return `${label} must be at most ${validation.max}`;\n    }\n  }\n}\n\nfunction integer({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.ax, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue !== null && defaultValue !== void 0 ? defaultValue : null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.ac('Must be a number');\n    },\n    validate(value) {\n      const message = validateInteger(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.ac(message);\n      }\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtOGJiNzliM2Eubm9kZS5yZWFjdC1zZXJ2ZXIuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMks7QUFDbkk7O0FBRXhDO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTyxtQkFBbUIsZUFBZTtBQUN6RDtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU8sa0JBQWtCLGVBQWU7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsU0FBUyw0RUFBbUM7QUFDNUM7QUFDQSwwQkFBMEIsc0RBQUcsQ0FBQyx3RUFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0VBQWM7QUFDOUIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix3RUFBYztBQUNoQztBQUNBLE1BQU0sNEVBQWM7QUFDcEI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaW5kZXgtOGJiNzliM2Eubm9kZS5yZWFjdC1zZXJ2ZXIuZXNtLmpzPzNiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWQgYXMgYmFzaWNGb3JtRmllbGRXaXRoU2ltcGxlUmVhZGVyUGFyc2UsIGF4IGFzIEludGVnZXJGaWVsZElucHV0LCBhYyBhcyBGaWVsZERhdGFFcnJvciwgYWcgYXMgYXNzZXJ0UmVxdWlyZWQgfSBmcm9tICcuL2luZGV4LTkwNjA4NTMxLm5vZGUucmVhY3Qtc2VydmVyLmVzbS5qcyc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdyZWFjdC9qc3gtcnVudGltZSc7XG5cbmZ1bmN0aW9uIHZhbGlkYXRlSW50ZWdlcih2YWxpZGF0aW9uLCB2YWx1ZSwgbGFiZWwpIHtcbiAgaWYgKHZhbHVlICE9PSBudWxsICYmICh0eXBlb2YgdmFsdWUgIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IG11c3QgYmUgYSB3aG9sZSBudW1iZXJgO1xuICB9XG4gIGlmICh2YWxpZGF0aW9uICE9PSBudWxsICYmIHZhbGlkYXRpb24gIT09IHZvaWQgMCAmJiB2YWxpZGF0aW9uLmlzUmVxdWlyZWQgJiYgdmFsdWUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gYCR7bGFiZWx9IGlzIHJlcXVpcmVkYDtcbiAgfVxuICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICBpZiAoKHZhbGlkYXRpb24gPT09IG51bGwgfHwgdmFsaWRhdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsaWRhdGlvbi5taW4pICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgPCB2YWxpZGF0aW9uLm1pbikge1xuICAgICAgcmV0dXJuIGAke2xhYmVsfSBtdXN0IGJlIGF0IGxlYXN0ICR7dmFsaWRhdGlvbi5taW59YDtcbiAgICB9XG4gICAgaWYgKCh2YWxpZGF0aW9uID09PSBudWxsIHx8IHZhbGlkYXRpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbGlkYXRpb24ubWF4KSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlID4gdmFsaWRhdGlvbi5tYXgpIHtcbiAgICAgIHJldHVybiBgJHtsYWJlbH0gbXVzdCBiZSBhdCBtb3N0ICR7dmFsaWRhdGlvbi5tYXh9YDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW50ZWdlcih7XG4gIGxhYmVsLFxuICBkZWZhdWx0VmFsdWUsXG4gIHZhbGlkYXRpb24sXG4gIGRlc2NyaXB0aW9uXG59KSB7XG4gIHJldHVybiBiYXNpY0Zvcm1GaWVsZFdpdGhTaW1wbGVSZWFkZXJQYXJzZSh7XG4gICAgSW5wdXQocHJvcHMpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovanN4KEludGVnZXJGaWVsZElucHV0LCB7XG4gICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICB2YWxpZGF0aW9uOiB2YWxpZGF0aW9uLFxuICAgICAgICAuLi5wcm9wc1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBkZWZhdWx0VmFsdWUoKSB7XG4gICAgICByZXR1cm4gZGVmYXVsdFZhbHVlICE9PSBudWxsICYmIGRlZmF1bHRWYWx1ZSAhPT0gdm9pZCAwID8gZGVmYXVsdFZhbHVlIDogbnVsbDtcbiAgICB9LFxuICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBGaWVsZERhdGFFcnJvcignTXVzdCBiZSBhIG51bWJlcicpO1xuICAgIH0sXG4gICAgdmFsaWRhdGUodmFsdWUpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB2YWxpZGF0ZUludGVnZXIodmFsaWRhdGlvbiwgdmFsdWUsIGxhYmVsKTtcbiAgICAgIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEZpZWxkRGF0YUVycm9yKG1lc3NhZ2UpO1xuICAgICAgfVxuICAgICAgYXNzZXJ0UmVxdWlyZWQodmFsdWUsIHZhbGlkYXRpb24sIGxhYmVsKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNlcmlhbGl6ZSh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWU6IHZhbHVlID09PSBudWxsID8gdW5kZWZpbmVkIDogdmFsdWVcbiAgICAgIH07XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgaW50ZWdlciBhcyBpIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-8bb79b3a.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js ***!
  \***********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ getWholeDocumentFeaturesForChildField),\n/* harmony export */   A: () => (/* binding */ getInitialPropsValueFromInitializer),\n/* harmony export */   B: () => (/* binding */ aliasesToLabel),\n/* harmony export */   C: () => (/* binding */ aliasesToCanonicalName),\n/* harmony export */   D: () => (/* binding */ canonicalNameToLabel),\n/* harmony export */   E: () => (/* binding */ labelToCanonicalName),\n/* harmony export */   F: () => (/* binding */ languagesWithAliases),\n/* harmony export */   G: () => (/* binding */ transformProps),\n/* harmony export */   H: () => (/* binding */ getValueAtPropPath),\n/* harmony export */   I: () => (/* binding */ cloneDescendent),\n/* harmony export */   J: () => (/* binding */ areArraysEqual),\n/* harmony export */   K: () => (/* binding */ KEYSTATIC_CLOUD_API_URL),\n/* harmony export */   L: () => (/* binding */ getSchemaAtPropPath),\n/* harmony export */   M: () => (/* binding */ findChildPropPaths),\n/* harmony export */   N: () => (/* binding */ object),\n/* harmony export */   O: () => (/* binding */ getSelectedTableArea),\n/* harmony export */   P: () => (/* binding */ getRelativeRowPath),\n/* harmony export */   Q: () => (/* binding */ cell),\n/* harmony export */   R: () => (/* binding */ clearFormatting),\n/* harmony export */   S: () => (/* binding */ EditorAfterButIgnoringingPointsWithNoContent),\n/* harmony export */   T: () => (/* binding */ getInlineNodes),\n/* harmony export */   U: () => (/* binding */ addMarksToChildren),\n/* harmony export */   V: () => (/* binding */ setLinkForChildren),\n/* harmony export */   W: () => (/* binding */ forceDisableMarkForChildren),\n/* harmony export */   X: () => (/* binding */ addMarkToChildren),\n/* harmony export */   Y: () => (/* binding */ getPlaceholderTextForPropPath),\n/* harmony export */   Z: () => (/* binding */ Prism),\n/* harmony export */   _: () => (/* binding */ _createDocumentEditor),\n/* harmony export */   a: () => (/* binding */ KEYSTATIC_CLOUD_HEADERS),\n/* harmony export */   a0: () => (/* binding */ getEntryDataFilepath),\n/* harmony export */   a1: () => (/* binding */ getDirectoriesForTreeKey),\n/* harmony export */   a2: () => (/* binding */ getTreeKey),\n/* harmony export */   a3: () => (/* binding */ blobSha),\n/* harmony export */   a4: () => (/* binding */ serializeProps),\n/* harmony export */   a5: () => (/* binding */ updateTreeWithChanges),\n/* harmony export */   a6: () => (/* binding */ getSlugGlobForCollection),\n/* harmony export */   a7: () => (/* binding */ getCollectionFormat),\n/* harmony export */   a8: () => (/* binding */ getCollectionItemPath),\n/* harmony export */   a9: () => (/* binding */ getDataFileExtension),\n/* harmony export */   aA: () => (/* binding */ DocumentFieldInput),\n/* harmony export */   aB: () => (/* binding */ parseToEditorState),\n/* harmony export */   aC: () => (/* binding */ collectDirectoriesUsedInSchema),\n/* harmony export */   aD: () => (/* binding */ serializeFromEditorState),\n/* harmony export */   aE: () => (/* binding */ createEditorSchema),\n/* harmony export */   aa: () => (/* binding */ getSingletonFormat),\n/* harmony export */   ab: () => (/* binding */ isCloudConfig),\n/* harmony export */   ac: () => (/* binding */ FieldDataError),\n/* harmony export */   ad: () => (/* binding */ basicFormFieldWithSimpleReaderParse),\n/* harmony export */   ae: () => (/* binding */ CheckboxFieldInput),\n/* harmony export */   af: () => (/* binding */ DateFieldInput),\n/* harmony export */   ag: () => (/* binding */ assertRequired),\n/* harmony export */   ah: () => (/* binding */ DatetimeFieldInput),\n/* harmony export */   ai: () => (/* binding */ ImageFieldInput),\n/* harmony export */   aj: () => (/* binding */ getSrcPrefix),\n/* harmony export */   ak: () => (/* binding */ fixPath),\n/* harmony export */   al: () => (/* binding */ FileFieldInput),\n/* harmony export */   am: () => (/* binding */ MultiselectFieldInput),\n/* harmony export */   an: () => (/* binding */ PathReferenceInput),\n/* harmony export */   ao: () => (/* binding */ RelationshipInput),\n/* harmony export */   ap: () => (/* binding */ SelectFieldInput),\n/* harmony export */   aq: () => (/* binding */ SlugFieldInput),\n/* harmony export */   ar: () => (/* binding */ validateText),\n/* harmony export */   as: () => (/* binding */ UrlFieldInput),\n/* harmony export */   at: () => (/* binding */ BlocksFieldInput),\n/* harmony export */   au: () => (/* binding */ text),\n/* harmony export */   av: () => (/* binding */ CloudImageFieldInput),\n/* harmony export */   aw: () => (/* binding */ document$1),\n/* harmony export */   ax: () => (/* binding */ IntegerFieldInput),\n/* harmony export */   ay: () => (/* binding */ sha1),\n/* harmony export */   az: () => (/* binding */ getDefaultValue),\n/* harmony export */   b: () => (/* binding */ getEntriesInCollectionWithTreeKey),\n/* harmony export */   c: () => (/* binding */ getSingletonPath),\n/* harmony export */   d: () => (/* binding */ getTreeNodeAtPath),\n/* harmony export */   e: () => (/* binding */ treeSha),\n/* harmony export */   f: () => (/* binding */ getBranchPrefix),\n/* harmony export */   g: () => (/* binding */ getPathPrefix),\n/* harmony export */   h: () => (/* binding */ getSplitCloudProject),\n/* harmony export */   i: () => (/* binding */ isGitHubConfig),\n/* harmony export */   j: () => (/* binding */ getRepoUrl),\n/* harmony export */   k: () => (/* binding */ isLocalConfig),\n/* harmony export */   l: () => (/* binding */ getCollectionPath),\n/* harmony export */   m: () => (/* binding */ getKeysForArrayValue),\n/* harmony export */   n: () => (/* binding */ nodeTypeMatcher),\n/* harmony export */   o: () => (/* binding */ getSlugFromState),\n/* harmony export */   p: () => (/* binding */ pluralize),\n/* harmony export */   q: () => (/* binding */ getInitialPropsValue),\n/* harmony export */   r: () => (/* binding */ redirectToCloudAuth),\n/* harmony export */   s: () => (/* binding */ setKeysForArrayValue),\n/* harmony export */   t: () => (/* binding */ treeEntriesToTreeNodes),\n/* harmony export */   u: () => (/* binding */ updateValue),\n/* harmony export */   v: () => (/* binding */ getAncestorComponentChildFieldDocumentFeatures),\n/* harmony export */   w: () => (/* binding */ isBlock),\n/* harmony export */   x: () => (/* binding */ allMarks),\n/* harmony export */   y: () => (/* binding */ isListNode),\n/* harmony export */   z: () => (/* binding */ isElementActive)\n/* harmony export */ });\n/* harmony import */ var _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @markdoc/markdoc */ \"(rsc)/./node_modules/.pnpm/@markdoc+markdoc@0.3.5_@types+react@18.2.79_react@18.2.0/node_modules/@markdoc/markdoc/dist/index.mjs\");\n/* harmony import */ var slate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! slate */ \"(rsc)/./node_modules/.pnpm/slate@0.91.4/node_modules/slate/dist/index.es.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var js_base64__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! js-base64 */ \"(rsc)/./node_modules/.pnpm/js-base64@3.7.7/node_modules/js-base64/base64.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(rsc)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n\n\n\n\n\n\n\n\n\nfunction fixPath(path) {\n  return path.replace(/^\\.?\\/+/, '').replace(/\\/*$/, '');\n}\nconst collectionPath = /\\/\\*\\*?(?:$|\\/)/;\nfunction getConfiguredCollectionPath(config, collection) {\n  var _collectionConfig$pat;\n  const collectionConfig = config.collections[collection];\n  const path = (_collectionConfig$pat = collectionConfig.path) !== null && _collectionConfig$pat !== void 0 ? _collectionConfig$pat : `${collection}/*/`;\n  if (!collectionPath.test(path)) {\n    throw new Error(`Collection path must end with /* or /** or include /*/ or /**/ but ${collection} has ${path}`);\n  }\n  return path;\n}\nfunction getCollectionPath(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/\\*\\*?.*$/, ''));\n  return path;\n}\nfunction getCollectionFormat(config, collection) {\n  var _collectionConfig$for;\n  const collectionConfig = config.collections[collection];\n  return getFormatInfo((_collectionConfig$for = collectionConfig.format) !== null && _collectionConfig$for !== void 0 ? _collectionConfig$for : 'yaml', collectionConfig.schema, getConfiguredCollectionPath(config, collection));\n}\nfunction getSingletonFormat(config, singleton) {\n  var _singletonConfig$form, _singletonConfig$path;\n  const singletonConfig = config.singletons[singleton];\n  return getFormatInfo((_singletonConfig$form = singletonConfig.format) !== null && _singletonConfig$form !== void 0 ? _singletonConfig$form : 'yaml', singletonConfig.schema, (_singletonConfig$path = singletonConfig.path) !== null && _singletonConfig$path !== void 0 ? _singletonConfig$path : `${singleton}/`);\n}\nfunction getCollectionItemPath(config, collection, slug) {\n  const basePath = getCollectionPath(config, collection);\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  return `${basePath}/${slug}${suffix}`;\n}\nfunction getEntryDataFilepath(dir, formatInfo) {\n  return `${dir}${formatInfo.dataLocation === 'index' ? '/index' : ''}${getDataFileExtension(formatInfo)}`;\n}\nfunction getSlugGlobForCollection(config, collection) {\n  const collectionPath = getConfiguredCollectionPath(config, collection);\n  return collectionPath.includes('**') ? '**' : '*';\n}\nfunction getCollectionItemSlugSuffix(config, collection) {\n  const configuredPath = getConfiguredCollectionPath(config, collection);\n  const path = fixPath(configuredPath.replace(/^[^*]+\\*\\*?/, ''));\n  return path ? `/${path}` : '';\n}\nfunction getSingletonPath(config, singleton) {\n  var _singleton$path, _singleton$path2;\n  if ((_singleton$path = config.singletons[singleton].path) !== null && _singleton$path !== void 0 && _singleton$path.includes('*')) {\n    throw new Error(`Singleton paths cannot include * but ${singleton} has ${config.singletons[singleton].path}`);\n  }\n  return fixPath((_singleton$path2 = config.singletons[singleton].path) !== null && _singleton$path2 !== void 0 ? _singleton$path2 : singleton);\n}\nfunction getDataFileExtension(formatInfo) {\n  return formatInfo.contentField ? formatInfo.contentField.config.contentExtension : '.' + formatInfo.data;\n}\nfunction getFormatInfo(format, schema, path) {\n  var _format$data;\n  const dataLocation = path.endsWith('/') ? 'index' : 'outer';\n  if (typeof format === 'string') {\n    return {\n      dataLocation,\n      contentField: undefined,\n      data: format\n    };\n  }\n  let contentField;\n  if (format.contentField) {\n    const field = schema[format.contentField];\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)((field === null || field === void 0 ? void 0 : field.kind) === 'form', `${format.contentField} is not a form field`);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(field.formKind === 'content', `${format.contentField} is not a content field`);\n    contentField = {\n      key: format.contentField,\n      config: field\n    };\n  }\n  return {\n    data: (_format$data = format.data) !== null && _format$data !== void 0 ? _format$data : 'yaml',\n    contentField,\n    dataLocation\n  };\n}\nfunction getPathPrefix(storage) {\n  if (storage.kind === 'local' || !storage.pathPrefix) {\n    return undefined;\n  }\n  return fixPath(storage.pathPrefix) + '/';\n}\n\nasync function sha1(content) {\n  return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.createHash)('sha1').update(content).digest('hex');\n}\n\nconst textEncoder$2 = new TextEncoder();\nfunction blobSha(contents) {\n  const blobPrefix = textEncoder$2.encode('blob ' + contents.length + '\\0');\n  const array = new Uint8Array(blobPrefix.byteLength + contents.byteLength);\n  array.set(blobPrefix, 0);\n  array.set(contents, blobPrefix.byteLength);\n  return sha1(array);\n}\nfunction getTreeNodeAtPath(root, path) {\n  const parts = path.split('/');\n  let node = root.get(parts[0]);\n  for (const part of parts.slice(1)) {\n    if (!node) return undefined;\n    if (!node.children) return undefined;\n    node = node.children.get(part);\n  }\n  return node;\n}\nfunction getNodeAtPath(tree, path) {\n  let node = tree;\n  for (const part of path.split('/')) {\n    if (!node.has(part)) {\n      node.set(part, new Map());\n    }\n    const innerNode = node.get(part);\n    (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(innerNode instanceof Map, 'expected tree');\n    node = innerNode;\n  }\n  return node;\n}\nfunction getFilename(path) {\n  return path.replace(/.*\\//, '');\n}\nfunction getDirname(path) {\n  return path.replace(/\\/[^/]+$/, '');\n}\nfunction toTreeChanges(changes) {\n  const changesRoot = new Map();\n  for (const deletion of changes.deletions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(deletion));\n    parentTree.set(getFilename(deletion), 'delete');\n  }\n  for (const addition of changes.additions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(addition.path));\n    parentTree.set(getFilename(addition.path), addition.contents);\n  }\n  return changesRoot;\n}\nconst SPACE_CHAR_CODE = 32;\nconst space = new Uint8Array([SPACE_CHAR_CODE]);\nconst nullchar = new Uint8Array([0]);\nconst tree = textEncoder$2.encode('tree ');\n\n// based on https://github.com/isomorphic-git/isomorphic-git/blob/c09dfa20ffe0ab9e6602e0fa172d72ba8994e443/src/models/GitTree.js#L108-L122\nfunction treeSha(children) {\n  const entries = [...children].map(([name, node]) => ({\n    name,\n    sha: node.entry.sha,\n    mode: node.entry.mode\n  }));\n  entries.sort((a, b) => {\n    const aName = a.mode === '040000' ? a.name + '/' : a.name;\n    const bName = b.mode === '040000' ? b.name + '/' : b.name;\n    return aName === bName ? 0 : aName < bName ? -1 : 1;\n  });\n  const treeObject = entries.flatMap(entry => {\n    const mode = textEncoder$2.encode(entry.mode.replace(/^0/, ''));\n    const name = textEncoder$2.encode(entry.name);\n    const sha = hexToBytes(entry.sha);\n    return [mode, space, name, nullchar, sha];\n  });\n  return sha1(concatBytes([tree, textEncoder$2.encode(treeObject.reduce((sum, val) => sum + val.byteLength, 0).toString()), nullchar, ...treeObject]));\n}\nfunction concatBytes(byteArrays) {\n  const totalLength = byteArrays.reduce((sum, arr) => sum + arr.byteLength, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of byteArrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\nfunction hexToBytes(str) {\n  const bytes = new Uint8Array(str.length / 2);\n  for (var i = 0; i < bytes.byteLength; i += 1) {\n    const start = i * 2;\n    bytes[i] = parseInt(str.slice(start, start + 2), 16);\n  }\n  return bytes;\n}\nasync function createTreeNodeEntry(path, children) {\n  const sha = await treeSha(children);\n  return {\n    path,\n    mode: '040000',\n    type: 'tree',\n    sha\n  };\n}\nasync function createBlobNodeEntry(path, contents) {\n  const sha = 'sha' in contents ? contents.sha : await blobSha(contents);\n  return {\n    path,\n    mode: '100644',\n    type: 'blob',\n    sha,\n    size: contents.byteLength\n  };\n}\nasync function updateTreeWithChanges(tree, changes) {\n  var _await$updateTree;\n  const newTree = (_await$updateTree = await updateTree(tree, toTreeChanges(changes), [])) !== null && _await$updateTree !== void 0 ? _await$updateTree : new Map();\n  return {\n    entries: treeToEntries(newTree),\n    sha: await treeSha(newTree !== null && newTree !== void 0 ? newTree : new Map())\n  };\n}\nfunction treeToEntries(tree) {\n  return [...tree.values()].flatMap(x => x.children ? [x.entry, ...treeToEntries(x.children)] : [x.entry]);\n}\nasync function updateTree(tree, changedTree, path) {\n  const newTree = new Map(tree);\n  for (const [key, value] of changedTree) {\n    if (value === 'delete') {\n      newTree.delete(key);\n    }\n    if (value instanceof Map) {\n      var _newTree$get$children, _newTree$get;\n      const existingChildren = (_newTree$get$children = (_newTree$get = newTree.get(key)) === null || _newTree$get === void 0 ? void 0 : _newTree$get.children) !== null && _newTree$get$children !== void 0 ? _newTree$get$children : new Map();\n      const children = await updateTree(existingChildren, value, path.concat(key));\n      if (children === undefined) {\n        newTree.delete(key);\n        continue;\n      }\n      const entry = await createTreeNodeEntry(path.concat(key).join('/'), children);\n      newTree.set(key, {\n        entry,\n        children\n      });\n    }\n    if (value instanceof Uint8Array || typeof value === 'object' && 'sha' in value) {\n      const entry = await createBlobNodeEntry(path.concat(key).join('/'), value);\n      newTree.set(key, {\n        entry\n      });\n    }\n  }\n  if (newTree.size === 0) {\n    return undefined;\n  }\n  return newTree;\n}\nfunction treeEntriesToTreeNodes(entries) {\n  const root = new Map();\n  const getChildrenAtPath = parts => {\n    var _node;\n    if (parts.length === 0) {\n      return root;\n    }\n    let node = root.get(parts[0]);\n    for (const part of parts.slice(1)) {\n      if (!node) return undefined;\n      if (!node.children) return undefined;\n      node = node.children.get(part);\n    }\n    return (_node = node) === null || _node === void 0 ? void 0 : _node.children;\n  };\n  for (const entry of entries) {\n    const split = entry.path.split('/');\n    const children = getChildrenAtPath(split.slice(0, -1));\n    if (children) {\n      children.set(split[split.length - 1], {\n        entry,\n        children: entry.type === 'tree' ? new Map() : undefined\n      });\n    }\n  }\n  return root;\n}\n\nfunction collectDirectoriesUsedInSchemaInner(schema, directories, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return;\n  }\n  seenSchemas.add(schema);\n  if (schema.kind === 'array') {\n    return collectDirectoriesUsedInSchemaInner(schema.element, directories, seenSchemas);\n  }\n  if (schema.kind === 'child') {\n    return;\n  }\n  if (schema.kind === 'form') {\n    if (schema.formKind === 'asset' && schema.directory !== undefined) {\n      directories.add(fixPath(schema.directory));\n    }\n    if (schema.formKind === 'content' && schema.directories !== undefined) {\n      for (const directory of schema.directories) {\n        directories.add(fixPath(directory));\n      }\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const field of Object.values(schema.fields)) {\n      collectDirectoriesUsedInSchemaInner(field, directories, seenSchemas);\n    }\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    for (const innerSchema of Object.values(schema.values)) {\n      collectDirectoriesUsedInSchemaInner(innerSchema, directories, seenSchemas);\n    }\n    return;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction collectDirectoriesUsedInSchema(schema) {\n  const directories = new Set();\n  collectDirectoriesUsedInSchemaInner(schema, directories, new Set());\n  return directories;\n}\nfunction getDirectoriesForTreeKey(schema, directory, slug, format) {\n  const directories = [fixPath(directory)];\n  if (format.dataLocation === 'outer') {\n    directories.push(fixPath(directory) + getDataFileExtension(format));\n  }\n  const toAdd = slug === undefined ? '' : `/${slug}`;\n  for (const directory of collectDirectoriesUsedInSchema(schema)) {\n    directories.push(directory + toAdd);\n  }\n  return directories;\n}\nfunction getTreeKey(directories, tree) {\n  return directories.map(d => {\n    var _getTreeNodeAtPath;\n    return (_getTreeNodeAtPath = getTreeNodeAtPath(tree, d)) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.entry.sha;\n  }).join('-');\n}\n\nvar pkgJson = {\n\tname: \"@keystatic/core\",\n\tversion: \"0.2.12\",\n\tlicense: \"MIT\",\n\trepository: {\n\t\ttype: \"git\",\n\t\turl: \"https://github.com/Thinkmill/keystatic/\",\n\t\tdirectory: \"packages/keystatic\"\n\t},\n\texports: {\n\t\t\"./ui\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.node.esm.js\",\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./ui/dist/keystatic-core-ui.react-server.esm.js\",\n\t\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./ui/dist/keystatic-core-ui.esm.js\",\n\t\t\t\"import\": \"./ui/dist/keystatic-core-ui.cjs.mjs\",\n\t\t\t\"default\": \"./ui/dist/keystatic-core-ui.cjs.js\"\n\t\t},\n\t\t\".\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./dist/keystatic-core.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./dist/keystatic-core.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./dist/keystatic-core.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./dist/keystatic-core.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./dist/keystatic-core.node.esm.js\",\n\t\t\t\t\"import\": \"./dist/keystatic-core.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./dist/keystatic-core.react-server.esm.js\",\n\t\t\t\t\"import\": \"./dist/keystatic-core.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./dist/keystatic-core.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./dist/keystatic-core.esm.js\",\n\t\t\t\"import\": \"./dist/keystatic-core.cjs.mjs\",\n\t\t\t\"default\": \"./dist/keystatic-core.cjs.js\"\n\t\t},\n\t\t\"./api/utils\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.node.esm.js\",\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.react-server.esm.js\",\n\t\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./api/utils/dist/keystatic-core-api-utils.esm.js\",\n\t\t\t\"import\": \"./api/utils/dist/keystatic-core-api-utils.cjs.mjs\",\n\t\t\t\"default\": \"./api/utils/dist/keystatic-core-api-utils.cjs.js\"\n\t\t},\n\t\t\"./renderer\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.node.esm.js\",\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.react-server.esm.js\",\n\t\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./renderer/dist/keystatic-core-renderer.esm.js\",\n\t\t\t\"import\": \"./renderer/dist/keystatic-core-renderer.cjs.mjs\",\n\t\t\t\"default\": \"./renderer/dist/keystatic-core-renderer.cjs.js\"\n\t\t},\n\t\t\"./api/generic\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.node.esm.js\",\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.react-server.esm.js\",\n\t\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./api/generic/dist/keystatic-core-api-generic.esm.js\",\n\t\t\t\"import\": \"./api/generic/dist/keystatic-core-api-generic.cjs.mjs\",\n\t\t\t\"default\": \"./api/generic/dist/keystatic-core-api-generic.cjs.js\"\n\t\t},\n\t\t\"./reader\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.node.esm.js\",\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./reader/dist/keystatic-core-reader.react-server.esm.js\",\n\t\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./reader/dist/keystatic-core-reader.esm.js\",\n\t\t\t\"import\": \"./reader/dist/keystatic-core-reader.cjs.mjs\",\n\t\t\t\"default\": \"./reader/dist/keystatic-core-reader.cjs.js\"\n\t\t},\n\t\t\"./reader/github\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.node.esm.js\",\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.react-server.esm.js\",\n\t\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./reader/github/dist/keystatic-core-reader-github.esm.js\",\n\t\t\t\"import\": \"./reader/github/dist/keystatic-core-reader-github.cjs.mjs\",\n\t\t\t\"default\": \"./reader/github/dist/keystatic-core-reader-github.cjs.js\"\n\t\t},\n\t\t\"./content-components\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.node.esm.js\",\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.react-server.esm.js\",\n\t\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./content-components/dist/keystatic-core-content-components.esm.js\",\n\t\t\t\"import\": \"./content-components/dist/keystatic-core-content-components.cjs.mjs\",\n\t\t\t\"default\": \"./content-components/dist/keystatic-core-content-components.cjs.js\"\n\t\t},\n\t\t\"./component-blocks\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.node.esm.js\",\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.react-server.esm.js\",\n\t\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./component-blocks/dist/keystatic-core-component-blocks.esm.js\",\n\t\t\t\"import\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.mjs\",\n\t\t\t\"default\": \"./component-blocks/dist/keystatic-core-component-blocks.cjs.js\"\n\t\t},\n\t\t\"./form/fields/markdoc\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.js\"\n\t\t\t},\n\t\t\tnode: {\n\t\t\t\t\"react-server\": {\n\t\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.esm.js\",\n\t\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.cjs.mjs\",\n\t\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.react-server.cjs.js\"\n\t\t\t\t},\n\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.esm.js\",\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.node.cjs.js\"\n\t\t\t},\n\t\t\t\"react-server\": {\n\t\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.esm.js\",\n\t\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.cjs.mjs\",\n\t\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.react-server.cjs.js\"\n\t\t\t},\n\t\t\tmodule: \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.esm.js\",\n\t\t\t\"import\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.mjs\",\n\t\t\t\"default\": \"./form/fields/markdoc/dist/keystatic-core-form-fields-markdoc.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\"\n\t},\n\tmain: \"dist/keystatic-core.cjs.js\",\n\tmodule: \"dist/keystatic-core.esm.js\",\n\tfiles: [\n\t\t\"dist\",\n\t\t\"api\",\n\t\t\"reader\",\n\t\t\"renderer\",\n\t\t\"ui\",\n\t\t\"form\",\n\t\t\"component-blocks\",\n\t\t\"content-components\"\n\t],\n\tscripts: {\n\t\tsetup: \"ts-gql build && tsx scripts/l10n.ts && tsx scripts/build-prism.ts\",\n\t\tbuild: \"pnpm run setup && next build\",\n\t\tdev: \"next dev\",\n\t\tstart: \"next start\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@braintree/sanitize-url\": \"^6.0.2\",\n\t\t\"@emotion/css\": \"^11.9.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"@floating-ui/react\": \"^0.24.0\",\n\t\t\"@internationalized/string\": \"^3.1.1\",\n\t\t\"@keystar/ui\": \"^0.4.9\",\n\t\t\"@markdoc/markdoc\": \"^0.3.0\",\n\t\t\"@react-aria/focus\": \"^3.14.3\",\n\t\t\"@react-aria/i18n\": \"^3.8.0\",\n\t\t\"@react-aria/interactions\": \"^3.19.1\",\n\t\t\"@react-aria/overlays\": \"^3.18.1\",\n\t\t\"@react-aria/selection\": \"^3.17.1\",\n\t\t\"@react-aria/utils\": \"^3.21.1\",\n\t\t\"@react-aria/visually-hidden\": \"^3.8.6\",\n\t\t\"@react-stately/collections\": \"^3.10.2\",\n\t\t\"@react-stately/list\": \"^3.10.0\",\n\t\t\"@react-stately/overlays\": \"^3.6.3\",\n\t\t\"@react-stately/utils\": \"^3.8.0\",\n\t\t\"@react-types/shared\": \"^3.21.0\",\n\t\t\"@sindresorhus/slugify\": \"^1.1.2\",\n\t\t\"@ts-gql/tag\": \"^0.7.0\",\n\t\t\"@types/node\": \"16.11.13\",\n\t\t\"@types/react\": \"^18.2.8\",\n\t\t\"@types/react-dom\": \"^18.0.11\",\n\t\t\"@urql/core\": \"^4.1.3\",\n\t\t\"@urql/exchange-auth\": \"^2.1.6\",\n\t\t\"@urql/exchange-graphcache\": \"^6.3.3\",\n\t\t\"@urql/exchange-persisted\": \"^4.1.0\",\n\t\tcookie: \"^0.5.0\",\n\t\temery: \"^1.4.1\",\n\t\t\"escape-string-regexp\": \"^4.0.0\",\n\t\t\"fast-deep-equal\": \"^3.1.3\",\n\t\tgraphql: \"^16.6.0\",\n\t\t\"idb-keyval\": \"^6.2.1\",\n\t\tignore: \"^5.2.4\",\n\t\t\"iron-webcrypto\": \"^0.10.1\",\n\t\t\"is-hotkey\": \"^0.2.0\",\n\t\t\"js-base64\": \"^3.7.5\",\n\t\t\"js-yaml\": \"^4.1.0\",\n\t\t\"lru-cache\": \"^7.14.1\",\n\t\t\"match-sorter\": \"^6.3.1\",\n\t\t\"mdast-util-from-markdown\": \"^0.8.5\",\n\t\t\"mdast-util-gfm-autolink-literal\": \"^0.1.3\",\n\t\t\"mdast-util-gfm-strikethrough\": \"^0.2.3\",\n\t\t\"micromark-extension-gfm-autolink-literal\": \"0.5.7\",\n\t\t\"micromark-extension-gfm-strikethrough\": \"0.6.5\",\n\t\tminimatch: \"^7.1.0\",\n\t\t\"prosemirror-commands\": \"^1.5.1\",\n\t\t\"prosemirror-history\": \"^1.3.0\",\n\t\t\"prosemirror-keymap\": \"^1.2.1\",\n\t\t\"prosemirror-model\": \"^1.19.0\",\n\t\t\"prosemirror-state\": \"^1.4.2\",\n\t\t\"prosemirror-tables\": \"^1.3.4\",\n\t\t\"prosemirror-transform\": \"^1.7.1\",\n\t\t\"prosemirror-view\": \"^1.30.2\",\n\t\t\"scroll-into-view-if-needed\": \"^3.0.3\",\n\t\tslate: \"^0.91.4\",\n\t\t\"slate-history\": \"^0.86.0\",\n\t\t\"slate-react\": \"^0.91.9\",\n\t\turql: \"^4.0.0\",\n\t\tzod: \"^3.20.2\"\n\t},\n\tdevDependencies: {\n\t\t\"@jest/expect\": \"^29.7.0\",\n\t\t\"@jest/globals\": \"^29.7.0\",\n\t\t\"@testing-library/user-event\": \"^14.4.3\",\n\t\t\"@ts-gql/compiler\": \"^0.16.1\",\n\t\t\"@ts-gql/eslint-plugin\": \"^0.8.5\",\n\t\t\"@ts-gql/next\": \"^17.0.0\",\n\t\t\"@types/cookie\": \"^0.5.1\",\n\t\t\"@types/is-hotkey\": \"^0.1.7\",\n\t\t\"@types/js-yaml\": \"^4.0.5\",\n\t\t\"@types/prismjs\": \"^1.26.0\",\n\t\t\"@types/signal-exit\": \"^3.0.1\",\n\t\teslint: \"^8.18.0\",\n\t\t\"fast-glob\": \"^3.2.12\",\n\t\t\"jest-diff\": \"^29.0.1\",\n\t\toutdent: \"^0.8.0\",\n\t\t\"pretty-format\": \"^29.0.1\",\n\t\tprismjs: \"^1.29.0\",\n\t\treact: \"^18.2.0\",\n\t\t\"react-dom\": \"^18.2.0\",\n\t\t\"react-element-to-jsx-string\": \"^15.0.0\",\n\t\t\"resize-observer-polyfill\": \"^1.5.1\",\n\t\t\"signal-exit\": \"^3.0.7\",\n\t\t\"slate-hyperscript\": \"^0.77.0\",\n\t\ttsx: \"^3.8.0\",\n\t\ttypescript: \"^5.2.2\"\n\t},\n\tpeerDependencies: {\n\t\treact: \"^18.2.0\",\n\t\t\"react-dom\": \"^18.2.0\"\n\t},\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"index.ts\",\n\t\t\t\"api/generic.ts\",\n\t\t\t\"api/utils.ts\",\n\t\t\t\"reader/index.ts\",\n\t\t\t\"reader/github.ts\",\n\t\t\t\"renderer.tsx\",\n\t\t\t\"ui.tsx\",\n\t\t\t\"form/fields/markdoc/index.tsx\",\n\t\t\t\"component-blocks/index.tsx\",\n\t\t\t\"content-components.ts\"\n\t\t]\n\t},\n\t\"ts-gql\": {\n\t\tschema: \"./github.graphql\",\n\t\tmode: \"no-transform\",\n\t\taddTypename: false,\n\t\tscalars: {\n\t\t\tGitObjectID: \"string\"\n\t\t}\n\t},\n\timports: {\n\t\t\"#react-cache-in-react-server\": {\n\t\t\t\"react-server\": \"./src/reader/react-server-cache.ts\",\n\t\t\t\"default\": \"./src/reader/noop-cache.ts\"\n\t\t},\n\t\t\"#sha1\": {\n\t\t\tnode: \"./src/sha1/node.ts\",\n\t\t\t\"default\": \"./src/sha1/webcrypto.ts\"\n\t\t},\n\t\t\"#webcrypto\": {\n\t\t\tnode: \"./src/api/webcrypto/node.ts\",\n\t\t\t\"default\": \"./src/api/webcrypto/default.ts\"\n\t\t},\n\t\t\"#api-handler\": {\n\t\t\tnode: \"./src/api/api-node.ts\",\n\t\t\t\"default\": \"./src/api/api-noop.ts\"\n\t\t},\n\t\t\"#field-ui/*\": {\n\t\t\t\"react-server\": \"./src/form/fields/empty-field-ui.tsx\",\n\t\t\t\"default\": \"./src/form/fields/*/ui.tsx\"\n\t\t},\n\t\t\"#component-block-primitives\": {\n\t\t\t\"react-server\": \"./src/form/fields/document/DocumentEditor/primitives/blank-for-react-server.tsx\",\n\t\t\t\"default\": \"./src/form/fields/document/DocumentEditor/primitives/index.tsx\"\n\t\t},\n\t\t\"#cloud-image-preview\": {\n\t\t\t\"react-server\": \"./src/component-blocks/blank-for-react-server.tsx\",\n\t\t\t\"default\": \"./src/component-blocks/cloud-image-preview.tsx\"\n\t\t}\n\t}\n};\n\nfunction object(fields, opts) {\n  return {\n    ...opts,\n    kind: 'object',\n    fields\n  };\n}\n\nfunction pluralize(count, options) {\n  const {\n    singular,\n    plural = singular + 's',\n    inclusive = true\n  } = options;\n  const variant = count === 1 ? singular : plural;\n  return inclusive ? `${count} ${variant}` : variant;\n}\nfunction getBranchPrefix(config) {\n  return config.storage.kind !== 'local' ? config.storage.branchPrefix : undefined;\n}\nfunction isGitHubConfig(config) {\n  return config.storage.kind === 'github';\n}\nfunction isLocalConfig(config) {\n  return config.storage.kind === 'local';\n}\nfunction isCloudConfig(config) {\n  var _config$cloud;\n  if (config.storage.kind !== 'cloud') return false;\n  if (!((_config$cloud = config.cloud) !== null && _config$cloud !== void 0 && _config$cloud.project) || !config.cloud.project.includes('/')) {\n    throw new Error(`Keystatic is set to \\`storage: { kind: 'cloud' }\\` but \\`cloud.project\\` isn't set.\nconfig({\n  storage: { kind: 'cloud' },\n  cloud: { project: 'team/project' },\n})`);\n  }\n  return true;\n}\nfunction getSplitCloudProject(config) {\n  var _config$cloud2;\n  if (!((_config$cloud2 = config.cloud) !== null && _config$cloud2 !== void 0 && _config$cloud2.project)) return undefined;\n  const [team, project] = config.cloud.project.split('/');\n  return {\n    team,\n    project\n  };\n}\nfunction getRepoPath(config) {\n  return `${config.mainOwner}/${config.mainRepo}`;\n}\nfunction getRepoUrl(config) {\n  return `https://github.com/${getRepoPath(config)}`;\n}\nfunction getSlugFromState(collectionConfig, state) {\n  const value = state[collectionConfig.slugField];\n  const field = collectionConfig.schema[collectionConfig.slugField];\n  if (field.kind !== 'form' || field.formKind !== 'slug') {\n    throw new Error(`slugField is not a slug field`);\n  }\n  return field.serializeWithSlug(value).slug;\n}\nfunction getEntriesInCollectionWithTreeKey(config, collection, rootTree) {\n  var _getTreeNodeAtPath$ch, _getTreeNodeAtPath;\n  const collectionConfig = config.collections[collection];\n  const schema = object(collectionConfig.schema);\n  const formatInfo = getCollectionFormat(config, collection);\n  const extension = getDataFileExtension(formatInfo);\n  const glob = getSlugGlobForCollection(config, collection);\n  const collectionPath = getCollectionPath(config, collection);\n  const directory = (_getTreeNodeAtPath$ch = (_getTreeNodeAtPath = getTreeNodeAtPath(rootTree, collectionPath)) === null || _getTreeNodeAtPath === void 0 ? void 0 : _getTreeNodeAtPath.children) !== null && _getTreeNodeAtPath$ch !== void 0 ? _getTreeNodeAtPath$ch : new Map();\n  const entries = [];\n  const directoriesUsedInSchema = [...collectDirectoriesUsedInSchema(schema)];\n  const suffix = getCollectionItemSlugSuffix(config, collection);\n  const possibleEntries = new Map(directory);\n  if (glob === '**') {\n    const handleDirectory = (dir, prefix) => {\n      for (const [key, entry] of dir) {\n        if (entry.children) {\n          possibleEntries.set(`${prefix}${key}`, entry);\n          handleDirectory(entry.children, `${prefix}${key}/`);\n        } else {\n          possibleEntries.set(`${prefix}${key}`, entry);\n        }\n      }\n    };\n    handleDirectory(directory, '');\n  }\n  for (const [key, entry] of possibleEntries) {\n    if (formatInfo.dataLocation === 'index') {\n      var _actualEntry$children;\n      const actualEntry = getTreeNodeAtPath(rootTree, getCollectionItemPath(config, collection, key));\n      if (!(actualEntry !== null && actualEntry !== void 0 && (_actualEntry$children = actualEntry.children) !== null && _actualEntry$children !== void 0 && _actualEntry$children.has('index' + extension))) continue;\n      entries.push({\n        key: getTreeKey([actualEntry.entry.path, ...directoriesUsedInSchema.map(x => `${x}/${key}`)], rootTree),\n        slug: key\n      });\n    } else {\n      if (suffix) {\n        const newEntry = getTreeNodeAtPath(rootTree, getCollectionItemPath(config, collection, key) + extension);\n        if (!newEntry || newEntry.children) continue;\n        entries.push({\n          key: getTreeKey([entry.entry.path, getCollectionItemPath(config, collection, key), ...directoriesUsedInSchema.map(x => `${x}/${key}`)], rootTree),\n          slug: key\n        });\n      }\n      if (entry.children || !key.endsWith(extension)) continue;\n      const slug = key.slice(0, -extension.length);\n      entries.push({\n        key: getTreeKey([entry.entry.path, getCollectionItemPath(config, collection, slug), ...directoriesUsedInSchema.map(x => `${x}/${slug}`)], rootTree),\n        slug\n      });\n    }\n  }\n  return entries;\n}\nconst KEYSTATIC_CLOUD_API_URL = 'https://api.keystatic.cloud';\nconst KEYSTATIC_CLOUD_HEADERS = {\n  'x-keystatic-version': pkgJson.version\n};\nconst textEncoder$1 = new TextEncoder();\nasync function redirectToCloudAuth(from, config) {\n  var _config$cloud3;\n  if (!((_config$cloud3 = config.cloud) !== null && _config$cloud3 !== void 0 && _config$cloud3.project)) {\n    throw new Error('Not a cloud config');\n  }\n  const code_verifier = (0,js_base64__WEBPACK_IMPORTED_MODULE_5__.fromUint8Array)(crypto.getRandomValues(new Uint8Array(32)), true);\n  const code_challenge = (0,js_base64__WEBPACK_IMPORTED_MODULE_5__.fromUint8Array)(new Uint8Array(await crypto.subtle.digest('SHA-256', textEncoder$1.encode(code_verifier))), true);\n  const state = (0,js_base64__WEBPACK_IMPORTED_MODULE_5__.fromUint8Array)(crypto.getRandomValues(new Uint8Array(32)), true);\n  localStorage.setItem('keystatic-cloud-state', JSON.stringify({\n    state,\n    from,\n    code_verifier\n  }));\n  const url = new URL(`${KEYSTATIC_CLOUD_API_URL}/oauth/authorize`);\n  url.searchParams.set('state', state);\n  url.searchParams.set('client_id', config.cloud.project);\n  url.searchParams.set('redirect_uri', `${window.location.origin}/keystatic/cloud/oauth/callback`);\n  url.searchParams.set('response_type', 'code');\n  url.searchParams.set('code_challenge_method', 'S256');\n  url.searchParams.set('code_challenge', code_challenge);\n  url.searchParams.set('keystatic_version', pkgJson.version);\n  window.location.href = url.toString();\n}\n\nconst tableCellChildren = ['paragraph', 'code', 'heading', 'ordered-list', 'unordered-list', 'divider', 'image'];\nconst blockquoteChildren = [...tableCellChildren, 'table'];\nconst paragraphLike = [...blockquoteChildren, 'blockquote'];\nconst insideOfLayouts = [...paragraphLike, 'component-block'];\nfunction blockContainer(args) {\n  return {\n    kind: 'blocks',\n    allowedChildren: new Set(args.allowedChildren),\n    blockToWrapInlinesIn: args.allowedChildren[0],\n    invalidPositionHandleMode: args.invalidPositionHandleMode\n  };\n}\nfunction inlineContainer(args) {\n  return {\n    kind: 'inlines',\n    invalidPositionHandleMode: args.invalidPositionHandleMode\n  };\n}\nconst editorSchema = {\n  editor: blockContainer({\n    allowedChildren: [...insideOfLayouts, 'layout'],\n    invalidPositionHandleMode: 'move'\n  }),\n  layout: blockContainer({\n    allowedChildren: ['layout-area'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'layout-area': blockContainer({\n    allowedChildren: insideOfLayouts,\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  blockquote: blockContainer({\n    allowedChildren: blockquoteChildren,\n    invalidPositionHandleMode: 'move'\n  }),\n  paragraph: inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  code: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  divider: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  heading: inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'component-block': blockContainer({\n    allowedChildren: ['component-block-prop', 'component-inline-prop'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'component-inline-prop': inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'component-block-prop': blockContainer({\n    allowedChildren: insideOfLayouts,\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'ordered-list': blockContainer({\n    allowedChildren: ['list-item'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'unordered-list': blockContainer({\n    allowedChildren: ['list-item'],\n    invalidPositionHandleMode: 'move'\n  }),\n  'list-item': blockContainer({\n    allowedChildren: ['list-item-content', 'ordered-list', 'unordered-list'],\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  'list-item-content': inlineContainer({\n    invalidPositionHandleMode: 'unwrap'\n  }),\n  image: inlineContainer({\n    invalidPositionHandleMode: 'move'\n  }),\n  table: blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-head', 'table-body']\n  }),\n  'table-body': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-row']\n  }),\n  'table-row': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-cell']\n  }),\n  'table-cell': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: tableCellChildren\n  }),\n  'table-head': blockContainer({\n    invalidPositionHandleMode: 'move',\n    allowedChildren: ['table-row']\n  })\n};\nconst inlineContainerTypes = new Set(Object.entries(editorSchema).filter(([, value]) => value.kind === 'inlines').map(([type]) => type));\nfunction isInlineContainer(node) {\n  return node.type !== undefined && inlineContainerTypes.has(node.type);\n}\nconst blockTypes = new Set(Object.keys(editorSchema).filter(x => x !== 'editor'));\nfunction isBlock(node) {\n  return blockTypes.has(node.type);\n}\n\n// to print the editor schema in Graphviz if you want to visualize it\n// function printEditorSchema(editorSchema: EditorSchema) {\n//   return `digraph G {\n//   concentrate=true;\n//   ${Object.keys(editorSchema)\n//     .map(key => {\n//       let val = editorSchema[key];\n//       if (val.kind === 'inlines') {\n//         return `\"${key}\" -> inlines`;\n//       }\n//       if (val.kind === 'blocks') {\n//         return `\"${key}\" -> {${[...val.allowedChildren].map(x => JSON.stringify(x)).join(' ')}}`;\n//       }\n//     })\n//     .join('\\n  ')}\n// }`;\n// }\n\nfunction getWholeDocumentFeaturesForChildField(editorDocumentFeatures, options) {\n  var _options$formatting, _options$formatting2, _options$formatting3, _options$formatting4, _options$formatting5, _options$formatting6, _options$formatting7;\n  const inlineMarksFromOptions = (_options$formatting = options.formatting) === null || _options$formatting === void 0 ? void 0 : _options$formatting.inlineMarks;\n  const inlineMarks = Object.fromEntries(Object.keys(editorDocumentFeatures.formatting.inlineMarks).map(_mark => {\n    const mark = _mark;\n    return [mark, inlineMarksFromOptions === 'inherit' || (inlineMarksFromOptions === null || inlineMarksFromOptions === void 0 ? void 0 : inlineMarksFromOptions[mark]) === 'inherit' ? editorDocumentFeatures.formatting.inlineMarks[mark] : false];\n  }));\n  const headingLevels = (_options$formatting2 = options.formatting) === null || _options$formatting2 === void 0 ? void 0 : _options$formatting2.headingLevels;\n  return {\n    formatting: {\n      inlineMarks,\n      softBreaks: ((_options$formatting3 = options.formatting) === null || _options$formatting3 === void 0 ? void 0 : _options$formatting3.softBreaks) === 'inherit' && editorDocumentFeatures.formatting.softBreaks,\n      alignment: {\n        center: editorDocumentFeatures.formatting.alignment.center && ((_options$formatting4 = options.formatting) === null || _options$formatting4 === void 0 ? void 0 : _options$formatting4.alignment) === 'inherit',\n        end: editorDocumentFeatures.formatting.alignment.end && ((_options$formatting5 = options.formatting) === null || _options$formatting5 === void 0 ? void 0 : _options$formatting5.alignment) === 'inherit'\n      },\n      blockTypes: ((_options$formatting6 = options.formatting) === null || _options$formatting6 === void 0 ? void 0 : _options$formatting6.blockTypes) === 'inherit' ? editorDocumentFeatures.formatting.blockTypes : {\n        blockquote: false,\n        code: false\n      },\n      headings: headingLevels === 'inherit' ? editorDocumentFeatures.formatting.headings : {\n        levels: headingLevels ? editorDocumentFeatures.formatting.headings.levels.filter(level => headingLevels.includes(level)) : [],\n        schema: editorDocumentFeatures.formatting.headings.schema\n      },\n      listTypes: ((_options$formatting7 = options.formatting) === null || _options$formatting7 === void 0 ? void 0 : _options$formatting7.listTypes) === 'inherit' ? editorDocumentFeatures.formatting.listTypes : {\n        ordered: false,\n        unordered: false\n      }\n    },\n    dividers: options.dividers === 'inherit' ? editorDocumentFeatures.dividers : false,\n    images: options.images === 'inherit' && editorDocumentFeatures.images,\n    layouts: [],\n    links: options.links === 'inherit' && editorDocumentFeatures.links,\n    tables: options.tables === 'inherit' && editorDocumentFeatures.tables\n  };\n}\nfunction getDocumentFeaturesForChildField(editorDocumentFeatures, options) {\n  var _options$formatting8, _options$formatting10, _options$formatting11, _options$formatting12, _options$formatting13, _options$formatting14;\n  // an important note for this: normalization based on document features\n  // is done based on the document features returned here\n  // and the editor document features\n  // so the result for any given child prop will be the things that are\n  // allowed by both these document features\n  // AND the editor document features\n  const inlineMarksFromOptions = (_options$formatting8 = options.formatting) === null || _options$formatting8 === void 0 ? void 0 : _options$formatting8.inlineMarks;\n  const inlineMarks = inlineMarksFromOptions === 'inherit' ? 'inherit' : Object.fromEntries(Object.keys(editorDocumentFeatures.formatting.inlineMarks).map(mark => {\n    return [mark, !!(inlineMarksFromOptions || {})[mark]];\n  }));\n  if (options.kind === 'inline') {\n    var _options$formatting9;\n    return {\n      kind: 'inline',\n      inlineMarks,\n      documentFeatures: {\n        links: options.links === 'inherit'\n      },\n      softBreaks: ((_options$formatting9 = options.formatting) === null || _options$formatting9 === void 0 ? void 0 : _options$formatting9.softBreaks) === 'inherit'\n    };\n  }\n  const headingLevels = (_options$formatting10 = options.formatting) === null || _options$formatting10 === void 0 ? void 0 : _options$formatting10.headingLevels;\n  return {\n    kind: 'block',\n    inlineMarks,\n    softBreaks: ((_options$formatting11 = options.formatting) === null || _options$formatting11 === void 0 ? void 0 : _options$formatting11.softBreaks) === 'inherit',\n    documentFeatures: {\n      layouts: [],\n      dividers: options.dividers === 'inherit' ? editorDocumentFeatures.dividers : false,\n      formatting: {\n        alignment: ((_options$formatting12 = options.formatting) === null || _options$formatting12 === void 0 ? void 0 : _options$formatting12.alignment) === 'inherit' ? editorDocumentFeatures.formatting.alignment : {\n          center: false,\n          end: false\n        },\n        blockTypes: ((_options$formatting13 = options.formatting) === null || _options$formatting13 === void 0 ? void 0 : _options$formatting13.blockTypes) === 'inherit' ? editorDocumentFeatures.formatting.blockTypes : {\n          blockquote: false,\n          code: false\n        },\n        headings: headingLevels === 'inherit' ? editorDocumentFeatures.formatting.headings : {\n          levels: headingLevels ? editorDocumentFeatures.formatting.headings.levels.filter(level => headingLevels.includes(level)) : [],\n          schema: editorDocumentFeatures.formatting.headings.schema\n        },\n        listTypes: ((_options$formatting14 = options.formatting) === null || _options$formatting14 === void 0 ? void 0 : _options$formatting14.listTypes) === 'inherit' ? editorDocumentFeatures.formatting.listTypes : {\n          ordered: false,\n          unordered: false\n        }\n      },\n      links: options.links === 'inherit',\n      images: options.images === 'inherit' ? editorDocumentFeatures.images : false,\n      tables: options.tables === 'inherit'\n    },\n    componentBlocks: options.componentBlocks === 'inherit'\n  };\n}\nfunction getSchemaAtPropPathInner(path, value, schema) {\n  // because we're checking the length here\n  // the non-null asserts on shift below are fine\n  if (path.length === 0) {\n    return schema;\n  }\n  if (schema.kind === 'child' || schema.kind === 'form') {\n    return;\n  }\n  if (schema.kind === 'conditional') {\n    const key = path.shift();\n    if (key === 'discriminant') {\n      return getSchemaAtPropPathInner(path, value.discriminant, schema.discriminant);\n    }\n    if (key === 'value') {\n      const propVal = schema.values[value.discriminant];\n      return getSchemaAtPropPathInner(path, value.value, propVal);\n    }\n    return;\n  }\n  if (schema.kind === 'object') {\n    const key = path.shift();\n    return getSchemaAtPropPathInner(path, value[key], schema.fields[key]);\n  }\n  if (schema.kind === 'array') {\n    const index = path.shift();\n    return getSchemaAtPropPathInner(path, value[index], schema.element);\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction getSchemaAtPropPath(path, value, props) {\n  return getSchemaAtPropPathInner([...path], value, {\n    kind: 'object',\n    fields: props\n  });\n}\nfunction getAncestorSchemas(rootSchema, path, value) {\n  const ancestors = [];\n  const currentPath = [...path];\n  let currentProp = rootSchema;\n  let currentValue = value;\n  while (currentPath.length) {\n    ancestors.push(currentProp);\n    const key = currentPath.shift(); // this code only runs when path.length is truthy so this non-null assertion is fine\n    if (currentProp.kind === 'array') {\n      currentProp = currentProp.element;\n      currentValue = currentValue[key];\n    } else if (currentProp.kind === 'conditional') {\n      currentProp = currentProp.values[value.discriminant];\n      currentValue = currentValue.value;\n    } else if (currentProp.kind === 'object') {\n      currentValue = currentValue[key];\n      currentProp = currentProp.fields[key];\n    } else if (currentProp.kind === 'child' || currentProp.kind === 'form') {\n      throw new Error(`unexpected prop \"${key}\"`);\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(currentProp);\n    }\n  }\n  return ancestors;\n}\nfunction getPlaceholderTextForPropPath(propPath, fields, formProps) {\n  const field = getSchemaAtPropPath(propPath, formProps, fields);\n  if ((field === null || field === void 0 ? void 0 : field.kind) === 'child' && (field.options.kind === 'block' && field.options.editIn !== 'modal' || field.options.kind === 'inline')) {\n    return field.options.placeholder;\n  }\n  return '';\n}\nfunction cloneDescendent(node) {\n  if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node)) {\n    return {\n      ...node,\n      children: node.children.map(cloneDescendent)\n    };\n  }\n  return {\n    ...node\n  };\n}\n\nconst allMarks = ['bold', 'italic', 'underline', 'strikethrough', 'code', 'superscript', 'subscript', 'keyboard'];\nconst isElementActive = (editor, format) => {\n  const [match] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n  return !!match;\n};\nfunction clearFormatting(editor) {\n  slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n    match: node => node.type === 'heading' || node.type === 'blockquote' || node.type === 'code'\n  });\n  slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unsetNodes(editor, allMarks, {\n    match: slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText\n  });\n}\nfunction moveChildren(editor, parent, to, shouldMoveNode = () => true) {\n  const parentPath = slate__WEBPACK_IMPORTED_MODULE_6__.Path.isPath(parent) ? parent : parent[1];\n  const parentNode = slate__WEBPACK_IMPORTED_MODULE_6__.Path.isPath(parent) ? slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(editor, parentPath) : parent[0];\n  if (!isBlock(parentNode)) return;\n  for (let i = parentNode.children.length - 1; i >= 0; i--) {\n    if (shouldMoveNode(parentNode.children[i], i)) {\n      const childPath = [...parentPath, i];\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n        at: childPath,\n        to\n      });\n    }\n  }\n}\n\n/**\n * This is equivalent to Editor.after except that it ignores points that have no content\n * like the point in a void text node, an empty text node and the last point in a text node\n */\n// TODO: this would probably break if you were trying to get the last point in the editor?\nfunction EditorAfterButIgnoringingPointsWithNoContent(editor, at, {\n  distance = 1\n} = {}) {\n  const anchor = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.point(editor, at, {\n    edge: 'end'\n  });\n  const focus = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.end(editor, []);\n  const range = {\n    anchor,\n    focus\n  };\n  let d = 0;\n  let target;\n  for (const p of slate__WEBPACK_IMPORTED_MODULE_6__.Editor.positions(editor, {\n    at: range\n  })) {\n    if (d > distance) {\n      break;\n    }\n\n    // this is the important change\n    const node = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(editor, p.path);\n    if (node.text.length === p.offset) {\n      continue;\n    }\n    if (d !== 0) {\n      target = p;\n    }\n    d++;\n  }\n  return target;\n}\nfunction nodeTypeMatcher(...args) {\n  if (args.length === 1) {\n    const type = args[0];\n    return node => node.type === type;\n  }\n  const set = new Set(args);\n  return node => typeof node.type === 'string' && set.has(node.type);\n}\nfunction getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks) {\n  const ancestorComponentProp = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n    match: nodeTypeMatcher('component-block-prop', 'component-inline-prop')\n  });\n  if (ancestorComponentProp) {\n    const propPath = ancestorComponentProp[0].propPath;\n    const ancestorComponent = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.parent(editor, ancestorComponentProp[1]);\n    if (ancestorComponent[0].type === 'component-block') {\n      const component = ancestorComponent[0].component;\n      const componentBlock = componentBlocks[component];\n      if (componentBlock && propPath) {\n        const childField = getSchemaAtPropPath(propPath, ancestorComponent[0].props, componentBlock.schema);\n        if ((childField === null || childField === void 0 ? void 0 : childField.kind) === 'child') {\n          return getDocumentFeaturesForChildField(editorDocumentFeatures, childField.options);\n        }\n      }\n    }\n  }\n}\n\n// this is used in react-server environments to avoid bundling UI when the reader API is used\n// if you added a new field and get an error that there's missing a missing export here,\n// you probably just need to add another empty export here\n\nfunction empty() {\n  throw new Error(\"unexpected call to function that shouldn't be called in React server component environment\");\n}\nlet SlugFieldInput = empty,\n  TextFieldInput = empty,\n  UrlFieldInput = empty,\n  SelectFieldInput = empty,\n  RelationshipInput = empty,\n  PathReferenceInput = empty,\n  MultiselectFieldInput = empty,\n  IntegerFieldInput = empty,\n  ImageFieldInput = empty,\n  FileFieldInput = empty,\n  DatetimeFieldInput = empty,\n  DateFieldInput = empty,\n  CloudImageFieldInput = empty,\n  BlocksFieldInput = empty,\n  DocumentFieldInput = empty,\n  CheckboxFieldInput = empty,\n  createEditorSchema = empty,\n  getDefaultValue = empty,\n  parseToEditorState = empty,\n  serializeFromEditorState = empty;\n\nclass FieldDataError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'FieldDataError';\n  }\n}\n\nfunction assertRequired(value, validation, label) {\n  if (value === null && validation !== null && validation !== void 0 && validation.isRequired) {\n    throw new FieldDataError(`${label} is required`);\n  }\n}\nfunction basicFormFieldWithSimpleReaderParse(config) {\n  return {\n    kind: 'form',\n    Input: config.Input,\n    defaultValue: config.defaultValue,\n    parse: config.parse,\n    serialize: config.serialize,\n    validate: config.validate,\n    reader: {\n      parse(value) {\n        return config.validate(config.parse(value));\n      }\n    }\n  };\n}\n\nconst arrayValuesToElementKeys = new WeakMap();\nlet counter = 0;\nfunction getKeysForArrayValue(value) {\n  if (!arrayValuesToElementKeys.has(value)) {\n    arrayValuesToElementKeys.set(value, Array.from({\n      length: value.length\n    }, getNewArrayElementKey));\n  }\n  return arrayValuesToElementKeys.get(value);\n}\nfunction setKeysForArrayValue(value, elementIds) {\n  arrayValuesToElementKeys.set(value, elementIds);\n}\nfunction getNewArrayElementKey() {\n  return (counter++).toString();\n}\nconst getInitialPropsValue = _getInitialPropsValue;\nfunction _getInitialPropsValue(schema) {\n  switch (schema.kind) {\n    case 'form':\n      return schema.defaultValue();\n    case 'child':\n      return schema.options.kind === 'block' ? [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }] : null;\n    case 'conditional':\n      {\n        const defaultValue = schema.discriminant.defaultValue();\n        return {\n          discriminant: defaultValue,\n          value: getInitialPropsValue(schema.values[defaultValue.toString()])\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = getInitialPropsValue(schema.fields[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        return [];\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction getInitialPropsValueFromInitializer(schema, initializer) {\n  switch (schema.kind) {\n    case 'form':\n      return initializer === undefined ? schema.defaultValue() : initializer;\n    case 'child':\n      return initializer !== null && initializer !== void 0 ? initializer : schema.options.kind === 'block' ? [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }] : null;\n    case 'conditional':\n      {\n        const defaultValue = initializer === undefined ? schema.discriminant.defaultValue() : initializer.discriminant;\n        return {\n          discriminant: defaultValue,\n          value: getInitialPropsValueFromInitializer(schema.values[defaultValue.toString()], initializer === undefined ? undefined : initializer.value)\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = getInitialPropsValueFromInitializer(schema.fields[key], initializer === undefined ? undefined : initializer[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        return (initializer !== null && initializer !== void 0 ? initializer : []).map(x => getInitialPropsValueFromInitializer(schema.element, x.value));\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\nfunction updateValue(schema, currentValue, updater) {\n  if (updater === undefined) return currentValue;\n  switch (schema.kind) {\n    case 'form':\n      return updater;\n    case 'child':\n      return updater;\n    case 'conditional':\n      {\n        return {\n          discriminant: updater.discriminant,\n          value: updater.discriminant === currentValue.discriminant ? updateValue(schema.values[updater.discriminant.toString()], currentValue.value, updater.value) : getInitialPropsValueFromInitializer(schema.values[updater.discriminant.toString()], updater.value)\n        };\n      }\n    case 'object':\n      {\n        const obj = {};\n        for (const key of Object.keys(schema.fields)) {\n          obj[key] = updateValue(schema.fields[key], currentValue[key], updater[key]);\n        }\n        return obj;\n      }\n    case 'array':\n      {\n        const currentArrVal = currentValue;\n        const newVal = updater;\n        const uniqueKeys = new Set();\n        for (const x of newVal) {\n          if (x.key !== undefined) {\n            if (uniqueKeys.has(x.key)) {\n              throw new Error('Array elements must have unique keys');\n            }\n            uniqueKeys.add(x.key);\n          }\n        }\n        const keys = newVal.map(x => {\n          if (x.key !== undefined) return x.key;\n          let elementKey = getNewArrayElementKey();\n          // just in case someone gives a key that is above our counter\n          while (uniqueKeys.has(elementKey)) {\n            elementKey = getNewArrayElementKey();\n          }\n          uniqueKeys.add(elementKey);\n          return elementKey;\n        });\n        const prevKeys = getKeysForArrayValue(currentArrVal);\n        const prevValuesByKey = new Map(currentArrVal.map((value, i) => {\n          return [prevKeys[i], value];\n        }));\n        const val = newVal.map((x, i) => {\n          const id = keys[i];\n          if (prevValuesByKey.has(id)) {\n            return updateValue(schema.element, prevValuesByKey.get(id), x.value);\n          }\n          return getInitialPropsValueFromInitializer(schema.element, x.value);\n        });\n        setKeysForArrayValue(val, keys);\n        return val;\n      }\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nfunction getValueAtPropPath(value, inputPath) {\n  const path = [...inputPath];\n  while (path.length) {\n    const key = path.shift();\n    value = value[key];\n  }\n  return value;\n}\nfunction traverseProps(schema, value, visitor, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    visitor(schema, value, path);\n    return;\n  }\n  if (schema.kind === 'object') {\n    for (const [key, childProp] of Object.entries(schema.fields)) {\n      traverseProps(childProp, value[key], visitor, [...path, key]);\n    }\n    visitor(schema, value, path);\n    return;\n  }\n  if (schema.kind === 'array') {\n    for (const [idx, val] of value.entries()) {\n      traverseProps(schema.element, val, visitor, path.concat(idx));\n    }\n    return visitor(schema, value, path);\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = value.discriminant;\n    visitor(schema, discriminant, path.concat('discriminant'));\n    traverseProps(schema.values[discriminant.toString()], value.value, visitor, path.concat('value'));\n    visitor(schema, value, path);\n    return;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\nfunction transformProps(schema, value, visitors, path = []) {\n  if (schema.kind === 'form' || schema.kind === 'child') {\n    if (visitors[schema.kind]) {\n      return visitors[schema.kind](schema, value, path);\n    }\n    return value;\n  }\n  if (schema.kind === 'object') {\n    const val = Object.fromEntries(Object.entries(schema.fields).map(([key, val]) => {\n      return [key, transformProps(val, value[key], visitors, [...path, key])];\n    }));\n    if (visitors.object) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'array') {\n    const val = value.map((val, idx) => transformProps(schema.element, val, visitors, path.concat(idx)));\n    if (visitors.array) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  if (schema.kind === 'conditional') {\n    const discriminant = transformProps(schema.discriminant, value.discriminant, visitors, path.concat('discriminant'));\n    const conditionalVal = transformProps(schema.values[discriminant.toString()], value.value, visitors, path.concat('value'));\n    const val = {\n      discriminant,\n      value: conditionalVal\n    };\n    if (visitors.conditional) {\n      return visitors[schema.kind](schema, val, path);\n    }\n    return val;\n  }\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\nfunction replaceValueAtPropPath(schema, value, newValue, path) {\n  if (path.length === 0) {\n    return newValue;\n  }\n  const [key, ...newPath] = path;\n  if (schema.kind === 'object') {\n    return {\n      ...value,\n      [key]: replaceValueAtPropPath(schema.fields[key], value[key], newValue, newPath)\n    };\n  }\n  if (schema.kind === 'conditional') {\n    const conditionalValue = value;\n    // replaceValueAtPropPath should not be used to only update the discriminant of a conditional field\n    // if you want to update the discriminant of a conditional field, replace the value of the whole conditional field\n    (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assert)(key === 'value');\n    return {\n      discriminant: conditionalValue.discriminant,\n      value: replaceValueAtPropPath(schema.values[key], conditionalValue.value, newValue, newPath)\n    };\n  }\n  if (schema.kind === 'array') {\n    const prevVal = value;\n    const newVal = [...prevVal];\n    setKeysForArrayValue(newVal, getKeysForArrayValue(prevVal));\n    newVal[key] = replaceValueAtPropPath(schema.element, newVal[key], newValue, newPath);\n    return newVal;\n  }\n\n  // we should never reach here since form or child fields don't contain other fields\n  // so the only thing that can happen to them is to be replaced which happens at the start of this function when path.length === 0\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assert)(schema.kind !== 'form' && schema.kind !== 'child');\n  (0,emery_assertions__WEBPACK_IMPORTED_MODULE_0__.assertNever)(schema);\n}\n\n// a v important note\n// marks in the markdown ast/html are represented quite differently to how they are in slate\n// if you had the markdown **something https://keystonejs.com something**\n// the bold node is the parent of the link node\n// but in slate, marks are only represented on text nodes\n\nconst currentlyActiveMarks = new Set();\nconst currentlyDisabledMarks = new Set();\nlet currentLink = null;\nfunction addMarkToChildren(mark, cb) {\n  const wasPreviouslyActive = currentlyActiveMarks.has(mark);\n  currentlyActiveMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyActive) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction setLinkForChildren(href, cb) {\n  // we'll only use the outer link\n  if (currentLink !== null) {\n    return cb();\n  }\n  currentLink = href;\n  try {\n    return cb();\n  } finally {\n    currentLink = null;\n  }\n}\nfunction addMarksToChildren(marks, cb) {\n  const marksToRemove = new Set();\n  for (const mark of marks) {\n    if (!currentlyActiveMarks.has(mark)) {\n      marksToRemove.add(mark);\n    }\n    currentlyActiveMarks.add(mark);\n  }\n  try {\n    return cb();\n  } finally {\n    for (const mark of marksToRemove) {\n      currentlyActiveMarks.delete(mark);\n    }\n  }\n}\nfunction forceDisableMarkForChildren(mark, cb) {\n  const wasPreviouslyDisabled = currentlyDisabledMarks.has(mark);\n  currentlyDisabledMarks.add(mark);\n  try {\n    return cb();\n  } finally {\n    if (!wasPreviouslyDisabled) {\n      currentlyDisabledMarks.delete(mark);\n    }\n  }\n}\n\n/**\n * This type is more strict than `Element & { type: 'link'; }` because `children`\n * is constrained to only contain Text nodes. This can't be assumed generally around the editor\n * (because of potentially future inline components or nested links(which are normalized away but the editor needs to not break if it happens))\n * but where this type is used, we're only going to allow links to contain Text and that's important\n * so that we know a block will never be inside an inline because Slate gets unhappy when that happens\n * (really the link inline should probably be a mark rather than an inline,\n * non-void inlines are probably always bad but that would imply changing the document\n * structure which would be such unnecessary breakage)\n */\n\nfunction getInlineNodes(text) {\n  const node = {\n    text\n  };\n  for (const mark of currentlyActiveMarks) {\n    if (!currentlyDisabledMarks.has(mark)) {\n      node[mark] = true;\n    }\n  }\n  if (currentLink !== null) {\n    return [{\n      text: ''\n    }, {\n      type: 'link',\n      href: currentLink,\n      children: [node]\n    }, {\n      text: ''\n    }];\n  }\n  return [node];\n}\n\nclass VariableChildFields extends Error {\n  constructor() {\n    super('There are a variable number of child fields');\n  }\n}\nfunction findSingleChildField(schema) {\n  try {\n    const result = _findConstantChildFields(schema, [], new Set());\n    if (result.length === 1) {\n      return result[0];\n    }\n    return;\n  } catch (err) {\n    if (err instanceof VariableChildFields) {\n      return;\n    }\n    throw err;\n  }\n}\nfunction _findConstantChildFields(schema, path, seenSchemas) {\n  if (seenSchemas.has(schema)) {\n    return [];\n  }\n  seenSchemas.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        relativePath: path,\n        options: schema.options,\n        kind: 'child'\n      }];\n    case 'conditional':\n      {\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'array':\n      {\n        if (schema.asChildTag) {\n          const child = _findConstantChildFields(schema.element, [], seenSchemas);\n          if (child.length > 1) {\n            return [];\n          }\n          return [{\n            kind: 'array',\n            asChildTag: schema.asChildTag,\n            field: schema,\n            relativePath: path,\n            child: child[0]\n          }];\n        }\n        if (couldContainChildField(schema)) {\n          throw new VariableChildFields();\n        }\n        return [];\n      }\n    case 'object':\n      {\n        const paths = [];\n        for (const [key, value] of Object.entries(schema.fields)) {\n          paths.push(..._findConstantChildFields(value, path.concat(key), seenSchemas));\n        }\n        return paths;\n      }\n  }\n}\nfunction couldContainChildField(schema, seen = new Set()) {\n  if (seen.has(schema)) {\n    return false;\n  }\n  seen.add(schema);\n  switch (schema.kind) {\n    case 'form':\n      return false;\n    case 'child':\n      return true;\n    case 'conditional':\n      return Object.values(schema.values).some(value => couldContainChildField(value, seen));\n    case 'object':\n      return Object.keys(schema.fields).some(key => couldContainChildField(schema.fields[key], seen));\n    case 'array':\n      return couldContainChildField(schema.element, seen);\n  }\n}\n\nfunction inlineNodeFromMarkdoc(node) {\n  if (node.type === 'inline') {\n    return inlineChildrenFromMarkdoc(node.children);\n  }\n  if (node.type === 'link') {\n    return setLinkForChildren(node.attributes.href, () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'text') {\n    return getInlineNodes(node.attributes.content);\n  }\n  if (node.type === 'strong') {\n    return addMarkToChildren('bold', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'code') {\n    return addMarkToChildren('code', () => getInlineNodes(node.attributes.content));\n  }\n  if (node.type === 'em') {\n    return addMarkToChildren('italic', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 's') {\n    return addMarkToChildren('strikethrough', () => inlineChildrenFromMarkdoc(node.children));\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'u') {\n      return addMarkToChildren('underline', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'kbd') {\n      return addMarkToChildren('keyboard', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sub') {\n      return addMarkToChildren('subscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n    if (node.tag === 'sup') {\n      return addMarkToChildren('superscript', () => inlineChildrenFromMarkdoc(node.children));\n    }\n  }\n  if (node.type === 'softbreak') {\n    return getInlineNodes(' ');\n  }\n  if (node.type === 'hardbreak') {\n    return getInlineNodes('\\n');\n  }\n  if (node.tag === 'component-inline-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n    return {\n      type: 'component-inline-prop',\n      children: inlineFromMarkdoc(node.children),\n      propPath: node.attributes.propPath\n    };\n  }\n  throw new Error(`Unknown inline node type: ${node.type}`);\n}\nfunction inlineChildrenFromMarkdoc(nodes) {\n  return nodes.flatMap(inlineNodeFromMarkdoc);\n}\nfunction inlineFromMarkdoc(nodes) {\n  const transformedNodes = nodes.flatMap(inlineNodeFromMarkdoc);\n  const nextNodes = [];\n  let lastNode;\n  for (const [idx, node] of transformedNodes.entries()) {\n    var _lastNode;\n    if (node.type === undefined && node.text === '' && ((_lastNode = lastNode) === null || _lastNode === void 0 ? void 0 : _lastNode.type) === undefined && idx !== transformedNodes.length - 1) {\n      continue;\n    }\n    nextNodes.push(node);\n    lastNode = node;\n  }\n  if (!nextNodes.length) {\n    nextNodes.push({\n      text: ''\n    });\n  }\n  return nextNodes;\n}\nfunction fromMarkdoc(node, componentBlocks) {\n  const nodes = node.children.flatMap(x => fromMarkdocNode(x, componentBlocks));\n  if (nodes.length === 0) {\n    return [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  }\n  if (nodes[nodes.length - 1].type !== 'paragraph') {\n    nodes.push({\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    });\n  }\n  return nodes;\n}\nfunction fromMarkdocNode(node, componentBlocks) {\n  if (node.type === 'blockquote') {\n    return {\n      type: 'blockquote',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'fence') {\n    const {\n      language,\n      content,\n      ...rest\n    } = node.attributes;\n    return {\n      type: 'code',\n      children: [{\n        text: content.replace(/\\n$/, '')\n      }],\n      ...(typeof language === 'string' ? {\n        language\n      } : {}),\n      ...rest\n    };\n  }\n  if (node.type === 'heading') {\n    return {\n      ...node.attributes,\n      level: node.attributes.level,\n      type: 'heading',\n      children: inlineFromMarkdoc(node.children)\n    };\n  }\n  if (node.type === 'list') {\n    return {\n      type: node.attributes.ordered ? 'ordered-list' : 'unordered-list',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'item') {\n    var _node$children$;\n    const children = [{\n      type: 'list-item-content',\n      children: node.children.length ? inlineFromMarkdoc([node.children[0]]) : [{\n        text: ''\n      }]\n    }];\n    if (((_node$children$ = node.children[1]) === null || _node$children$ === void 0 ? void 0 : _node$children$.type) === 'list') {\n      const list = node.children[1];\n      children.push({\n        type: list.attributes.ordered ? 'ordered-list' : 'unordered-list',\n        children: list.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      });\n    }\n    return {\n      type: 'list-item',\n      children\n    };\n  }\n  if (node.type === 'paragraph') {\n    if (node.children.length === 1 && node.children[0].type === 'inline' && node.children[0].children.length === 1 && node.children[0].children[0].type === 'image') {\n      var _image$attributes$tit;\n      const image = node.children[0].children[0];\n      return {\n        type: 'image',\n        src: decodeURI(image.attributes.src),\n        alt: image.attributes.alt,\n        title: (_image$attributes$tit = image.attributes.title) !== null && _image$attributes$tit !== void 0 ? _image$attributes$tit : '',\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    const children = inlineFromMarkdoc(node.children);\n    if (children.length === 1 && children[0].type === 'component-inline-prop') {\n      return children[0];\n    }\n    return {\n      type: 'paragraph',\n      children,\n      textAlign: node.attributes.textAlign\n    };\n  }\n  if (node.type === 'hr') {\n    return {\n      type: 'divider',\n      children: [{\n        text: ''\n      }]\n    };\n  }\n  if (node.type === 'table') {\n    return {\n      type: 'table',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tbody') {\n    return {\n      type: 'table-body',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'thead') {\n    if (!node.children.length) return [];\n    return {\n      type: 'table-head',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tr') {\n    return {\n      type: 'table-row',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'td') {\n    return {\n      type: 'table-cell',\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'th') {\n    return {\n      type: 'table-cell',\n      header: true,\n      children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n    };\n  }\n  if (node.type === 'tag') {\n    if (node.tag === 'table') {\n      return fromMarkdocNode(node.children[0], componentBlocks);\n    }\n    if (node.tag === 'layout') {\n      return {\n        type: 'layout',\n        layout: node.attributes.layout,\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'layout-area') {\n      return {\n        type: 'layout-area',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block') {\n      return {\n        type: 'component-block',\n        component: node.attributes.component,\n        props: node.attributes.props,\n        children: node.children.length === 0 ? [{\n          type: 'component-inline-prop',\n          children: [{\n            text: ''\n          }]\n        }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n      };\n    }\n    if (node.tag === 'component-block-prop' && Array.isArray(node.attributes.propPath) && node.attributes.propPath.every(x => typeof x === 'string' || typeof x === 'number')) {\n      return {\n        type: 'component-block-prop',\n        children: node.children.flatMap(x => fromMarkdocNode(x, componentBlocks)),\n        propPath: node.attributes.propPath\n      };\n    }\n    if (node.tag) {\n      const componentBlock = componentBlocks[node.tag];\n      if (componentBlock) {\n        const singleChildField = findSingleChildField({\n          kind: 'object',\n          fields: componentBlock.schema\n        });\n        if (singleChildField) {\n          const newAttributes = JSON.parse(JSON.stringify(node.attributes));\n          const children = [];\n          toChildrenAndProps$1(node.children, children, newAttributes, singleChildField, [], componentBlocks);\n          return {\n            type: 'component-block',\n            component: node.tag,\n            props: newAttributes,\n            children\n          };\n        }\n        return {\n          type: 'component-block',\n          component: node.tag,\n          props: node.attributes,\n          children: node.children.length === 0 ? [{\n            type: 'component-inline-prop',\n            children: [{\n              text: ''\n            }]\n          }] : node.children.flatMap(x => fromMarkdocNode(x, componentBlocks))\n        };\n      }\n    }\n    throw new Error(`Unknown tag: ${node.tag}`);\n  }\n  return inlineNodeFromMarkdoc(node);\n}\nfunction toChildrenAndProps$1(fromMarkdoc, resultingChildren, value, singleChildField, parentPropPath, componentBlocks) {\n  if (singleChildField.kind === 'child') {\n    const children = fromMarkdoc.flatMap(x => fromMarkdocNode(x, componentBlocks));\n    resultingChildren.push({\n      type: `component-${singleChildField.options.kind}-prop`,\n      propPath: [...parentPropPath, ...singleChildField.relativePath],\n      children\n    });\n  }\n  if (singleChildField.kind === 'array') {\n    const arr = [];\n    for (let [idx, child] of fromMarkdoc.entries()) {\n      if (child.type === 'paragraph') {\n        child = child.children[0].children[0];\n      }\n      if (child.type !== 'tag') {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found type: ${child.type}`);\n      }\n      if (child.tag !== singleChildField.asChildTag) {\n        throw new Error(`expected tag ${singleChildField.asChildTag}, found tag: ${child.tag}`);\n      }\n      const attributes = JSON.parse(JSON.stringify(child.attributes));\n      if (singleChildField.child) {\n        toChildrenAndProps$1(child.children, resultingChildren, attributes, singleChildField.child, [...parentPropPath, ...singleChildField.relativePath, idx], componentBlocks);\n      }\n      arr.push(attributes);\n    }\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    parent[key] = arr;\n  }\n}\n\nfunction areArraysEqual(a, b) {\n  return a.length === b.length && a.every((x, i) => x === b[i]);\n}\nfunction normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, inlineMarks, softBreaks) {\n  const marksToRemove = Object.keys(node).filter(x => x !== 'text' && x !== 'insertMenu' && inlineMarks[x] !== true);\n  if (marksToRemove.length) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unsetNodes(editor, marksToRemove, {\n      at: path\n    });\n    return true;\n  }\n  if (!softBreaks) {\n    const hasSoftBreaks = node.text.includes('\\n');\n    if (hasSoftBreaks) {\n      const [parentNode] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.parent(editor, path);\n      if (parentNode.type !== 'code') {\n        for (const position of slate__WEBPACK_IMPORTED_MODULE_6__.Editor.positions(editor, {\n          at: path\n        })) {\n          const character = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(editor, position.path).text[position.offset];\n          if (character === '\\n') {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.delete(editor, {\n              at: position\n            });\n            return true;\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction normalizeInlineBasedOnLinks([node, path], editor, links) {\n  if (node.type === 'link' && !links) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertText(editor, ` (${node.href})`, {\n      at: slate__WEBPACK_IMPORTED_MODULE_6__.Editor.end(editor, path)\n    });\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  return false;\n}\nfunction normalizeElementBasedOnDocumentFeatures([node, path], editor, {\n  formatting,\n  dividers,\n  layouts,\n  links,\n  images,\n  tables\n}) {\n  if (node.type === 'heading' && (!formatting.headings.levels.length || !formatting.headings.levels.includes(node.level)) || node.type === 'ordered-list' && !formatting.listTypes.ordered || node.type === 'unordered-list' && !formatting.listTypes.unordered || node.type === 'code' && !formatting.blockTypes.code || node.type === 'blockquote' && !formatting.blockTypes.blockquote || node.type === 'image' && !images || node.type === 'table' && !tables || node.type === 'layout' && (layouts.length === 0 || !layouts.some(layout => areArraysEqual(layout, node.layout)))) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  if ((node.type === 'paragraph' || node.type === 'heading') && (!formatting.alignment.center && node.textAlign === 'center' || !formatting.alignment.end && node.textAlign === 'end' || 'textAlign' in node && node.textAlign !== 'center' && node.textAlign !== 'end')) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unsetNodes(editor, 'textAlign', {\n      at: path\n    });\n    return true;\n  }\n  if (node.type === 'divider' && !dividers) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n      at: path\n    });\n    return true;\n  }\n  return normalizeInlineBasedOnLinks([node, path], editor, links);\n}\nfunction withDocumentFeaturesNormalization(documentFeatures, editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = ([node, path]) => {\n    if (slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(node)) {\n      normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, documentFeatures.formatting.inlineMarks, documentFeatures.formatting.softBreaks);\n    } else if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node)) {\n      normalizeElementBasedOnDocumentFeatures([node, path], editor, documentFeatures);\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nfunction getSrcPrefix(publicPath, slug) {\n  return typeof publicPath === 'string' ? `${publicPath.replace(/\\/*$/, '')}/${slug === undefined ? '' : slug + '/'}` : '';\n}\n\nfunction deserializeFiles(nodes, componentBlocks, files, otherFiles, mode, documentFeatures, slug) {\n  return nodes.map(node => {\n    if (node.type === 'component-block') {\n      const componentBlock = componentBlocks[node.component];\n      if (!componentBlock) return node;\n      const schema = object(componentBlock.schema);\n      return {\n        ...node,\n        props: deserializeProps(schema, node.props, files, otherFiles, mode, slug)\n      };\n    }\n    if (node.type === 'image' && typeof node.src === 'string' && mode === 'edit') {\n      var _ref;\n      const prefix = getSrcPrefixForImageBlock(documentFeatures, slug);\n      const filename = node.src.slice(prefix.length);\n      const content = (_ref = typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? otherFiles.get(fixPath(documentFeatures.images.directory)) : files) === null || _ref === void 0 ? void 0 : _ref.get(filename);\n      if (!content) {\n        return {\n          type: 'paragraph',\n          children: [{\n            text: `Missing image ${filename}`\n          }]\n        };\n      }\n      return {\n        type: 'image',\n        src: {\n          filename,\n          content\n        },\n        alt: node.alt,\n        title: node.title,\n        children: [{\n          text: ''\n        }]\n      };\n    }\n    if (typeof node.type === 'string') {\n      const children = deserializeFiles(node.children, componentBlocks, files, otherFiles, mode, documentFeatures, slug);\n      return {\n        ...node,\n        children\n      };\n    }\n    return node;\n  });\n}\nfunction deserializeProps(schema, value, files, otherFiles, mode, slug) {\n  return transformProps(schema, value, {\n    form: (schema, value) => {\n      if (schema.formKind === 'asset') {\n        var _otherFiles$get;\n        if (mode === 'read') {\n          return schema.reader.parse(value);\n        }\n        const filename = schema.filename(value, {\n          slug,\n          suggestedFilenamePrefix: undefined\n        });\n        return schema.parse(value, {\n          asset: filename ? schema.directory ? (_otherFiles$get = otherFiles.get(schema.directory)) === null || _otherFiles$get === void 0 ? void 0 : _otherFiles$get.get(filename) : files.get(filename) : undefined,\n          slug\n        });\n      }\n      if (schema.formKind === 'content') {\n        throw new Error('Not implemented');\n      }\n      if (mode === 'read') {\n        return schema.reader.parse(value);\n      }\n      return schema.parse(value, undefined);\n    }\n  });\n}\nfunction getSrcPrefixForImageBlock(documentFeatures, slug) {\n  return getSrcPrefix(typeof documentFeatures.images === 'object' ? documentFeatures.images.publicPath : undefined, slug);\n}\n\nfunction serializeProps(rootValue, rootSchema,\n// note you might have a slug without a slug field when serializing props inside a component block or etc. in the editor\nslugField, slug, shouldSuggestFilenamePrefix) {\n  const extraFiles = [];\n  return {\n    value: transformProps(rootSchema, rootValue, {\n      form(schema, value, propPath) {\n        if (propPath.length === 1 && slugField === propPath[0]) {\n          if (schema.formKind !== 'slug') {\n            throw new Error('slugField is a not a slug field');\n          }\n          return schema.serializeWithSlug(value).value;\n        }\n        if (schema.formKind === 'asset') {\n          const {\n            asset,\n            value: forYaml\n          } = schema.serialize(value, {\n            suggestedFilenamePrefix: shouldSuggestFilenamePrefix ? getPropPathPortion(propPath, rootSchema, rootValue) : undefined,\n            slug\n          });\n          if (asset) {\n            extraFiles.push({\n              path: asset.filename,\n              contents: asset.content,\n              parent: schema.directory\n            });\n          }\n          return forYaml;\n        }\n        if (schema.formKind === 'content') {\n          const {\n            other,\n            external,\n            content,\n            value: forYaml\n          } = schema.serialize(value, {\n            slug\n          });\n          if (content) {\n            extraFiles.push({\n              path: getPropPathPortion(propPath, rootSchema, rootValue) + schema.contentExtension,\n              contents: content,\n              parent: undefined\n            });\n          }\n          for (const [key, contents] of other) {\n            extraFiles.push({\n              path: getPropPathPortion(propPath, rootSchema, rootValue) + '/' + key,\n              contents,\n              parent: undefined\n            });\n          }\n          const allowedDirectories = new Set(schema.directories);\n          for (const [directory, contents] of external) {\n            if (!allowedDirectories.has(directory)) {\n              throw new Error(`Invalid directory ${directory} in content field serialization`);\n            }\n            for (const [filename, fileContents] of contents) {\n              extraFiles.push({\n                path: filename,\n                contents: fileContents,\n                parent: directory\n              });\n            }\n          }\n          return forYaml;\n        }\n        return schema.serialize(value).value;\n      },\n      object(_schema, value) {\n        return Object.fromEntries(Object.entries(value).filter(([_, val]) => val !== undefined));\n      },\n      array(_schema, value) {\n        return value.map(val => val === undefined ? null : val);\n      },\n      child() {\n        return undefined;\n      }\n    }),\n    extraFiles\n  };\n}\nfunction getPropPathPortion(path, schema, value) {\n  const end = [];\n  for (const portion of path) {\n    if (schema.kind === 'array') {\n      value = value[portion];\n      if (schema.slugField && schema.element.kind === 'object') {\n        const slug = getSlugFromState({\n          schema: schema.element.fields,\n          slugField: schema.slugField\n        }, value);\n        end.push(slug);\n      } else {\n        end.push(portion);\n      }\n      schema = schema.element;\n      continue;\n    }\n    end.push(portion);\n    if (schema.kind === 'object') {\n      value = value[portion];\n      schema = schema.fields[portion];\n      continue;\n    }\n    if (schema.kind === 'conditional') {\n      if (portion === 'discriminant') {\n        schema = schema.discriminant;\n      } else if (portion === 'value') {\n        schema = schema.values[value.discriminant];\n      }\n      value = value[portion];\n      continue;\n    }\n    throw new Error(`unexpected ${schema.kind}`);\n  }\n  return end.join('/');\n}\n\nfunction toInline(nodes) {\n  return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('inline', {}, nodes.flatMap(toMarkdocInline));\n}\nconst markToMarkdoc = {\n  bold: {\n    type: 'strong'\n  },\n  code: {\n    type: 'code'\n  },\n  italic: {\n    type: 'em'\n  },\n  underline: {\n    type: 'tag',\n    tag: 'u'\n  },\n  keyboard: {\n    type: 'tag',\n    tag: 'kbd'\n  },\n  strikethrough: {\n    type: 's'\n  },\n  subscript: {\n    type: 'tag',\n    tag: 'sub'\n  },\n  superscript: {\n    type: 'tag',\n    tag: 'sup'\n  }\n};\nfunction toMarkdocInline(node) {\n  var _exec, _exec2;\n  if (node.type === 'link') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('link', {\n      href: node.href\n    }, node.children.flatMap(toMarkdocInline));\n  }\n  if (node.type !== undefined) {\n    throw new Error(`unexpected inline node type: ${node.type}`);\n  }\n  const marks = Object.keys(node).filter(mark => mark !== 'text' && mark !== 'code').sort();\n  const leadingWhitespace = (_exec = /^\\s+/.exec(node.text)) === null || _exec === void 0 ? void 0 : _exec[0];\n  const trailingWhitespace = (_exec2 = /\\s+$/.exec(node.text)) === null || _exec2 === void 0 ? void 0 : _exec2[0];\n  let children = node.code ? [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('code', {\n    content: node.text.trim()\n  }, [])] : [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('text', {\n    content: node.text.trim()\n  })];\n  for (const mark of marks) {\n    const config = markToMarkdoc[mark];\n    if (config) {\n      children = [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node(config.type, {}, children, config.tag)];\n    }\n  }\n  if (leadingWhitespace !== null && leadingWhitespace !== void 0 && leadingWhitespace.length) {\n    children.unshift(new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('text', {\n      content: leadingWhitespace\n    }, []));\n  }\n  if (trailingWhitespace !== null && trailingWhitespace !== void 0 && trailingWhitespace.length) {\n    children.push(new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('text', {\n      content: trailingWhitespace\n    }, []));\n  }\n  return children;\n}\nfunction toMarkdocDocument(nodes, _config) {\n  const extraFiles = [];\n  const config = {\n    ..._config,\n    extraFiles\n  };\n  const node = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('document', {}, nodes.flatMap(x => toMarkdoc(x, config)));\n  return {\n    node,\n    extraFiles\n  };\n}\nfunction toChildrenAndProps(childrenAsMarkdoc, resultingChildren, value, singleChildField) {\n  if (singleChildField.kind === 'child') {\n    const child = childrenAsMarkdoc.find(x => areArraysEqual(x.propPath, singleChildField.relativePath));\n    if (child) {\n      resultingChildren.push(...child.children);\n    }\n    return;\n  }\n  if (singleChildField.kind === 'array') {\n    const key = singleChildField.relativePath[singleChildField.relativePath.length - 1];\n    const parent = getValueAtPropPath(value, singleChildField.relativePath.slice(0, -1));\n    const valueAtPropPath = parent[key];\n    delete parent[key];\n    const childNodes = new Map();\n    for (const child of childrenAsMarkdoc) {\n      const innerPropPath = child.propPath.slice(singleChildField.relativePath.length + 1);\n      const num = child.propPath[singleChildField.relativePath.length];\n      if (childNodes.get(num) === undefined) {\n        childNodes.set(num, []);\n      }\n      childNodes.get(num).push({\n        children: child.children,\n        propPath: innerPropPath\n      });\n    }\n    resultingChildren.push(...valueAtPropPath.map((x, i) => {\n      var _childNodes$get;\n      const newChildrenAsMarkdoc = (_childNodes$get = childNodes.get(i)) !== null && _childNodes$get !== void 0 ? _childNodes$get : [];\n      const children = [];\n      toChildrenAndProps(newChildrenAsMarkdoc, children, x, singleChildField.child);\n      return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', x, children, singleChildField.asChildTag);\n    }));\n  }\n}\nfunction toMarkdoc(node, config) {\n  if (node.type === 'paragraph') {\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('paragraph', node.textAlign ? {\n      textAlign: node.textAlign\n    } : {}, [toInline(node.children)]);\n    if (node.textAlign) {\n      markdocNode.annotations.push({\n        name: 'textAlign',\n        value: node.textAlign,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  if (node.type === 'image') {\n    config.extraFiles.push({\n      contents: node.src.content,\n      path: node.src.filename,\n      parent: typeof config.documentFeatures.images === 'object' && typeof config.documentFeatures.images.directory === 'string' ? fixPath(config.documentFeatures.images.directory) : undefined\n    });\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('paragraph', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('inline', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('image', {\n      src: encodeURI(`${getSrcPrefixForImageBlock(config.documentFeatures, config.slug)}${node.src.filename}`),\n      alt: node.alt,\n      title: node.title\n    })])]);\n  }\n  if (node.type === 'code') {\n    const extraAttributes = {};\n    const {\n      children,\n      language,\n      type,\n      ...rest\n    } = node;\n    const schema = typeof config.documentFeatures.formatting.blockTypes.code === 'object' ? config.documentFeatures.formatting.blockTypes.code.schema : undefined;\n    if (schema && Object.keys(schema.fields).length > 0) {\n      const serialized = serializeProps(getInitialPropsValueFromInitializer(schema, rest), schema, undefined, config.slug, false);\n      Object.assign(extraAttributes, serialized.value);\n      config.extraFiles.push(...serialized.extraFiles);\n    }\n    let content = children[0].text + '\\n';\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('fence', {\n      content,\n      language,\n      ...extraAttributes\n    }, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('text', {\n      content\n    })]);\n    for (const [key, value] of Object.entries(extraAttributes)) {\n      markdocNode.annotations.push({\n        name: key,\n        value,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  const _toMarkdoc = node => toMarkdoc(node, config);\n  if (node.type === 'blockquote') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('blockquote', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'divider') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('hr');\n  }\n  if (node.type === 'table') {\n    const head = node.children.find(x => x.type === 'table-head');\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('table', {}, [new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('thead', {}, head ? head.children.map(_toMarkdoc) : []), _toMarkdoc(node.children.find(x => x.type === 'table-body'))])], 'table');\n  }\n  if (node.type === 'table-body') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tbody', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'table-row') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tr', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'table-cell') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node(node.header ? 'th' : 'td', {}, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'heading') {\n    const extraAttributes = {};\n    if (node.textAlign) {\n      extraAttributes.textAlign = node.textAlign;\n    }\n    const {\n      children,\n      level,\n      textAlign,\n      type,\n      ...rest\n    } = node;\n    const schema = config.documentFeatures.formatting.headings.schema;\n    if (Object.keys(schema.fields).length > 0) {\n      Object.assign(extraAttributes, serializeProps(getInitialPropsValueFromInitializer(schema, rest), schema, undefined, config.slug, false).value);\n    }\n    const markdocNode = new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('heading', {\n      level: node.level,\n      ...extraAttributes\n    }, [toInline(node.children)]);\n    for (const [key, value] of Object.entries(extraAttributes)) {\n      markdocNode.annotations.push({\n        name: key,\n        value,\n        type: 'attribute'\n      });\n    }\n    return markdocNode;\n  }\n  if (node.type === 'ordered-list') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('list', {\n      ordered: true\n    }, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'unordered-list') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('list', {\n      ordered: false\n    }, node.children.map(_toMarkdoc));\n  }\n  if (node.type === 'layout') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', {\n      layout: node.layout\n    }, node.children.map(_toMarkdoc), 'layout');\n  }\n  if (node.type === 'layout-area') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', {}, node.children.flatMap(_toMarkdoc), 'layout-area');\n  }\n  if (node.type === 'component-block') {\n    const isVoid = node.children.length === 1 && node.children[0].type === 'component-inline-prop' && node.children[0].propPath === undefined;\n    const componentBlock = config.componentBlocks[node.component];\n    const childrenAsMarkdoc = [];\n    for (const child of node.children) {\n      if ((child.type === 'component-block-prop' || child.type === 'component-inline-prop') && child.propPath !== undefined) {\n        childrenAsMarkdoc.push({\n          type: child.type,\n          propPath: child.propPath,\n          children: child.type === 'component-block-prop' ? child.children.flatMap(_toMarkdoc) : [toInline(child.children)]\n        });\n      }\n    }\n    let attributes = node.props;\n    if (componentBlock) {\n      const serialized = serializeProps(node.props, {\n        kind: 'object',\n        fields: componentBlock.schema\n      }, undefined, config.slug, false);\n      attributes = serialized.value;\n      config.extraFiles.push(...serialized.extraFiles);\n      const singleChildField = findSingleChildField({\n        kind: 'object',\n        fields: componentBlock.schema\n      });\n      if (singleChildField) {\n        const children = [];\n        toChildrenAndProps(childrenAsMarkdoc, children, attributes, singleChildField);\n        return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', attributes, children, node.component);\n      }\n    }\n    const children = isVoid ? [] : childrenAsMarkdoc.map(x => new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', {\n      propPath: x.propPath\n    }, x.children, x.type));\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', attributes, children, node.component);\n  }\n  if (node.type === 'component-block-prop' || node.type === 'component-inline-prop') {\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('tag', {\n      propPath: node.propPath\n    }, node.type === 'component-inline-prop' ? [toInline(node.children)] : node.children.flatMap(_toMarkdoc), node.type);\n  }\n  if (node.type === 'list-item') {\n    const listItemContent = node.children[0];\n    if (listItemContent.type !== 'list-item-content') {\n      throw new Error('list item content must contain a list-item-content');\n    }\n    const inline = toInline(listItemContent.children);\n    const children = [inline];\n    const nestedList = node.children[1];\n    if (nestedList) {\n      children.push(toMarkdoc(nestedList, config));\n    }\n    return new _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__.Ast.Node('item', {}, children);\n  }\n  if (node.type === 'list-item-content') {\n    throw new Error('list-item-content in unexpected position');\n  }\n  debugger;\n  throw new Error(`unexpected node type: ${node.type}`);\n}\n\nfunction validateText(val, min, max, fieldLabel, slugInfo) {\n  if (val.length < min) {\n    if (min === 1) {\n      return `${fieldLabel} must not be empty`;\n    } else {\n      return `${fieldLabel} must be at least ${min} characters long`;\n    }\n  }\n  if (val.length > max) {\n    return `${fieldLabel} must be no longer than ${max} characters`;\n  }\n  if (slugInfo) {\n    if (val === '') {\n      return `${fieldLabel} must not be empty`;\n    }\n    if (val === '..') {\n      return `${fieldLabel} must not be ..`;\n    }\n    if (val === '.') {\n      return `${fieldLabel} must not be .`;\n    }\n    if (slugInfo.glob === '**') {\n      const split = val.split('/');\n      if (split.some(s => s === '..')) {\n        return `${fieldLabel} must not contain ..`;\n      }\n      if (split.some(s => s === '.')) {\n        return `${fieldLabel} must not be .`;\n      }\n    }\n    if ((slugInfo.glob === '*' ? /[\\\\/]/ : /[\\\\]/).test(val)) {\n      return `${fieldLabel} must not contain slashes`;\n    }\n    if (/^\\s|\\s$/.test(val)) {\n      return `${fieldLabel} must not start or end with spaces`;\n    }\n    if (slugInfo.slugs.has(val)) {\n      return `${fieldLabel} must be unique`;\n    }\n  }\n}\n\nfunction parseAsNormalField(value) {\n  if (value === undefined) {\n    return '';\n  }\n  if (typeof value !== 'string') {\n    throw new FieldDataError('Must be a string');\n  }\n  return value;\n}\nconst emptySet = new Set();\nfunction text({\n  label,\n  defaultValue = '',\n  validation: {\n    length: {\n      max = Infinity,\n      min = 0\n    } = {}\n  } = {},\n  description,\n  multiline = false\n}) {\n  function validate(value, slugField) {\n    const message = validateText(value, min, max, label, slugField);\n    if (message !== undefined) {\n      throw new FieldDataError(message);\n    }\n    return value;\n  }\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(TextFieldInput, {\n        label: label,\n        description: description,\n        min: min,\n        max: max,\n        multiline: multiline,\n        ...props\n      });\n    },\n    defaultValue() {\n      return typeof defaultValue === 'string' ? defaultValue : defaultValue();\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return args.slug;\n      }\n      return parseAsNormalField(value);\n    },\n    serialize(value) {\n      return {\n        value: value === '' ? undefined : value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        slug: value,\n        value: undefined\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseAsNormalField(value);\n        return validate(parsed, undefined);\n      },\n      parseWithSlug(_value, args) {\n        validate(parseAsNormalField(args.slug), {\n          glob: args.glob,\n          slugs: emptySet\n        });\n        return null;\n      }\n    },\n    validate(value, args) {\n      return validate(value, args === null || args === void 0 ? void 0 : args.slugField);\n    }\n  };\n}\n\n/* eslint-disable */\nglobalThis.Prism = {\n  manual: true\n};\n\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = globalThis;\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0;\n\n  // The grammar object for plaintext\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    /**\n     * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n     * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n     * own worker, you don't want it to do this.\n     *\n     * By setting this value to `true`, Prism will not add its own listeners to the worker.\n     *\n     * You obviously have to change this value before Prism executes. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.disableWorkerMessageHandler = true;\n     * // Load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function (o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function (obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */{};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return /** @type {any} */clone;\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            ( /** @type {Array} */ /** @type {any} */o).forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return /** @type {any} */clone;\n          default:\n            return o;\n        }\n      },\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function (element) {\n        while (element) {\n          var m = lang.exec(element.className);\n          if (m) {\n            return m[1].toLowerCase();\n          }\n          element = element.parentElement;\n        }\n        return 'none';\n      },\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function (element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n        // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n        element.classList.add('language-' + language);\n      },\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function () {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n        if ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n          return /** @type {any} */document.currentScript;\n        }\n\n        // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n\n          var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n          return null;\n        }\n      },\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function (element, className, defaultActivation) {\n        var no = 'no-' + className;\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      }\n    },\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || ( /** @type {any} */_.languages);\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n            var propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function (async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function (container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n      _.hooks.run('before-highlightall', env);\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n      _.hooks.run('before-all-elements-highlight', env);\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function (element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n      var grammar = _.languages[language];\n\n      // Set language on the element, if not present\n      _.util.setLanguage(element, language);\n\n      // Set language on the parent, for styling\n      var parent = element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        _.util.setLanguage(parent, language);\n      }\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n        _.hooks.run('before-insert', env);\n        env.element.innerHTML = env.highlightedCode;\n        _.hooks.run('after-highlight', env);\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n      }\n      _.hooks.run('before-sanity-check', env);\n\n      // plugins may change/add the parent/element\n      parent = env.element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n        parent.setAttribute('tabindex', '0');\n      }\n      if (!env.code) {\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n        return;\n      }\n      _.hooks.run('before-highlight', env);\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      if (!env.grammar) {\n        throw new Error('The language \"' + env.language + '\" has no grammar.');\n      }\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function (text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function (name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function (name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n    _.hooks.run('wrap', env);\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n  }\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n        for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n          var str = currentNode.value;\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n          if (str instanceof Token) {\n            continue;\n          }\n          var removeCount = 1; // this is the to parameter of removeBetween\n          var match;\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n            if (!match || match.index >= text.length) {\n              break;\n            }\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n            if (!match) {\n              continue;\n            }\n          }\n\n          // eslint-disable-next-line no-redeclare\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n          var removeFrom = currentNode.prev;\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n            // the reach might have been extended because of the rematching\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data);\n        var lang = message.language;\n        var code = message.code;\n        var immediateClose = message.immediateClose;\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n    return _;\n  }\n\n  // Get current script and highlight\n  var script = _.util.currentScript();\n  if (script) {\n    _.filename = script.src;\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n  return _;\n}(_self);\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: RegExp(\n    // lookbehind\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n    // Regex pattern:\n    // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n    // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n    // with the only syntax, so we have to define 2 different regex patterns.\n    /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' +\n    // `v` flag syntax. This supports 3 levels of nested character classes.\n    /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' +\n    // lookahead\n    /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nPrism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n\n  // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n  var LOADING_MESSAGE = 'Loading…';\n  var FAILURE_MESSAGE = function (status, message) {\n    return '✖ Error ' + status + ' while fetching file: ' + message;\n  };\n  var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n  var EXTENSIONS = {\n    'js': 'javascript',\n    'py': 'python',\n    'rb': 'ruby',\n    'ps1': 'powershell',\n    'psm1': 'powershell',\n    'sh': 'bash',\n    'bat': 'batch',\n    'h': 'c',\n    'tex': 'latex'\n  };\n  var STATUS_ATTR = 'data-src-status';\n  var STATUS_LOADING = 'loading';\n  var STATUS_LOADED = 'loaded';\n  var STATUS_FAILED = 'failed';\n  var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n  /**\n   * Loads the given file.\n   *\n   * @param {string} src The URL or path of the source file to load.\n   * @param {(result: string) => void} success\n   * @param {(reason: string) => void} error\n   */\n  function loadFile(src, success, error) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', src, true);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status < 400 && xhr.responseText) {\n          success(xhr.responseText);\n        } else {\n          if (xhr.status >= 400) {\n            error(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n          } else {\n            error(FAILURE_EMPTY_MESSAGE);\n          }\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n  /**\n   * Parses the given range.\n   *\n   * This returns a range with inclusive ends.\n   *\n   * @param {string | null | undefined} range\n   * @returns {[number, number | undefined] | undefined}\n   */\n  function parseRange(range) {\n    var m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n    if (m) {\n      var start = Number(m[1]);\n      var comma = m[2];\n      var end = m[3];\n      if (!comma) {\n        return [start, start];\n      }\n      if (!end) {\n        return [start, undefined];\n      }\n      return [start, Number(end)];\n    }\n    return undefined;\n  }\n  Prism.hooks.add('before-highlightall', function (env) {\n    env.selector += ', ' + SELECTOR;\n  });\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre = /** @type {HTMLPreElement} */env.element;\n    if (pre.matches(SELECTOR)) {\n      env.code = ''; // fast-path the whole thing and go to complete\n\n      pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n      // add code element with loading message\n      var code = pre.appendChild(document.createElement('CODE'));\n      code.textContent = LOADING_MESSAGE;\n      var src = pre.getAttribute('data-src');\n      var language = env.language;\n      if (language === 'none') {\n        // the language might be 'none' because there is no language set;\n        // in this case, we want to use the extension as the language\n        var extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n        language = EXTENSIONS[extension] || extension;\n      }\n\n      // set language classes\n      Prism.util.setLanguage(code, language);\n      Prism.util.setLanguage(pre, language);\n\n      // preload the language\n      var autoloader = Prism.plugins.autoloader;\n      if (autoloader) {\n        autoloader.loadLanguages(language);\n      }\n\n      // load file\n      loadFile(src, function (text) {\n        // mark as loaded\n        pre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n        // handle data-range\n        var range = parseRange(pre.getAttribute('data-range'));\n        if (range) {\n          var lines = text.split(/\\r\\n?|\\n/g);\n\n          // the range is one-based and inclusive on both ends\n          var start = range[0];\n          var end = range[1] == null ? lines.length : range[1];\n          if (start < 0) {\n            start += lines.length;\n          }\n          start = Math.max(0, Math.min(start - 1, lines.length));\n          if (end < 0) {\n            end += lines.length;\n          }\n          end = Math.max(0, Math.min(end, lines.length));\n          text = lines.slice(start, end).join('\\n');\n\n          // add data-start for line numbers\n          if (!pre.hasAttribute('data-start')) {\n            pre.setAttribute('data-start', String(start + 1));\n          }\n        }\n\n        // highlight code\n        code.textContent = text;\n        Prism.highlightElement(code);\n      }, function (error) {\n        // mark as failed\n        pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n        code.textContent = error;\n      });\n    }\n  });\n  Prism.plugins.fileHighlight = {\n    /**\n     * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n     *\n     * Note: Elements which are already loaded or currently loading will not be touched by this method.\n     *\n     * @param {ParentNode} [container=document]\n     */\n    highlight: function highlight(container) {\n      var elements = (container || document).querySelectorAll(SELECTOR);\n      for (var i = 0, element; element = elements[i++];) {\n        Prism.highlightElement(element);\n      }\n    }\n  };\n  var logged = false;\n  /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n  Prism.fileHighlight = function () {\n    if (!logged) {\n      console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n      logged = true;\n    }\n    Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n  };\n})();\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'char': Prism.languages.c['char'],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete Prism.languages.c['boolean'];\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    },\n    // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n    // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n    // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' +\n      // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' +\n      // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\nPrism.languages.arduino = Prism.languages.extend('cpp', {\n  'keyword': /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n  'constant': /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n  'builtin': /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n});\nPrism.languages.ino = Prism.languages.arduino;\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [\n    // [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    },\n    // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    },\n    // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [\n    // a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight parameter names as variables\n    'parameter': {\n      pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [\n    // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    },\n    // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    },\n    // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n\n  /* Patterns in command substitution. */\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'parameter', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n  Prism.languages.sh = Prism.languages.bash;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n(function (Prism) {\n  /**\n   * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n   *\n   * Note: This is a simple text based replacement. Be careful when using backreferences!\n   *\n   * @param {string} pattern the given pattern.\n   * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n   * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n   * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n   */\n  function replace(pattern, replacements) {\n    return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n      return '(?:' + replacements[+index] + ')';\n    });\n  }\n  /**\n   * @param {string} pattern\n   * @param {string[]} replacements\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n  function re(pattern, replacements, flags) {\n    return RegExp(replace(pattern, replacements), flags || '');\n  }\n\n  /**\n   * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n   *\n   * @param {string} pattern\n   * @param {number} depthLog2\n   * @returns {string}\n   */\n  function nested(pattern, depthLog2) {\n    for (var i = 0; i < depthLog2; i++) {\n      pattern = pattern.replace(/<<self>>/g, function () {\n        return '(?:' + pattern + ')';\n      });\n    }\n    return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n  }\n\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n  var keywordKinds = {\n    // keywords which represent a return or variable type\n    type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n    // keywords which are used to declare a type\n    typeDeclaration: 'class enum interface record struct',\n    // contextual keywords\n    // (\"var\" and \"dynamic\" are missing because they are used like types)\n    contextual: 'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n    // all other keywords\n    other: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n  };\n\n  // keywords\n  function keywordsToPattern(words) {\n    return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n  }\n  var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n  var keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n  var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n  var nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n\n  // types\n  var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2); // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n  var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n  var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n  var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic]);\n  var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [nonTypeKeywords, genericName]);\n  var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n  var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [identifier, array]);\n  var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array]);\n  var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n  var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [tuple, identifier, array]);\n  var typeInside = {\n    'keyword': keywords,\n    'punctuation': /[<>()?,.:[\\]]/\n  };\n\n  // strings & characters\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n  // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n  var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source; // simplified pattern\n  var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n  var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    'string': [{\n      pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n      lookbehind: true,\n      greedy: true\n    }],\n    'class-name': [{\n      // Using static\n      // using static System.Math;\n      pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Using alias (type)\n      // using Project = PC.MyCompany.Project;\n      pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [name, typeExpression]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Using alias (alias)\n      // using Project = PC.MyCompany.Project;\n      pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n      lookbehind: true\n    }, {\n      // Type declarations\n      // class Foo<A, B>\n      // interface Foo<out A, B>\n      pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [typeDeclarationKeywords, genericName]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Single catch exception declaration\n      // catch(Foo)\n      // (things like catch(Foo e) is covered by variable declaration)\n      pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Name of the type parameter of generic constraints\n      // where Foo : class\n      pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n      lookbehind: true\n    }, {\n      // Casts and checks via as and is.\n      // as Foo<A>, is Bar<B>\n      // (things like if(a is Foo b) is covered by variable declaration)\n      pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n      lookbehind: true,\n      inside: typeInside\n    }, {\n      // Variable, field and parameter declaration\n      // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n      pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [typeExpression, nonContextualKeywords, name]),\n      inside: typeInside\n    }],\n    'keyword': keywords,\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n    'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n    'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n    'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n  });\n  Prism.languages.insertBefore('csharp', 'number', {\n    'range': {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('csharp', 'punctuation', {\n    'named-parameter': {\n      pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'namespace': {\n      // namespace Foo.Bar {}\n      // using Foo.Bar;\n      pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'type-expression': {\n      // default(Foo), typeof(Foo<Bar>), sizeof(int)\n      pattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n      lookbehind: true,\n      alias: 'class-name',\n      inside: typeInside\n    },\n    'return-type': {\n      // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n      // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n      // int Foo => 0; int Foo { get; set } = 0;\n      pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [typeExpression, identifier]),\n      inside: typeInside,\n      alias: 'class-name'\n    },\n    'constructor-invocation': {\n      // new List<Foo<Bar[]>> { }\n      pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n      lookbehind: true,\n      inside: typeInside,\n      alias: 'class-name'\n    },\n    /*'explicit-implementation': {\n    \t// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\n    \tpattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\n    \tinside: classNameInside,\n    \talias: 'class-name'\n    },*/\n    'generic-method': {\n      // foo<Bar>()\n      pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n      inside: {\n        'function': re(/^<<0>>/.source, [name]),\n        'generic': {\n          pattern: RegExp(generic),\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    },\n    'type-list': {\n      // The list of types inherited or of generic constraints\n      // class Foo<F> : Bar, IList<FooBar>\n      // where F : Bar, IList<int>\n      pattern: re(/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [typeDeclarationKeywords, genericName, name, typeExpression, keywords.source, nestedRound, /\\bnew\\s*\\(\\s*\\)/.source]),\n      lookbehind: true,\n      inside: {\n        'record-arguments': {\n          pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [genericName, nestedRound]),\n          lookbehind: true,\n          greedy: true,\n          inside: Prism.languages.csharp\n        },\n        'keyword': keywords,\n        'class-name': {\n          pattern: RegExp(typeExpression),\n          greedy: true,\n          inside: typeInside\n        },\n        'punctuation': /[,()]/\n      }\n    },\n    'preprocessor': {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        'directive': {\n          pattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n\n  // attributes\n  var regularStringOrCharacter = regularString + '|' + character;\n  var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n  var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n\n  // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n  var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n  var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [identifier, roundExpression]);\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'attribute': {\n      // Attributes\n      // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n      pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [attrTarget, attr]),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'target': {\n          pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n          alias: 'keyword'\n        },\n        'attribute-arguments': {\n          pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n          inside: Prism.languages.csharp\n        },\n        'class-name': {\n          pattern: RegExp(identifier),\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'punctuation': /[:,]/\n      }\n    }\n  });\n\n  // string interpolation\n  var formatString = /:[^}\\r\\n]+/.source;\n  // multi line\n  var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n  var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [mInterpolationRound, formatString]);\n  // single line\n  var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n  var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [sInterpolationRound, formatString]);\n  function createInterpolationInside(interpolation, interpolationRound) {\n    return {\n      'interpolation': {\n        pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n        lookbehind: true,\n        inside: {\n          'format-string': {\n            pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [interpolationRound, formatString]),\n            lookbehind: true,\n            inside: {\n              'punctuation': /^:/\n            }\n          },\n          'punctuation': /^\\{|\\}$/,\n          'expression': {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-csharp',\n            inside: Prism.languages.csharp\n          }\n        }\n      },\n      'string': /[\\s\\S]+/\n    };\n  }\n  Prism.languages.insertBefore('csharp', 'string', {\n    'interpolation-string': [{\n      pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n      lookbehind: true,\n      greedy: true,\n      inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n    }, {\n      pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n      lookbehind: true,\n      greedy: true,\n      inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n    }],\n    'char': {\n      pattern: RegExp(character),\n      greedy: true\n    }\n  });\n  Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n})(Prism);\nPrism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [\n    // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n    // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m,\n    // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m]\n\n    // deleted, inserted, unchanged, diff\n  };\n\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  };\n\n  // add a token for each prefix\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  });\n\n  // make prefixes available to Diff plugin\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [\n  // binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n  // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n  // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nPrism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\nPrism.languages.ini = {\n  /**\n   * The component mimics the behavior of the Win32 API parser.\n   *\n   * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n   */\n\n  'comment': {\n    pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n    lookbehind: true\n  },\n  'section': {\n    pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n    lookbehind: true,\n    inside: {\n      'section-name': {\n        pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n        lookbehind: true,\n        alias: 'selector'\n      },\n      'punctuation': /\\[|\\]/\n    }\n  },\n  'key': {\n    pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n    lookbehind: true,\n    alias: 'attr-name'\n  },\n  'value': {\n    pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n    lookbehind: true,\n    alias: 'attr-value',\n    inside: {\n      'inner-value': {\n        pattern: /^(\"|').+(?=\\1$)/,\n        lookbehind: true\n      }\n    }\n  },\n  'punctuation': /=/\n};\n(function (Prism) {\n  var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n  // full package (optional) + parent classes (optional)\n  var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n  // based on the java naming conventions\n  var className = {\n    pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n    lookbehind: true,\n    inside: {\n      'namespace': {\n        pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n        inside: {\n          'punctuation': /\\./\n        }\n      },\n      'punctuation': /\\./\n    }\n  };\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'string': {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [className, {\n      // variables, parameters, and constructor references\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n      lookbehind: true,\n      inside: className.inside\n    }, {\n      // class names based on keyword\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n      lookbehind: true,\n      inside: className.inside\n    }],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(::\\s*)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    },\n    'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n  });\n  Prism.languages.insertBefore('java', 'string', {\n    'triple-quoted-string': {\n      // http://openjdk.java.net/jeps/355#Description\n      pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'char': {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    },\n    'import': [{\n      pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      inside: {\n        'namespace': className.inside.namespace,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }, {\n      pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      alias: 'static',\n      inside: {\n        'namespace': className.inside.namespace,\n        'static': /\\b\\w+$/,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }],\n    'namespace': {\n      pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n        return keywords.source;\n      })),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n})(Prism);\n(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;\n  var charSet = {\n    pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var charSetWithoutDot = {\n    pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n    alias: 'class-name'\n  };\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar);\n\n  // the name of a capturing group\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  Prism.languages.regex = {\n    'char-class': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'char-class-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        'char-class-punctuation': {\n          pattern: /^\\[|\\]$/,\n          alias: 'punctuation'\n        },\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': {\n              pattern: /-/,\n              alias: 'operator'\n            }\n          }\n        },\n        'special-escape': specialEscape,\n        'char-set': charSetWithoutDot,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'char-set': charSet,\n    'backreference': [{\n      // a backreference which is not an octal escape\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: 'keyword'\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: 'keyword',\n      inside: {\n        'group-name': groupName\n      }\n    }],\n    'anchor': {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: 'function'\n    },\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: 'punctuation',\n      inside: {\n        'group-name': groupName\n      }\n    }, {\n      pattern: /\\)/,\n      alias: 'punctuation'\n    }],\n    'quantifier': {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: 'number'\n    },\n    'alternation': {\n      pattern: /\\|/,\n      alias: 'keyword'\n    }\n  };\n})(Prism);\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: RegExp(\n    // lookbehind\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n    // Regex pattern:\n    // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n    // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n    // with the only syntax, so we have to define 2 different regex patterns.\n    /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' +\n    // `v` flag syntax. This supports 3 levels of nested character classes.\n    /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' +\n    // lookahead\n    /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nPrism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n\n  // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nPrism.languages.js = Prism.languages.javascript;\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag);\n\n  // The following will handle plain text inside tags\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n    if (typeof token === 'string') {\n      return token;\n    }\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n    return token.content.map(stringifyToken).join('');\n  };\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token);\n\n          // And merge text with adjacent text\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n    walkTokens(env.tokens);\n  });\n})(Prism);\n\n// https://www.json.org/json-en.html\nPrism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n(function (Prism) {\n  Prism.languages.kotlin = Prism.languages.extend('clike', {\n    'keyword': {\n      // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: true\n    },\n    'function': [{\n      pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n      greedy: true\n    }, {\n      pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  });\n  delete Prism.languages.kotlin['class-name'];\n  var interpolationInside = {\n    'interpolation-punctuation': {\n      pattern: /^\\$\\{?|\\}$/,\n      alias: 'punctuation'\n    },\n    'expression': {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages.kotlin\n    }\n  };\n  Prism.languages.insertBefore('kotlin', 'string', {\n    // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n    'string-literal': [{\n      pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n      alias: 'multiline',\n      inside: {\n        'interpolation': {\n          pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          inside: interpolationInside\n        },\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n      alias: 'singleline',\n      inside: {\n        'interpolation': {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          lookbehind: true,\n          inside: interpolationInside\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'char': {\n      // https://kotlinlang.org/spec/expressions.html#character-literals\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n      greedy: true\n    }\n  });\n  delete Prism.languages.kotlin['string'];\n  Prism.languages.insertBefore('kotlin', 'keyword', {\n    'annotation': {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'function', {\n    'label': {\n      pattern: /\\b\\w+@|@\\w+\\b/,\n      alias: 'symbol'\n    }\n  });\n  Prism.languages.kt = Prism.languages.kotlin;\n  Prism.languages.kts = Prism.languages.kotlin;\n})(Prism);\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [\n  // Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  },\n  // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\nPrism.languages.lua = {\n  'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  // \\z may be used to skip the following space\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: true\n  },\n  'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  'operator': [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    // Match \"..\" but don't break \"...\"\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: true\n  }],\n  'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n  // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n  // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)';\n  // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n          // only use the first word\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang;\n\n          // add alias\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n    var codeLang = '';\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n    var grammar = Prism.languages[codeLang];\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  };\n\n  // IE 11 doesn't support `String.fromCodePoint`\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, '');\n\n    // decode known entities\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n      if (code[0] === '#') {\n        var value;\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n        if (known) {\n          return known;\n        }\n\n        // unable to decode\n        return m;\n      }\n    });\n    return text;\n  }\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n(function (Prism) {\n  var brackets = /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/.source;\n  Prism.languages.perl = {\n    'comment': [{\n      // POD\n      pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    // TODO Could be nice to handle Heredoc too.\n    'string': [{\n      pattern: RegExp(/\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // q/.../\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n      // q a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // q(...)\n      // q{...}\n      // q[...]\n      // q<...>\n      brackets].join('|') + ')'),\n      greedy: true\n    },\n    // \"...\", `...`\n    {\n      pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true\n    },\n    // '...'\n    // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n    {\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    }],\n    'regex': [{\n      pattern: RegExp(/\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // m/.../\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n      // m a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // m(...)\n      // m{...}\n      // m[...]\n      // m<...>\n      brackets].join('|') + ')' + /[msixpodualngc]*/.source),\n      greedy: true\n    },\n    // The lookbehinds prevent -s from breaking\n    {\n      pattern: RegExp(/(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source + '(?:' + [\n      // s/.../.../\n      // eslint-disable-next-line regexp/strict\n      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n      // s a...a...a\n      // eslint-disable-next-line regexp/strict\n      /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/.source,\n      // s(...)(...)\n      // s{...}{...}\n      // s[...][...]\n      // s<...><...>\n      // s(...)[...]\n      brackets + /\\s*/.source + brackets].join('|') + ')' + /[msixpodualngcer]*/.source),\n      lookbehind: true,\n      greedy: true\n    },\n    // /.../\n    // The look-ahead tries to prevent two divisions on\n    // the same line from being highlighted as regex.\n    // This does not support multi-line regex.\n    {\n      pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n      greedy: true\n    }],\n    // FIXME Not sure about the handling of ::, ', and #\n    'variable': [\n    // ${^POSTMATCH}\n    /[&*$@%]\\{\\^[A-Z]+\\}/,\n    // $^V\n    /[&*$@%]\\^[A-Z_]/,\n    // ${...}\n    /[&*$@%]#?(?=\\{)/,\n    // $foo\n    /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n    // $1\n    /[&*$@%]\\d+/,\n    // $_, @_, %!\n    // The negative lookahead prevents from breaking the %= operator\n    /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n    'filehandle': {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    'v-string': {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    'function': {\n      pattern: /(\\bsub[ \\t]+)\\w+/,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n    'punctuation': /[{}[\\];(),:]/\n  };\n})(Prism);\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n          var i = tokenStack.length;\n          var placeholder;\n\n          // Check for existing strings\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          }\n\n          // Create a sparse array\n          tokenStack[i] = match;\n          return placeholder;\n        });\n\n        // Switch the grammar to markup\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        }\n\n        // Switch the grammar back\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n            var token = tokens[i];\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n                replacement.push(middle);\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content /* && typeof token.content !== 'string' */) {\n              walkTokens(token.content);\n            }\n          }\n          return tokens;\n        }\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    },\n    // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\nPrism.languages.r = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'percent-operator': {\n    // Includes user-defined operators\n    // and %%, %*%, %/%, %in%, %o%, %x%\n    pattern: /%[^%\\s]*%/,\n    alias: 'operator'\n  },\n  'boolean': /\\b(?:FALSE|TRUE)\\b/,\n  'ellipsis': /\\.\\.(?:\\.|\\d+)/,\n  'number': [/\\b(?:Inf|NaN)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n  'keyword': /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n  'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n  'punctuation': /[(){}\\[\\],;]/\n};\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': {\n      pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.\\\\]/\n      }\n    },\n    'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n    'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n    'punctuation': /[(){}[\\].,;]/\n  });\n  Prism.languages.insertBefore('ruby', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  var interpolation = {\n    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n    lookbehind: true,\n    inside: {\n      'content': {\n        pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'punctuation'\n      }\n    }\n  };\n  delete Prism.languages.ruby.function;\n  var percentExpression = '(?:' + [/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source, /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join('|') + ')';\n  var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex-literal': [{\n      pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': [{\n      pattern: RegExp(/(^|[^:]):/.source + symbolName),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n      lookbehind: true,\n      greedy: true\n    }],\n    'method-definition': {\n      pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'function': /\\b\\w+$/,\n        'keyword': /^self\\b/,\n        'class-name': /^\\w+/,\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'string', {\n    'string-literal': [{\n      pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?/\n          }\n        },\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?'|'$/\n          }\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'command-literal': [{\n      pattern: RegExp(/%x/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }, {\n      pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }]\n  });\n  delete Prism.languages.ruby.string;\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n  });\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);\n(function (Prism) {\n  var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n  for (var i = 0; i < 2; i++) {\n    // support 4 levels of nested comments\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return multilineComment;\n    });\n  }\n  multilineComment = multilineComment.replace(/<self>/g, function () {\n    return /[^\\s\\S]/.source;\n  });\n  Prism.languages.rust = {\n    'comment': [{\n      pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'string': {\n      pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n      greedy: true\n    },\n    'char': {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n      greedy: true\n    },\n    'attribute': {\n      pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n      greedy: true,\n      alias: 'attr-name',\n      inside: {\n        'string': null // see below\n      }\n    },\n    // Closure params should not be confused with bitwise OR |\n    'closure-params': {\n      pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'closure-punctuation': {\n          pattern: /^\\||\\|$/,\n          alias: 'punctuation'\n        },\n        rest: null // see below\n      }\n    },\n    'lifetime-annotation': {\n      pattern: /'\\w+/,\n      alias: 'symbol'\n    },\n    'fragment-specifier': {\n      pattern: /(\\$\\w+:)[a-z]+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'variable': /\\$\\w+/,\n    'function-definition': {\n      pattern: /(\\bfn\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'type-definition': {\n      pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'module-declaration': [{\n      pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n      lookbehind: true,\n      alias: 'namespace'\n    }, {\n      pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n      lookbehind: true,\n      alias: 'namespace',\n      inside: {\n        'punctuation': /::/\n      }\n    }],\n    'keyword': [\n    // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n    /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n    // primitives and str\n    // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n    /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],\n    // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n    // and Rust's naming conventions recommend snake_case anyway.\n    // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n    'function': /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n    'macro': {\n      pattern: /\\b\\w+!/,\n      alias: 'property'\n    },\n    'constant': /\\b[A-Z_][A-Z_\\d]+\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    'namespace': {\n      pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n      inside: {\n        'punctuation': /::/\n      }\n    },\n    // Hex, oct, bin, dec numbers with visual separators and type suffix\n    'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'punctuation': /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n    'operator': /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n  };\n  Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust;\n  Prism.languages.rust['attribute'].inside['string'] = Prism.languages.rust['string'];\n})(Prism);\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important;\n\n  // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(Prism);\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/\n      // See rest below\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\nPrism.languages.swift = {\n  'comment': {\n    // Nested comments are supported up to 2 levels\n    pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-literal': [\n  // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n  {\n    pattern: RegExp(/(^|[^\"#])/.source + '(?:'\n    // single-line string\n    + /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + '|'\n    // multi-line string\n    + /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + ')' + /(?![\"#])/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null // see below\n      },\n      'interpolation-punctuation': {\n        pattern: /^\\)|\\\\\\($/,\n        alias: 'punctuation'\n      },\n      'punctuation': /\\\\(?=[\\r\\n])/,\n      'string': /[\\s\\S]+/\n    }\n  }, {\n    pattern: RegExp(/(^|[^\"#])(#+)/.source + '(?:'\n    // single-line string\n    + /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + '|'\n    // multi-line string\n    + /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + ')' + '\\\\2'),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null // see below\n      },\n      'interpolation-punctuation': {\n        pattern: /^\\)|\\\\#+\\($/,\n        alias: 'punctuation'\n      },\n      'string': /[\\s\\S]+/\n    }\n  }],\n  'directive': {\n    // directives with conditions\n    pattern: RegExp(/#/.source + '(?:' + (/(?:elseif|if)\\b/.source + '(?:[ \\t]*'\n    // This regex is a little complex. It's equivalent to this:\n    //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n    // where <round> is a general parentheses expression.\n    + /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + ')+') + '|' + /(?:else|endif)\\b/.source + ')'),\n    alias: 'property',\n    inside: {\n      'directive-name': /^#\\w+/,\n      'boolean': /\\b(?:false|true)\\b/,\n      'number': /\\b\\d+(?:\\.\\d+)*\\b/,\n      'operator': /!|&&|\\|\\||[<>]=?/,\n      'punctuation': /[(),]/\n    }\n  },\n  'literal': {\n    pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n    alias: 'constant'\n  },\n  'other-directive': {\n    pattern: /#\\w+\\b/,\n    alias: 'property'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'atrule'\n  },\n  'function-definition': {\n    pattern: /(\\bfunc\\s+)\\w+/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'label': {\n    // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n    pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'keyword': /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'nil': {\n    pattern: /\\bnil\\b/,\n    alias: 'constant'\n  },\n  'short-argument': /\\$\\d+\\b/,\n  'omit': {\n    pattern: /\\b_\\b/,\n    alias: 'keyword'\n  },\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n  'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'constant': /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n  // This regex only supports ASCII operators.\n  'operator': /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n  'punctuation': /[{}[\\]();,.:\\\\]/\n};\nPrism.languages.swift['string-literal'].forEach(function (rule) {\n  rule.inside['interpolation'].inside = Prism.languages.swift;\n});\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  });\n\n  // The keywords TypeScript adds to JavaScript\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n  // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n  // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/);\n\n  // doesn't work with TS because TS is too complex\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property'];\n\n  // a version of typescript specifically for highlighting types\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n  // doesn't work with TS because TS is too complex\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property'];\n\n  // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\nPrism.languages.basic = {\n  'comment': {\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  },\n  'string': {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n  'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n  'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n  'punctuation': /[,;:()]/\n};\nPrism.languages.vbnet = Prism.languages.extend('basic', {\n  'comment': [{\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  }, {\n    pattern: /(^|[^\\\\:])'.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n  'punctuation': /[,;:(){}]/\n});\n\nconst languages = [{\n  label: 'C',\n  value: 'c'\n}, {\n  label: 'C++',\n  value: 'cpp'\n}, {\n  label: 'Arduino',\n  value: 'arduino'\n}, {\n  label: 'Bash',\n  value: 'bash'\n}, {\n  label: 'C#',\n  value: 'csharp'\n}, {\n  label: 'CSS',\n  value: 'css'\n}, {\n  label: 'Diff',\n  value: 'diff'\n}, {\n  label: 'Go',\n  value: 'go'\n}, {\n  label: 'INI',\n  value: 'ini'\n}, {\n  label: 'Java',\n  value: 'java'\n}, {\n  label: 'JavaScript',\n  value: 'javascript'\n}, {\n  label: 'JSX',\n  value: 'jsx'\n}, {\n  label: 'JSON',\n  value: 'json'\n}, {\n  label: 'Kotlin',\n  value: 'kotlin'\n}, {\n  label: 'Less',\n  value: 'less'\n}, {\n  label: 'Lua',\n  value: 'lua'\n}, {\n  label: 'Makefile',\n  value: 'makefile'\n}, {\n  label: 'Markdown',\n  value: 'markdown'\n}, {\n  label: 'Objective-C',\n  value: 'objectivec'\n}, {\n  label: 'Perl',\n  value: 'perl'\n}, {\n  label: 'PHP',\n  value: 'php'\n}, {\n  label: 'Python',\n  value: 'python'\n}, {\n  label: 'R',\n  value: 'r'\n}, {\n  label: 'Ruby',\n  value: 'ruby'\n}, {\n  label: 'Rust',\n  value: 'rust'\n}, {\n  label: 'Sass',\n  value: 'sass'\n}, {\n  label: 'SCSS',\n  value: 'scss'\n}, {\n  label: 'SQL',\n  value: 'sql'\n}, {\n  label: 'Swift',\n  value: 'swift'\n}, {\n  label: 'TypeScript',\n  value: 'typescript'\n}, {\n  label: 'TSX',\n  value: 'tsx'\n}, {\n  label: 'VB.NET',\n  value: 'vbnet'\n}, {\n  label: 'YAML',\n  value: 'yaml'\n}];\nconst canonicalNameToLabel = new Map(languages.map(x => [x.value, x.label]));\nconst labelToCanonicalName = new Map(languages.map(x => [x.label, x.value]));\nconst languageToCanonicalName = new Map(languages.map(lang => [Prism.languages[lang.value], lang.value]));\nconst aliasesToCanonicalName = new Map(Object.keys(Prism.languages).flatMap(lang => {\n  const canonicalName = languageToCanonicalName.get(Prism.languages[lang]);\n  if (canonicalName === undefined) {\n    return [];\n  }\n  return [[lang, canonicalName]];\n}));\nconst languagesToAliases = new Map(languages.map(lang => [lang.value, []]));\nfor (const [alias, canonicalName] of aliasesToCanonicalName) {\n  languagesToAliases.get(canonicalName).push(alias);\n}\nconst languagesWithAliases = [{\n  label: 'Plain text',\n  value: 'plain',\n  aliases: []\n}, ...[...languagesToAliases].map(([canonicalName, aliases]) => ({\n  label: canonicalNameToLabel.get(canonicalName),\n  value: canonicalName,\n  aliases\n}))];\nconst aliasesToLabel = new Map([...aliasesToCanonicalName].map(([alias, canonicalName]) => [alias, canonicalNameToLabel.get(canonicalName)]));\n\nconst codeBlockShortcutPattern = /^```(\\w+)? ?$/;\nfunction withCodeBlock(documentFeatures, componentBlocks, editor) {\n  const {\n    insertBreak,\n    normalizeNode,\n    insertText\n  } = editor;\n  function codeBlockShortcut(block) {\n    var _aliasesToCanonicalNa;\n    if ((block === null || block === void 0 ? void 0 : block[0].type) !== 'paragraph' || block[0].children.length !== 1 || block[0].children[0].type !== undefined) {\n      return false;\n    }\n    const match = codeBlockShortcutPattern.exec(block[0].children[0].text);\n    if (!match) {\n      return false;\n    }\n    const locationDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, documentFeatures, componentBlocks);\n    if (locationDocumentFeatures && (locationDocumentFeatures.kind === 'inline' || !locationDocumentFeatures.documentFeatures.formatting.blockTypes.code)) {\n      return false;\n    }\n\n    // so that this starts a new undo group\n    editor.history.undos.push({\n      operations: [],\n      selectionBefore: editor.selection\n    });\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.select(editor, block[1]);\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.delete(editor);\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.wrapNodes(editor, {\n      type: 'code',\n      ...(match[1] ? {\n        language: (_aliasesToCanonicalNa = aliasesToCanonicalName.get(match[1].toLowerCase())) !== null && _aliasesToCanonicalNa !== void 0 ? _aliasesToCanonicalNa : match[1]\n      } : {}),\n      children: []\n    }, {\n      match: node => node.type === 'paragraph'\n    });\n    return true;\n  }\n  editor.insertBreak = () => {\n    const block = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n      match: isBlock\n    });\n    if ((block === null || block === void 0 ? void 0 : block[0].type) === 'code' && slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(block[0].children[0])) {\n      const text = block[0].children[0].text;\n      if (text[text.length - 1] === '\\n' && editor.selection && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_6__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_6__.Editor.end(editor, block[1]), editor.selection.anchor)) {\n        insertBreak();\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n          type: 'paragraph',\n          children: []\n        });\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.delete(editor, {\n          distance: 1,\n          at: {\n            path: [...block[1], 0],\n            offset: text.length - 1\n          }\n        });\n        return;\n      }\n      editor.insertText('\\n');\n      return;\n    }\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) && codeBlockShortcut(block)) {\n      return;\n    }\n    insertBreak();\n  };\n  editor.insertText = text => {\n    insertText(text);\n    if (text === ' ' && editor.selection && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection)) {\n      codeBlockShortcut(slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n        match: isBlock\n      }));\n    }\n  };\n  editor.normalizeNode = ([node, path]) => {\n    if (node.type === 'code' && slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node)) {\n      for (const [index, childNode] of node.children.entries()) {\n        if (!slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(childNode)) {\n          if (editor.isVoid(childNode)) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: [...path, index]\n            });\n          } else {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n              at: [...path, index]\n            });\n          }\n          return;\n        }\n        const marks = Object.keys(childNode).filter(x => x !== 'text');\n        if (marks.length) {\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unsetNodes(editor, marks, {\n            at: [...path, index]\n          });\n          return;\n        }\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nfunction findChildPropPathsForProp(value, schema, path) {\n  switch (schema.kind) {\n    case 'form':\n      return [];\n    case 'child':\n      return [{\n        path: path,\n        options: schema.options\n      }];\n    case 'conditional':\n      return findChildPropPathsForProp(value.value, schema.values[value.discriminant], path.concat('value'));\n    case 'object':\n      {\n        const paths = [];\n        Object.keys(schema.fields).forEach(key => {\n          paths.push(...findChildPropPathsForProp(value[key], schema.fields[key], path.concat(key)));\n        });\n        return paths;\n      }\n    case 'array':\n      {\n        const paths = [];\n        value.forEach((val, i) => {\n          paths.push(...findChildPropPathsForProp(val, schema.element, path.concat(i)));\n        });\n        return paths;\n      }\n  }\n}\nfunction findChildPropPaths(value, props) {\n  const propPaths = findChildPropPathsForProp(value, {\n    kind: 'object',\n    fields: props\n  }, []);\n  if (!propPaths.length) {\n    return [{\n      path: undefined,\n      options: {\n        kind: 'inline',\n        placeholder: ''\n      }\n    }];\n  }\n  return propPaths;\n}\n\nfunction getAncestorComponentBlock(editor) {\n  if (editor.selection) {\n    const ancestorEntry = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n      match: node => isBlock(node) && node.type !== 'paragraph'\n    });\n    if (ancestorEntry && (ancestorEntry[0].type === 'component-block-prop' || ancestorEntry[0].type === 'component-inline-prop')) {\n      return {\n        isInside: true,\n        componentBlock: slate__WEBPACK_IMPORTED_MODULE_6__.Editor.parent(editor, ancestorEntry[1]),\n        prop: ancestorEntry\n      };\n    }\n  }\n  return {\n    isInside: false\n  };\n}\nconst alreadyNormalizedThings = new WeakMap();\nfunction normalizeNodeWithinComponentProp([node, path], editor, fieldOptions) {\n  let alreadyNormalizedNodes = alreadyNormalizedThings.get(fieldOptions);\n  if (!alreadyNormalizedNodes) {\n    alreadyNormalizedNodes = new WeakSet();\n    alreadyNormalizedThings.set(fieldOptions, alreadyNormalizedNodes);\n  }\n  if (alreadyNormalizedNodes.has(node)) {\n    return false;\n  }\n  let didNormalization = false;\n  if (fieldOptions.inlineMarks !== 'inherit' && slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(node)) {\n    didNormalization = normalizeTextBasedOnInlineMarksAndSoftBreaks([node, path], editor, fieldOptions.inlineMarks, fieldOptions.softBreaks);\n  }\n  if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node)) {\n    let childrenHasChanged = node.children.map((node, i) => normalizeNodeWithinComponentProp([node, [...path, i]], editor, fieldOptions))\n    // .map then .some because we don't want to exit early\n    .some(x => x);\n    if (fieldOptions.kind === 'block') {\n      if (node.type === 'component-block') {\n        if (!fieldOptions.componentBlocks) {\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n            at: path\n          });\n          didNormalization = true;\n        }\n      } else {\n        didNormalization = normalizeElementBasedOnDocumentFeatures([node, path], editor, fieldOptions.documentFeatures) || childrenHasChanged;\n      }\n    } else {\n      didNormalization = normalizeInlineBasedOnLinks([node, path], editor, fieldOptions.documentFeatures.links);\n    }\n  }\n  if (didNormalization === false) {\n    alreadyNormalizedNodes.add(node);\n  }\n  return didNormalization;\n}\nfunction canSchemaContainChildField(rootSchema) {\n  const queue = new Set([rootSchema]);\n  for (const schema of queue) {\n    if (schema.kind === 'form') ; else if (schema.kind === 'child') {\n      return true;\n    } else if (schema.kind === 'array') {\n      queue.add(schema.element);\n    } else if (schema.kind === 'object') {\n      for (const innerProp of Object.values(schema.fields)) {\n        queue.add(innerProp);\n      }\n    } else if (schema.kind === 'conditional') {\n      for (const innerProp of Object.values(schema.values)) {\n        queue.add(innerProp);\n      }\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n    }\n  }\n  return false;\n}\nfunction doesSchemaOnlyEverContainASingleChildField(rootSchema) {\n  const queue = new Set([rootSchema]);\n  let hasFoundChildField = false;\n  for (const schema of queue) {\n    if (schema.kind === 'form') ; else if (schema.kind === 'child') {\n      if (hasFoundChildField) {\n        return false;\n      }\n      hasFoundChildField = true;\n    } else if (schema.kind === 'array') {\n      if (canSchemaContainChildField(schema.element)) {\n        return false;\n      }\n    } else if (schema.kind === 'object') {\n      for (const innerProp of Object.values(schema.fields)) {\n        queue.add(innerProp);\n      }\n    } else if (schema.kind === 'conditional') {\n      for (const innerProp of Object.values(schema.values)) {\n        queue.add(innerProp);\n      }\n    } else {\n      (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n    }\n  }\n  return hasFoundChildField;\n}\nfunction findArrayFieldsWithSingleChildField(schema, value) {\n  const propPaths = [];\n  traverseProps(schema, value, (schema, value, path) => {\n    if (schema.kind === 'array' && doesSchemaOnlyEverContainASingleChildField(schema.element)) {\n      propPaths.push([path, schema]);\n    }\n  });\n  return propPaths;\n}\nfunction isEmptyChildFieldNode(element) {\n  const firstChild = element.children[0];\n  return element.children.length === 1 && (element.type === 'component-inline-prop' && firstChild.type === undefined && firstChild.text === '' || element.type === 'component-block-prop' && firstChild.type === 'paragraph' && firstChild.children.length === 1 && firstChild.children[0].type === undefined && firstChild.children[0].text === '');\n}\nfunction withComponentBlocks(blockComponents, editorDocumentFeatures, editor) {\n  // note that conflicts between the editor document features\n  // and the child field document features are dealt with elsewhere\n  const memoizedGetDocumentFeaturesForChildField = (0,_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(options => {\n    return getDocumentFeaturesForChildField(editorDocumentFeatures, options);\n  });\n  const {\n    normalizeNode,\n    deleteBackward,\n    insertBreak\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection) {\n      const ancestorComponentBlock = getAncestorComponentBlock(editor);\n      if (ancestorComponentBlock.isInside && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isStart(editor, editor.selection.anchor, ancestorComponentBlock.prop[1]) && ancestorComponentBlock.prop[1][ancestorComponentBlock.prop[1].length - 1] === 0) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n          at: ancestorComponentBlock.componentBlock[1]\n        });\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.insertBreak = () => {\n    const ancestorComponentBlock = getAncestorComponentBlock(editor);\n    if (editor.selection && ancestorComponentBlock.isInside) {\n      const {\n        prop: [componentPropNode, componentPropPath],\n        componentBlock: [componentBlockNode, componentBlockPath]\n      } = ancestorComponentBlock;\n      const isLastProp = componentPropPath[componentPropPath.length - 1] === componentBlockNode.children.length - 1;\n      if (componentPropNode.type === 'component-block-prop') {\n        const [[paragraphNode, paragraphPath]] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.nodes(editor, {\n          match: node => node.type === 'paragraph'\n        });\n        const isLastParagraph = paragraphPath[paragraphPath.length - 1] === componentPropNode.children.length - 1;\n        if (slate__WEBPACK_IMPORTED_MODULE_6__.Node.string(paragraphNode) === '' && isLastParagraph) {\n          if (isLastProp) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n              at: paragraphPath,\n              to: slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(ancestorComponentBlock.componentBlock[1])\n            });\n          } else {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.move(editor, {\n              distance: 1,\n              unit: 'line'\n            });\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: paragraphPath\n            });\n          }\n          return;\n        }\n      }\n      if (componentPropNode.type === 'component-inline-prop') {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Editor.withoutNormalizing(editor, () => {\n          const componentBlock = blockComponents[componentBlockNode.component];\n          if (componentPropNode.propPath !== undefined && componentBlock !== undefined) {\n            const rootSchema = {\n              kind: 'object',\n              fields: componentBlock.schema\n            };\n            const ancestorFields = getAncestorSchemas(rootSchema, componentPropNode.propPath, componentBlockNode.props);\n            const idx = [...ancestorFields].reverse().findIndex(item => item.kind === 'array');\n            if (idx !== -1) {\n              const arrayFieldIdx = ancestorFields.length - 1 - idx;\n              const arrayField = ancestorFields[arrayFieldIdx];\n              (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(arrayField.kind === 'array');\n              const val = getValueAtPropPath(componentBlockNode.props, componentPropNode.propPath.slice(0, arrayFieldIdx));\n              if (doesSchemaOnlyEverContainASingleChildField(arrayField.element)) {\n                if (slate__WEBPACK_IMPORTED_MODULE_6__.Node.string(componentPropNode) === '' && val.length - 1 === componentPropNode.propPath[arrayFieldIdx]) {\n                  slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n                    at: componentPropPath\n                  });\n                  if (isLastProp) {\n                    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, {\n                      type: 'paragraph',\n                      children: [{\n                        text: ''\n                      }]\n                    }, {\n                      at: slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(componentBlockPath)\n                    });\n                    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.select(editor, slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(componentBlockPath));\n                  } else {\n                    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.move(editor, {\n                      distance: 1,\n                      unit: 'line'\n                    });\n                  }\n                } else {\n                  insertBreak();\n                }\n                return;\n              }\n            }\n          }\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.splitNodes(editor, {\n            always: true\n          });\n          const splitNodePath = slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(componentPropPath);\n          if (isLastProp) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n              at: splitNodePath,\n              to: slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(componentBlockPath)\n            });\n          } else {\n            moveChildren(editor, splitNodePath, [...slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(splitNodePath), 0]);\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: splitNodePath\n            });\n          }\n        });\n        return;\n      }\n    }\n    insertBreak();\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (node.type === 'component-inline-prop' && !node.propPath && (node.children.length !== 1 || !slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(node.children[0]) || node.children[0].text !== '')) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n        at: path\n      });\n      return;\n    }\n    if (node.type === 'component-block') {\n      const componentBlock = blockComponents[node.component];\n      if (componentBlock) {\n        const rootSchema = {\n          kind: 'object',\n          fields: componentBlock.schema\n        };\n        const updatedProps = addMissingFields(node.props, rootSchema);\n        if (updatedProps !== node.props) {\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n            props: updatedProps\n          }, {\n            at: path\n          });\n          return;\n        }\n        for (const [propPath, arrayField] of findArrayFieldsWithSingleChildField(rootSchema, node.props)) {\n          if (node.children.length === 1 && node.children[0].type === 'component-inline-prop' && node.children[0].propPath === undefined) {\n            break;\n          }\n          const nodesWithin = [];\n          for (const [idx, childNode] of node.children.entries()) {\n            if ((childNode.type === 'component-block-prop' || childNode.type === 'component-inline-prop') && childNode.propPath !== undefined) {\n              const subPath = childNode.propPath.concat();\n              while (subPath.length) {\n                if (typeof subPath.pop() === 'number') break;\n              }\n              if (areArraysEqual(propPath, subPath)) {\n                nodesWithin.push([idx, childNode]);\n              }\n            }\n          }\n          const arrVal = getValueAtPropPath(node.props, propPath);\n          const prevKeys = getKeysForArrayValue(arrVal);\n          const prevKeysSet = new Set(prevKeys);\n          const alreadyUsedIndicies = new Set();\n          const newVal = [];\n          const newKeys = [];\n          const getNewKey = () => {\n            let key = getNewArrayElementKey();\n            while (prevKeysSet.has(key)) {\n              key = getNewArrayElementKey();\n            }\n            return key;\n          };\n          for (const [, node] of nodesWithin) {\n            const idxFromValue = node.propPath[propPath.length];\n            (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(typeof idxFromValue === 'number');\n            if (arrVal.length <= idxFromValue || alreadyUsedIndicies.has(idxFromValue) && isEmptyChildFieldNode(node)) {\n              newVal.push(getInitialPropsValue(arrayField.element));\n              newKeys.push(getNewKey());\n            } else {\n              alreadyUsedIndicies.add(idxFromValue);\n              newVal.push(arrVal[idxFromValue]);\n              newKeys.push(alreadyUsedIndicies.has(idxFromValue) ? getNewKey() : prevKeys[idxFromValue]);\n            }\n          }\n          setKeysForArrayValue(newVal, newKeys);\n          if (!areArraysEqual(arrVal, newVal)) {\n            const transformedProps = replaceValueAtPropPath(rootSchema, node.props, newVal, propPath);\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n              props: transformedProps\n            }, {\n              at: path\n            });\n            for (const [idx, [idxInChildrenOfBlock, nodeWithin]] of nodesWithin.entries()) {\n              const newPropPath = [...nodeWithin.propPath];\n              newPropPath[propPath.length] = idx;\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n                propPath: newPropPath\n              }, {\n                at: [...path, idxInChildrenOfBlock]\n              });\n            }\n            return;\n          }\n        }\n        const missingKeys = new Map(findChildPropPaths(node.props, componentBlock.schema).map(x => [JSON.stringify(x.path), x.options.kind]));\n        node.children.forEach(node => {\n          (0,emery__WEBPACK_IMPORTED_MODULE_1__.assert)(node.type === 'component-block-prop' || node.type === 'component-inline-prop');\n          missingKeys.delete(JSON.stringify(node.propPath));\n        });\n        if (missingKeys.size) {\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, [...missingKeys].map(([prop, kind]) => ({\n            type: `component-${kind}-prop`,\n            propPath: prop ? JSON.parse(prop) : prop,\n            children: [{\n              text: ''\n            }]\n          })), {\n            at: [...path, node.children.length]\n          });\n          return;\n        }\n        const foundProps = new Set();\n        const stringifiedInlinePropPaths = {};\n        findChildPropPaths(node.props, blockComponents[node.component].schema).forEach((x, index) => {\n          stringifiedInlinePropPaths[JSON.stringify(x.path)] = {\n            options: x.options,\n            index\n          };\n        });\n        for (const [index, childNode] of node.children.entries()) {\n          if (\n          // children that are not these will be handled by\n          // the generic allowedChildren normalization\n          childNode.type !== 'component-inline-prop' && childNode.type !== 'component-block-prop') {\n            continue;\n          }\n          const childPath = [...path, index];\n          const stringifiedPropPath = JSON.stringify(childNode.propPath);\n          if (stringifiedInlinePropPaths[stringifiedPropPath] === undefined) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: childPath\n            });\n            return;\n          }\n          if (foundProps.has(stringifiedPropPath)) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: childPath\n            });\n            return;\n          }\n          foundProps.add(stringifiedPropPath);\n          const propInfo = stringifiedInlinePropPaths[stringifiedPropPath];\n          const expectedIndex = propInfo.index;\n          if (index !== expectedIndex) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n              at: childPath,\n              to: [...path, expectedIndex]\n            });\n            return;\n          }\n          const expectedChildNodeType = `component-${propInfo.options.kind}-prop`;\n          if (childNode.type !== expectedChildNodeType) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n              type: expectedChildNodeType\n            }, {\n              at: childPath\n            });\n            return;\n          }\n          const documentFeatures = memoizedGetDocumentFeaturesForChildField(propInfo.options);\n          if (normalizeNodeWithinComponentProp([childNode, childPath], editor, documentFeatures)) {\n            return;\n          }\n        }\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\n// the only thing that this will fix is a new field being added to an object field, nothing else.\nfunction addMissingFields(value, schema) {\n  if (schema.kind === 'child' || schema.kind === 'form') {\n    return value;\n  }\n  if (schema.kind === 'conditional') {\n    const conditionalValue = value;\n    const updatedInnerValue = addMissingFields(conditionalValue.value, schema.values[conditionalValue.discriminant.toString()]);\n    if (updatedInnerValue === conditionalValue.value) {\n      return value;\n    }\n    return {\n      discriminant: conditionalValue.discriminant,\n      value: updatedInnerValue\n    };\n  }\n  if (schema.kind === 'array') {\n    const arrValue = value;\n    const newArrValue = arrValue.map(x => addMissingFields(x, schema.element));\n    if (areArraysEqual(arrValue, newArrValue)) {\n      return value;\n    }\n    return newArrValue;\n  }\n  if (schema.kind === 'object') {\n    const objectValue = value;\n    let hasChanged = false;\n    const newObjectValue = {};\n    for (const [key, innerSchema] of Object.entries(schema.fields)) {\n      const innerValue = objectValue[key];\n      if (innerValue === undefined) {\n        hasChanged = true;\n        newObjectValue[key] = getInitialPropsValue(innerSchema);\n        continue;\n      }\n      const newInnerValue = addMissingFields(innerValue, innerSchema);\n      if (newInnerValue !== innerValue) {\n        hasChanged = true;\n      }\n      newObjectValue[key] = newInnerValue;\n    }\n    if (hasChanged) {\n      return newObjectValue;\n    }\n    return value;\n  }\n  (0,emery__WEBPACK_IMPORTED_MODULE_1__.assertNever)(schema);\n}\n\nconst paragraphElement = () => ({\n  type: 'paragraph',\n  children: [{\n    text: ''\n  }]\n});\nfunction withParagraphs(editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isEditor(node)) {\n      let lastNode = node.children[node.children.length - 1];\n      if ((lastNode === null || lastNode === void 0 ? void 0 : lastNode.type) !== 'paragraph') {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, paragraphElement(), {\n          at: [...path, node.children.length]\n        });\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nfunction withLayouts(editor) {\n  const {\n    normalizeNode,\n    deleteBackward\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) &&\n    // this is just an little optimisation\n    // we're only doing things if we're at the start of a layout area\n    // and the start of anything will always be offset 0\n    // so we'll bailout if we're not at offset 0\n    editor.selection.anchor.offset === 0) {\n      const [aboveNode, abovePath] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n        match: node => node.type === 'layout-area'\n      }) || [editor, []];\n      if (aboveNode.type === 'layout-area' && slate__WEBPACK_IMPORTED_MODULE_6__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, abovePath), editor.selection.anchor)) {\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node) && node.type === 'layout') {\n      if (node.layout === undefined) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      if (node.children.length < node.layout.length) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, Array.from({\n          length: node.layout.length - node.children.length\n        }).map(() => ({\n          type: 'layout-area',\n          children: [paragraphElement()]\n        })), {\n          at: [...path, node.children.length]\n        });\n        return;\n      }\n      if (node.children.length > node.layout.length) {\n        Array.from({\n          length: node.children.length - node.layout.length\n        }).map((_, i) => i).reverse().forEach(i => {\n          const layoutAreaToRemovePath = [...path, i + node.layout.length];\n          const child = node.children[i + node.layout.length];\n          moveChildren(editor, layoutAreaToRemovePath, [...path, node.layout.length - 1, node.children[node.layout.length - 1].children.length], node => node.type !== 'paragraph' || slate__WEBPACK_IMPORTED_MODULE_6__.Node.string(child) !== '');\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n            at: layoutAreaToRemovePath\n          });\n        });\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nconst markdownLinkPattern = /(^|\\s)\\[(.+?)\\]\\((\\S+)\\)$/;\nfunction withLink(editorDocumentFeatures, componentBlocks, editor) {\n  const {\n    insertText,\n    isInline,\n    normalizeNode\n  } = editor;\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element);\n  };\n  if (editorDocumentFeatures.links) {\n    editor.insertText = text => {\n      insertText(text);\n      if (text !== ')' || !editor.selection) {\n        return;\n      }\n      const startOfBlock = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n        match: isBlock\n      })[1]);\n      const startOfBlockToEndOfShortcutString = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.string(editor, {\n        anchor: editor.selection.anchor,\n        focus: startOfBlock\n      });\n      const match = markdownLinkPattern.exec(startOfBlockToEndOfShortcutString);\n      if (!match) {\n        return;\n      }\n      const ancestorComponentChildFieldDocumentFeatures = getAncestorComponentChildFieldDocumentFeatures(editor, editorDocumentFeatures, componentBlocks);\n      if ((ancestorComponentChildFieldDocumentFeatures === null || ancestorComponentChildFieldDocumentFeatures === void 0 ? void 0 : ancestorComponentChildFieldDocumentFeatures.documentFeatures.links) === false) {\n        return;\n      }\n      const [, maybeWhitespace, linkText, href] = match;\n      // by doing this, the insertText(')') above will happen in a different undo than the link replacement\n      // so that means that when someone does an undo after this\n      // it will undo to the state of \"[content](link)\" rather than \"[content](link\" (note the missing closing bracket)\n      editor.history.undos.push({\n        operations: [],\n        selectionBefore: editor.selection\n      });\n      const startOfShortcut = match.index === 0 ? startOfBlock : EditorAfterButIgnoringingPointsWithNoContent(editor, startOfBlock, {\n        distance: match.index\n      });\n      const startOfLinkText = EditorAfterButIgnoringingPointsWithNoContent(editor, startOfShortcut, {\n        distance: maybeWhitespace === '' ? 1 : 2\n      });\n      const endOfLinkText = EditorAfterButIgnoringingPointsWithNoContent(editor, startOfLinkText, {\n        distance: linkText.length\n      });\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.delete(editor, {\n        at: {\n          anchor: endOfLinkText,\n          focus: editor.selection.anchor\n        }\n      });\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.delete(editor, {\n        at: {\n          anchor: startOfShortcut,\n          focus: startOfLinkText\n        }\n      });\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.wrapNodes(editor, {\n        type: 'link',\n        href,\n        children: []\n      }, {\n        at: {\n          anchor: editor.selection.anchor,\n          focus: startOfShortcut\n        },\n        split: true\n      });\n      const nextNode = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.next(editor);\n      if (nextNode) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.select(editor, nextNode[1]);\n      }\n    };\n  }\n  editor.normalizeNode = ([node, path]) => {\n    if (node.type === 'link') {\n      if (slate__WEBPACK_IMPORTED_MODULE_6__.Node.string(node) === '') {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      for (const [idx, child] of node.children.entries()) {\n        if (child.type === 'link') {\n          // links cannot contain links\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n            at: [...path, idx]\n          });\n          return;\n        }\n      }\n    }\n    if (isInlineContainer(node)) {\n      let lastMergableLink = null;\n      for (const [idx, child] of node.children.entries()) {\n        var _lastMergableLink;\n        if (child.type === 'link' && child.href === ((_lastMergableLink = lastMergableLink) === null || _lastMergableLink === void 0 ? void 0 : _lastMergableLink.node.href)) {\n          const firstLinkPath = [...path, lastMergableLink.index];\n          const secondLinkPath = [...path, idx];\n          const to = [...firstLinkPath, lastMergableLink.node.children.length];\n          // note this is going in reverse, js doesn't have double-ended iterators so it's a for(;;)\n          for (let i = child.children.length - 1; i >= 0; i--) {\n            const childPath = [...secondLinkPath, i];\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n              at: childPath,\n              to\n            });\n          }\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n            at: secondLinkPath\n          });\n          return;\n        }\n        if (!slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(child) || child.text !== '') {\n          lastMergableLink = null;\n        }\n        if (child.type === 'link') {\n          lastMergableLink = {\n            index: idx,\n            node: child\n          };\n        }\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\n\nconst isListType = type => type === 'ordered-list' || type === 'unordered-list';\nconst isListNode = node => isListType(node.type);\nfunction getAncestorList(editor) {\n  if (editor.selection) {\n    const listItem = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n      match: nodeTypeMatcher('list-item')\n    });\n    const list = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n      match: isListNode\n    });\n    if (listItem && list) {\n      return {\n        isInside: true,\n        listItem,\n        list\n      };\n    }\n  }\n  return {\n    isInside: false\n  };\n}\nfunction withList(editor) {\n  const {\n    insertBreak,\n    normalizeNode,\n    deleteBackward\n  } = editor;\n  editor.deleteBackward = unit => {\n    if (editor.selection) {\n      const ancestorList = getAncestorList(editor);\n      if (ancestorList.isInside && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) && slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isStart(editor, editor.selection.anchor, ancestorList.list[1])) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n          match: isListNode,\n          split: true\n        });\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.insertBreak = () => {\n    const [listItem] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.nodes(editor, {\n      match: node => node.type === 'list-item',\n      mode: 'lowest'\n    });\n    if (listItem && slate__WEBPACK_IMPORTED_MODULE_6__.Node.string(listItem[0]) === '') {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n        match: isListNode,\n        split: true\n      });\n      return;\n    }\n    insertBreak();\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(node) || slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isEditor(node)) {\n      const isElementBeingNormalizedAList = isListNode(node);\n      for (const [childNode, childPath] of slate__WEBPACK_IMPORTED_MODULE_6__.Node.children(editor, path)) {\n        const index = childPath[childPath.length - 1];\n        // merge sibling lists\n        if (isListNode(childNode)) {\n          var _node$children;\n          if (((_node$children = node.children[childPath[childPath.length - 1] + 1]) === null || _node$children === void 0 ? void 0 : _node$children.type) === childNode.type) {\n            const siblingNodePath = slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(childPath);\n            moveChildren(editor, siblingNodePath, [...childPath, childNode.children.length]);\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: siblingNodePath\n            });\n            return;\n          }\n          if (isElementBeingNormalizedAList) {\n            const previousChild = node.children[index - 1];\n            if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(previousChild)) {\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n                at: childPath,\n                to: [...slate__WEBPACK_IMPORTED_MODULE_6__.Path.previous(childPath), previousChild.children.length - 1]\n              });\n            } else {\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n                at: childPath\n              });\n            }\n            return;\n          }\n        }\n        if (node.type === 'list-item' && childNode.type !== 'list-item-content' && index === 0 && isBlock(childNode)) {\n          if (path[path.length - 1] !== 0) {\n            const previousChild = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(editor, slate__WEBPACK_IMPORTED_MODULE_6__.Path.previous(path));\n            if (slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(previousChild)) {\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n                at: path,\n                to: [...slate__WEBPACK_IMPORTED_MODULE_6__.Path.previous(path), previousChild.children.length]\n              });\n              return;\n            }\n          }\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n            at: childPath\n          });\n          return;\n        }\n        if (node.type === 'list-item' && childNode.type === 'list-item-content' && index !== 0) {\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.splitNodes(editor, {\n            at: childPath\n          });\n          return;\n        }\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nfunction order(a, b) {\n  return {\n    start: Math.min(a, b),\n    end: Math.max(a, b)\n  };\n}\nfunction getRelativeRowPath(hasHead, rowIndex) {\n  return hasHead ? rowIndex === 0 ? [0, 0] : [1, rowIndex - 1] : [0, rowIndex];\n}\nfunction getSelectedTableArea(editor) {\n  var _Editor$above, _editor$selection, _Editor$above2, _editor$selection2;\n  const anchor = (_Editor$above = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n    match: nodeTypeMatcher('table-cell'),\n    at: (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.anchor.path\n  })) === null || _Editor$above === void 0 ? void 0 : _Editor$above[1];\n  const focus = (_Editor$above2 = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n    match: nodeTypeMatcher('table-cell'),\n    at: (_editor$selection2 = editor.selection) === null || _editor$selection2 === void 0 ? void 0 : _editor$selection2.focus.path\n  })) === null || _Editor$above2 === void 0 ? void 0 : _Editor$above2[1];\n  const table = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n    match: nodeTypeMatcher('table')\n  });\n  if (editor.selection && table && slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(table[0].children[0]) && anchor && focus && slate__WEBPACK_IMPORTED_MODULE_6__.Path.equals(anchor.slice(0, -3), focus.slice(0, -3))) {\n    const [start, end] = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.edges(editor, editor.selection);\n    return {\n      tablePath: table[1],\n      table: table[0],\n      singleCell: slate__WEBPACK_IMPORTED_MODULE_6__.Path.equals(anchor, focus) ? slate__WEBPACK_IMPORTED_MODULE_6__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, anchor), start) && slate__WEBPACK_IMPORTED_MODULE_6__.Point.equals(slate__WEBPACK_IMPORTED_MODULE_6__.Editor.end(editor, anchor), end) && !slate__WEBPACK_IMPORTED_MODULE_6__.Point.equals(start, end) ? 'selected' : 'not-selected' : 'many',\n      row: order(anchor[anchor.length - 2] + anchor[anchor.length - 3], focus[focus.length - 2] + focus[anchor.length - 3]),\n      column: order(anchor[anchor.length - 1], focus[focus.length - 1])\n    };\n  }\n}\nconst cell = header => ({\n  type: 'table-cell',\n  ...(header ? {\n    header: true\n  } : {}),\n  children: [{\n    type: 'paragraph',\n    children: [{\n      text: ''\n    }]\n  }]\n});\nfunction cloneDescendant(node) {\n  if (slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(node)) return {\n    ...node\n  };\n  return {\n    ...node,\n    children: node.children.map(cloneDescendant)\n  };\n}\nfunction withTable(editor) {\n  const {\n    deleteFragment,\n    normalizeNode,\n    getFragment,\n    insertFragment,\n    deleteBackward\n  } = editor;\n  editor.insertFragment = fragment => {\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (!selectedTableArea || fragment.length !== 1 || fragment[0].type !== 'table') {\n      insertFragment(fragment);\n      return;\n    }\n    const newRows = fragment[0].children.flatMap(child => child.type === 'table-head' || child.type === 'table-body' ? child.children : []);\n    if (!newRows.every(nodeTypeMatcher('table-row'))) {\n      insertFragment(fragment);\n      return;\n    }\n    let {\n      row,\n      column,\n      tablePath,\n      table\n    } = selectedTableArea;\n    const existingBody = selectedTableArea.table.children[selectedTableArea.table.children.length === 1 ? 0 : 1];\n    if (newRows[0].type !== 'table-row' || existingBody.type !== 'table-body' || existingBody.children[0].type !== 'table-row') {\n      insertFragment(fragment);\n      return;\n    }\n    const hasHead = table.children[0].type === 'table-head';\n    if (selectedTableArea.singleCell !== 'many') {\n      row = {\n        start: row.start,\n        end: Math.min(row.start + newRows.length - 1, existingBody.children.length - 1 + (hasHead ? 1 : 0))\n      };\n      column = {\n        start: column.start,\n        end: Math.min(column.start + newRows[0].children.length - 1, existingBody.children[0].children.length - 1)\n      };\n    }\n    slate__WEBPACK_IMPORTED_MODULE_6__.Editor.withoutNormalizing(editor, () => {\n      for (let rowIndex = row.start; rowIndex <= row.end; rowIndex++) {\n        const newRow = newRows[(rowIndex - row.start) % newRows.length];\n        for (let cellIndex = column.start; cellIndex <= column.end; cellIndex++) {\n          const relativeCellPath = [...getRelativeRowPath(hasHead, rowIndex), cellIndex];\n          const cell = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(table, relativeCellPath);\n          const newCell = newRow.children[(cellIndex - column.start) % newRow.children.length];\n          if (cell.type !== 'table-cell' || newCell.type !== 'table-cell') {\n            continue;\n          }\n          const cellPath = [...tablePath, ...relativeCellPath];\n          for (const childIdx of [...cell.children.keys()].reverse()) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: [...cellPath, childIdx]\n            });\n          }\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, newCell.children.map(cloneDescendant), {\n            at: [...cellPath, 0]\n          });\n        }\n      }\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setSelection(editor, {\n        anchor: slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, [...tablePath, ...getRelativeRowPath(hasHead, row.start), column.start]),\n        focus: slate__WEBPACK_IMPORTED_MODULE_6__.Editor.end(editor, [...tablePath, ...getRelativeRowPath(hasHead, row.end), column.end])\n      });\n    });\n  };\n  editor.deleteBackward = unit => {\n    if (editor.selection && slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection) && editor.selection.anchor.offset === 0) {\n      const tableCell = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.above(editor, {\n        match: nodeTypeMatcher('table-cell')\n      });\n      if (tableCell && tableCell[0].children[0].type === 'paragraph' && tableCell[0].children[0].children[0].type === undefined && slate__WEBPACK_IMPORTED_MODULE_6__.Path.equals(editor.selection.anchor.path, [...tableCell[1], 0, 0])) {\n        return;\n      }\n    }\n    deleteBackward(unit);\n  };\n  editor.getFragment = () => {\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (selectedTableArea && selectedTableArea.singleCell !== 'not-selected') {\n      var _table$children$;\n      const {\n        table\n      } = selectedTableArea;\n      const first = table.children[0].type === 'table-head' || table.children[0].type === 'table-body' ? table.children[0] : undefined;\n      if (!first) {\n        return getFragment();\n      }\n      const second = ((_table$children$ = table.children[1]) === null || _table$children$ === void 0 ? void 0 : _table$children$.type) === 'table-body' ? table.children[1] : undefined;\n      const body = second || first;\n      const hasHead = first.type === 'table-head';\n      const isSelectionInHead = selectedTableArea.row.start === 0 && !!second;\n      const columnLength = selectedTableArea.column.end - selectedTableArea.column.start + 1;\n      return [{\n        type: 'table',\n        children: [...(isSelectionInHead ? [{\n          type: 'table-head',\n          children: [{\n            type: 'table-row',\n            children: Array.from({\n              length: columnLength\n            }).map((_, columnIndex) => first.children[0].children[columnIndex + selectedTableArea.column.start])\n          }]\n        }] : []), {\n          type: 'table-body',\n          children: Array.from({\n            length: selectedTableArea.row.end - selectedTableArea.row.start + (isSelectionInHead ? 0 : 1)\n          }).map((_, rowIndex) => ({\n            type: 'table-row',\n            children: Array.from({\n              length: columnLength\n            }).map((_, columnIndex) => body.children[rowIndex + selectedTableArea.row.start - (hasHead && !isSelectionInHead ? 1 : 0)].children[columnIndex + selectedTableArea.column.start])\n          }))\n        }]\n      }];\n    }\n    return getFragment();\n  };\n  editor.deleteFragment = direction => {\n    if (!editor.selection || slate__WEBPACK_IMPORTED_MODULE_6__.Range.isCollapsed(editor.selection)) {\n      deleteFragment(direction);\n      return;\n    }\n    const selectedTableArea = getSelectedTableArea(editor);\n    if (!selectedTableArea || selectedTableArea.singleCell === 'not-selected') {\n      deleteFragment(direction);\n      return;\n    }\n    const headOrBody = selectedTableArea.table.children[0];\n    if (!slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(headOrBody) || !slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(headOrBody.children[0])) {\n      deleteFragment(direction);\n      return;\n    }\n    const maxRowIdx = selectedTableArea.table.children.reduce((sum, headOrBody) => sum + (headOrBody.type === 'table-head' || headOrBody.type === 'table-body' ? headOrBody.children.length : 0), 0) - 1;\n    const {\n      row,\n      column,\n      tablePath\n    } = selectedTableArea;\n    // note the fact that hasWholeColumnSelected uses row and hasWholeRowSelected uses column\n    // is not a mistake. if a whole column has been selected, then the starting row is 0 and the end is the last row\n    const hasWholeColumnSelected = row.start === 0 && row.end === maxRowIdx;\n    const hasWholeRowSelected = column.start === 0 && column.end === headOrBody.children[0].children.length - 1;\n    if (hasWholeColumnSelected && hasWholeRowSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n        at: tablePath\n      });\n      return;\n    }\n    const hasHead = headOrBody.type === 'table-head';\n    if (hasWholeRowSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Editor.withoutNormalizing(editor, () => {\n        for (let i = row.end; i >= row.start; i--) {\n          if (hasHead) {\n            if (i === 0) {\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n                at: [...tablePath, 0]\n              });\n              continue;\n            }\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: [...tablePath, 1, i - 1]\n            });\n            continue;\n          }\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n            at: [...tablePath, 0, i]\n          });\n        }\n      });\n      return;\n    }\n    if (hasWholeColumnSelected) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Editor.withoutNormalizing(editor, () => {\n        for (let i = column.end; i >= column.start; i--) {\n          for (let rowIdx = 0; rowIdx <= maxRowIdx; rowIdx++) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: [...tablePath, ...getRelativeRowPath(hasHead, rowIdx), i]\n            });\n          }\n        }\n        const selectionPath = [...tablePath, 0, 0, column.start];\n        const point = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, column.start === 0 ? selectionPath : slate__WEBPACK_IMPORTED_MODULE_6__.Path.previous(selectionPath));\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.select(editor, point);\n      });\n      return;\n    }\n    const selectionStart = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.start(editor, editor.selection).path;\n    slate__WEBPACK_IMPORTED_MODULE_6__.Editor.withoutNormalizing(editor, () => {\n      for (let rowIndex = row.start; rowIndex <= row.end; rowIndex++) {\n        for (let cellIndex = column.start; cellIndex <= column.end; cellIndex++) {\n          const relativeCellPath = [...getRelativeRowPath(hasHead, rowIndex), cellIndex];\n          const cell = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(selectedTableArea.table, relativeCellPath);\n          if (!slate__WEBPACK_IMPORTED_MODULE_6__.Element.isElement(cell)) {\n            continue;\n          }\n          const cellPath = [...tablePath, ...relativeCellPath];\n          slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, {\n            type: 'paragraph',\n            children: [{\n              text: ''\n            }]\n          }, {\n            at: [...cellPath, 0]\n          });\n          for (const childIdx of [...cell.children.keys()].reverse()) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.removeNodes(editor, {\n              at: [...cellPath, childIdx + 1]\n            });\n          }\n        }\n      }\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.select(editor, selectionStart);\n    });\n  };\n  editor.normalizeNode = entry => {\n    const [node, path] = entry;\n    if (node.type === 'table-head' && node.children.length > 1) {\n      moveChildren(editor, path, slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(path), (_, i) => i !== 0);\n      return;\n    }\n    let didUpdateThings = false;\n    for (const parent of ['table-body', 'table-head']) {\n      if (node.type === parent) {\n        for (const [rowIdx, row] of node.children.entries()) {\n          if (row.type === 'table-row') {\n            for (const [cellIdx, cell] of row.children.entries()) {\n              if (cell.type === 'table-cell') {\n                const at = [...path, rowIdx, cellIdx];\n                if (cell.header && parent === 'table-body') {\n                  slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unsetNodes(editor, 'header', {\n                    at\n                  });\n                  didUpdateThings = true;\n                }\n                if (!cell.header && parent === 'table-head') {\n                  slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n                    header: true\n                  }, {\n                    at\n                  });\n                  didUpdateThings = true;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (didUpdateThings) {\n      return;\n    }\n    if (node.type === 'table') {\n      const maxRowCount = node.children.reduce((max, node) => node.type === 'table-head' || node.type === 'table-body' ? node.children.reduce((max, node) => node.type === 'table-row' ? Math.max(max, node.children.length) : max, max) : max, 0);\n      let didInsert = false;\n      for (const [idx, child] of node.children.entries()) {\n        if (child.type === 'table-body' || child.type === 'table-head') {\n          for (const [rowIdx, row] of child.children.entries()) {\n            if (row.type === 'table-row' && row.children.length !== maxRowCount) {\n              slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, Array.from({\n                length: maxRowCount - row.children.length\n              }, () => cell(child.type === 'table-head')), {\n                at: [...path, idx, rowIdx, row.children.length]\n              });\n              didInsert = true;\n            }\n          }\n        }\n      }\n      if (didInsert) {\n        return;\n      }\n      if (node.children.length === 1 && node.children[0].type === 'table-head') {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.insertNodes(editor, {\n          type: 'table-body',\n          children: Array.from({\n            length: node.children[0].children.length\n          }, () => cell(false))\n        }, {\n          at: [...path, 1]\n        });\n        return;\n      }\n      if (node.children.length === 2 && node.children[1].type === 'table-head') {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n          at: [...path, 1],\n          to: [...path, 0]\n        });\n        return;\n      }\n      if (node.children.length > 2) {\n        moveChildren(editor, path, slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(path), (_, i) => i !== 0 && i !== 1);\n        return;\n      }\n    }\n    normalizeNode(entry);\n  };\n  return editor;\n}\n\nfunction createDocumentEditorForNormalization(documentFeatures, componentBlocks) {\n  return _createDocumentEditor((0,slate__WEBPACK_IMPORTED_MODULE_6__.createEditor)(), documentFeatures, componentBlocks);\n}\nfunction _createDocumentEditor(baseEditor, documentFeatures, componentBlocks) {\n  return withBlocksSchema(withParagraphs(withLink(documentFeatures, componentBlocks, withList(withTable(withComponentBlocks(componentBlocks, documentFeatures, withVoidElements(withLayouts(withCodeBlock(documentFeatures, componentBlocks, withDocumentFeaturesNormalization(documentFeatures, baseEditor))))))))));\n}\nfunction withBlocksSchema(editor) {\n  const {\n    normalizeNode\n  } = editor;\n  editor.normalizeNode = ([node, path]) => {\n    if (!slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(node) && node.type !== 'link') {\n      const nodeType = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isEditor(node) ? 'editor' : node.type;\n      if (typeof nodeType !== 'string' || editorSchema[nodeType] === undefined) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n          at: path\n        });\n        return;\n      }\n      const info = editorSchema[nodeType];\n      if (info.kind === 'blocks' && node.children.length !== 0 && node.children.every(child => !isBlock(child))) {\n        slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.wrapNodes(editor, {\n          type: info.blockToWrapInlinesIn,\n          children: []\n        }, {\n          at: path,\n          match: node => !isBlock(node)\n        });\n        return;\n      }\n      let didUpdate = false;\n      for (const [index, childNode] of [...node.children.entries()].reverse()) {\n        const childPath = [...path, index];\n        if (info.kind === 'inlines') {\n          if (!slate__WEBPACK_IMPORTED_MODULE_6__.Text.isText(childNode) && isBlock(childNode)) {\n            handleNodeInInvalidPosition(editor, [childNode, childPath], path);\n            didUpdate = true;\n            continue;\n          }\n        } else {\n          if (!isBlock(childNode)) {\n            slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.wrapNodes(editor, {\n              type: info.blockToWrapInlinesIn,\n              children: []\n            }, {\n              at: childPath\n            });\n            didUpdate = true;\n            continue;\n          }\n          if (!info.allowedChildren.has(childNode.type)) {\n            handleNodeInInvalidPosition(editor, [childNode, childPath], path);\n            didUpdate = true;\n            continue;\n          }\n        }\n      }\n      if (didUpdate) {\n        return;\n      }\n    }\n    normalizeNode([node, path]);\n  };\n  return editor;\n}\nfunction handleNodeInInvalidPosition(editor, [node, path], ancestorPath) {\n  const nodeType = node.type;\n  const childNodeInfo = editorSchema[nodeType];\n  // the parent of a block will never be an inline so this casting is okay\n  const ancestorNode = slate__WEBPACK_IMPORTED_MODULE_6__.Node.get(editor, ancestorPath);\n  const parentNodeType = slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isEditor(ancestorNode) ? 'editor' : ancestorNode.type;\n  const parentNodeInfo = editorSchema[parentNodeType];\n  if (!childNodeInfo || childNodeInfo.invalidPositionHandleMode === 'unwrap') {\n    if (parentNodeInfo.kind === 'blocks' && parentNodeInfo.blockToWrapInlinesIn) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.setNodes(editor, {\n        type: parentNodeInfo.blockToWrapInlinesIn,\n        ...Object.fromEntries(Object.keys(node).filter(key => key !== 'type' && key !== 'children').map(key => [key, null])) // the Slate types don't understand that null is allowed and it will unset properties with setNodes\n      }, {\n        at: path\n      });\n      return;\n    }\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n      at: path\n    });\n    return;\n  }\n  const info = editorSchema[ancestorNode.type || 'editor'];\n  if ((info === null || info === void 0 ? void 0 : info.kind) === 'blocks' && info.allowedChildren.has(nodeType)) {\n    if (ancestorPath.length === 0) {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n        at: path,\n        to: [path[0] + 1]\n      });\n    } else {\n      slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n        at: path,\n        to: slate__WEBPACK_IMPORTED_MODULE_6__.Path.next(ancestorPath)\n      });\n    }\n    return;\n  }\n  if (slate__WEBPACK_IMPORTED_MODULE_6__.Editor.isEditor(ancestorNode)) {\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.moveNodes(editor, {\n      at: path,\n      to: [path[0] + 1]\n    });\n    slate__WEBPACK_IMPORTED_MODULE_6__.Transforms.unwrapNodes(editor, {\n      at: [path[0] + 1]\n    });\n    return;\n  }\n  handleNodeInInvalidPosition(editor, [node, path], ancestorPath.slice(0, -1));\n}\nfunction withVoidElements(editor) {\n  const {\n    isVoid\n  } = editor;\n  editor.isVoid = node => {\n    return node.type === 'divider' || node.type === 'image' || isVoid(node);\n  };\n  return editor;\n}\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst defaultAltField = text({\n  label: 'Alt text',\n  description: 'This text will be used by screen readers and search engines.'\n});\nconst emptyTitleField = basicFormFieldWithSimpleReaderParse({\n  Input() {\n    return null;\n  },\n  defaultValue() {\n    return '';\n  },\n  parse(value) {\n    if (value === undefined) return '';\n    if (typeof value !== 'string') {\n      throw new FieldDataError('Must be string');\n    }\n    return value;\n  },\n  validate(value) {\n    return value;\n  },\n  serialize(value) {\n    return {\n      value\n    };\n  }\n});\nfunction normaliseDocumentFeatures(config) {\n  var _config$formatting, _formatting$alignment, _formatting$alignment2, _formatting$blockType, _formatting$inlineMar, _formatting$inlineMar2, _formatting$inlineMar3, _formatting$inlineMar4, _formatting$inlineMar5, _formatting$inlineMar6, _formatting$inlineMar7, _formatting$inlineMar8, _formatting$listTypes, _formatting$listTypes2, _imagesConfig$schema$, _imagesConfig$schema, _imagesConfig$schema$2, _imagesConfig$schema2;\n  const formatting = config.formatting === true ? {\n    // alignment: true, // not supported natively in markdown\n    blockTypes: true,\n    headingLevels: true,\n    inlineMarks: true,\n    listTypes: true,\n    softBreaks: true\n  } : (_config$formatting = config.formatting) !== null && _config$formatting !== void 0 ? _config$formatting : {};\n  const imagesConfig = config.images === true ? {} : config.images;\n  return {\n    formatting: {\n      alignment: formatting.alignment === true ? {\n        center: true,\n        end: true\n      } : {\n        center: !!((_formatting$alignment = formatting.alignment) !== null && _formatting$alignment !== void 0 && _formatting$alignment.center),\n        end: !!((_formatting$alignment2 = formatting.alignment) !== null && _formatting$alignment2 !== void 0 && _formatting$alignment2.end)\n      },\n      blockTypes: (formatting === null || formatting === void 0 ? void 0 : formatting.blockTypes) === true ? {\n        blockquote: true,\n        code: {\n          schema: object({})\n        }\n      } : {\n        blockquote: !!((_formatting$blockType = formatting.blockTypes) !== null && _formatting$blockType !== void 0 && _formatting$blockType.blockquote),\n        code: (_formatting$blockType2 => {\n          if (((_formatting$blockType2 = formatting.blockTypes) === null || _formatting$blockType2 === void 0 ? void 0 : _formatting$blockType2.code) === undefined) {\n            return false;\n          }\n          if (formatting.blockTypes.code === true || !formatting.blockTypes.code.schema) {\n            return {\n              schema: object({})\n            };\n          }\n          for (const key of ['type', 'children', 'language']) {\n            if (key in formatting.blockTypes.code.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for code blocks`);\n            }\n          }\n          return {\n            schema: object(formatting.blockTypes.code.schema)\n          };\n        })()\n      },\n      headings: (_obj$schema => {\n        const opt = formatting === null || formatting === void 0 ? void 0 : formatting.headingLevels;\n        const obj = typeof opt === 'object' && 'levels' in opt ? opt : {\n          levels: opt,\n          schema: undefined\n        };\n        if (obj.schema) {\n          for (const key of ['type', 'children', 'level', 'textAlign']) {\n            if (key in obj.schema) {\n              throw new Error(`\"${key}\" cannot be a key in the schema for headings`);\n            }\n          }\n        }\n        return {\n          levels: [...new Set(obj.levels === true ? [1, 2, 3, 4, 5, 6] : obj.levels)],\n          schema: object((_obj$schema = obj.schema) !== null && _obj$schema !== void 0 ? _obj$schema : {})\n        };\n      })(),\n      inlineMarks: formatting.inlineMarks === true ? {\n        bold: true,\n        code: true,\n        italic: true,\n        keyboard: false,\n        // not supported natively in markdown\n        strikethrough: true,\n        subscript: false,\n        // not supported natively in markdown\n        superscript: false,\n        // not supported natively in markdown\n        underline: false // not supported natively in markdown\n      } : {\n        bold: !!((_formatting$inlineMar = formatting.inlineMarks) !== null && _formatting$inlineMar !== void 0 && _formatting$inlineMar.bold),\n        code: !!((_formatting$inlineMar2 = formatting.inlineMarks) !== null && _formatting$inlineMar2 !== void 0 && _formatting$inlineMar2.code),\n        italic: !!((_formatting$inlineMar3 = formatting.inlineMarks) !== null && _formatting$inlineMar3 !== void 0 && _formatting$inlineMar3.italic),\n        strikethrough: !!((_formatting$inlineMar4 = formatting.inlineMarks) !== null && _formatting$inlineMar4 !== void 0 && _formatting$inlineMar4.strikethrough),\n        underline: !!((_formatting$inlineMar5 = formatting.inlineMarks) !== null && _formatting$inlineMar5 !== void 0 && _formatting$inlineMar5.underline),\n        keyboard: !!((_formatting$inlineMar6 = formatting.inlineMarks) !== null && _formatting$inlineMar6 !== void 0 && _formatting$inlineMar6.keyboard),\n        subscript: !!((_formatting$inlineMar7 = formatting.inlineMarks) !== null && _formatting$inlineMar7 !== void 0 && _formatting$inlineMar7.subscript),\n        superscript: !!((_formatting$inlineMar8 = formatting.inlineMarks) !== null && _formatting$inlineMar8 !== void 0 && _formatting$inlineMar8.superscript)\n      },\n      listTypes: formatting.listTypes === true ? {\n        ordered: true,\n        unordered: true\n      } : {\n        ordered: !!((_formatting$listTypes = formatting.listTypes) !== null && _formatting$listTypes !== void 0 && _formatting$listTypes.ordered),\n        unordered: !!((_formatting$listTypes2 = formatting.listTypes) !== null && _formatting$listTypes2 !== void 0 && _formatting$listTypes2.unordered)\n      },\n      softBreaks: !!formatting.softBreaks\n    },\n    links: !!config.links,\n    layouts: [...new Set((config.layouts || []).map(x => JSON.stringify(x)))].map(x => JSON.parse(x)),\n    dividers: !!config.dividers,\n    images: imagesConfig === undefined ? false : {\n      ...imagesConfig,\n      schema: {\n        alt: (_imagesConfig$schema$ = (_imagesConfig$schema = imagesConfig.schema) === null || _imagesConfig$schema === void 0 ? void 0 : _imagesConfig$schema.alt) !== null && _imagesConfig$schema$ !== void 0 ? _imagesConfig$schema$ : defaultAltField,\n        title: (_imagesConfig$schema$2 = (_imagesConfig$schema2 = imagesConfig.schema) === null || _imagesConfig$schema2 === void 0 ? void 0 : _imagesConfig$schema2.title) !== null && _imagesConfig$schema$2 !== void 0 ? _imagesConfig$schema$2 : emptyTitleField\n      }\n    },\n    tables: !!config.tables\n  };\n}\nfunction document$1({\n  label,\n  componentBlocks = {},\n  description,\n  ...documentFeaturesConfig\n}) {\n  const documentFeatures = normaliseDocumentFeatures(documentFeaturesConfig);\n  const parse = mode => (_value, data) => {\n    const markdoc = textDecoder.decode(data.content);\n    const document = fromMarkdoc(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parse(markdoc), componentBlocks);\n    const editor = createDocumentEditorForNormalization(documentFeatures, componentBlocks);\n    editor.children = document;\n    slate__WEBPACK_IMPORTED_MODULE_6__.Editor.normalize(editor, {\n      force: true\n    });\n    return deserializeFiles(editor.children, componentBlocks, data.other, data.external || new Map(), mode, documentFeatures, data.slug);\n  };\n  return {\n    kind: 'form',\n    formKind: 'content',\n    defaultValue() {\n      return [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }];\n    },\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(DocumentFieldInput, {\n        componentBlocks: componentBlocks,\n        description: description,\n        label: label,\n        documentFeatures: documentFeatures,\n        ...props\n      });\n    },\n    parse: parse('edit'),\n    contentExtension: '.mdoc',\n    validate(value) {\n      return value;\n    },\n    directories: [...collectDirectoriesUsedInSchema(object(Object.fromEntries(Object.entries(componentBlocks).map(([name, block]) => [name, object(block.schema)])))), ...(typeof documentFeatures.images === 'object' && typeof documentFeatures.images.directory === 'string' ? [fixPath(documentFeatures.images.directory)] : [])],\n    serialize(value, opts) {\n      const {\n        extraFiles,\n        node\n      } = toMarkdocDocument(value, {\n        componentBlocks,\n        documentFeatures,\n        slug: opts.slug\n      });\n      const other = new Map();\n      const external = new Map();\n      for (const file of extraFiles) {\n        if (file.parent === undefined) {\n          other.set(file.path, file.contents);\n          continue;\n        }\n        if (!external.has(file.parent)) {\n          external.set(file.parent, new Map());\n        }\n        external.get(file.parent).set(file.path, file.contents);\n      }\n      return {\n        content: textEncoder.encode(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__[\"default\"].format(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parse(_markdoc_markdoc__WEBPACK_IMPORTED_MODULE_7__[\"default\"].format(node)))),\n        other,\n        external,\n        value: undefined\n      };\n    },\n    reader: {\n      parse: parse('read')\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/isValidURL-3f764c70.node.react-server.esm.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/isValidURL-3f764c70.node.react-server.esm.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: () => (/* binding */ NAVIGATION_DIVIDER_KEY),\n/* harmony export */   a: () => (/* binding */ collection),\n/* harmony export */   c: () => (/* binding */ config),\n/* harmony export */   i: () => (/* binding */ isValidURL),\n/* harmony export */   s: () => (/* binding */ singleton)\n/* harmony export */ });\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n\n\n// Common\n// ----------------------------------------------------------------------------\n\n// Interface\n// ----------------------------------------------------------------------------\n\nconst NAVIGATION_DIVIDER_KEY = '---';\n\n// Storage\n// ----------------------------------------------------------------------------\n\n// ============================================================================\n// Functions\n// ============================================================================\n\nfunction config(config) {\n  return config;\n}\nfunction collection(collection) {\n  return collection;\n}\nfunction singleton(collection) {\n  return collection;\n}\n\nfunction isValidURL(url) {\n  return url === (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__.sanitizeUrl)(url);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGtleXN0YXRpYytjb3JlQDAuMi4xMl9uZXh0QDE0LjIuMl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGtleXN0YXRpYy9jb3JlL2Rpc3QvaXNWYWxpZFVSTC0zZjc2NGM3MC5ub2RlLnJlYWN0LXNlcnZlci5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNEOztBQUV0RDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLG9FQUFXO0FBQzVCOztBQUVzRyIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Aa2V5c3RhdGljK2NvcmVAMC4yLjEyX25leHRAMTQuMi4yX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9Aa2V5c3RhdGljL2NvcmUvZGlzdC9pc1ZhbGlkVVJMLTNmNzY0YzcwLm5vZGUucmVhY3Qtc2VydmVyLmVzbS5qcz8wMzQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNhbml0aXplVXJsIH0gZnJvbSAnQGJyYWludHJlZS9zYW5pdGl6ZS11cmwnO1xuXG4vLyBDb21tb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSW50ZXJmYWNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmNvbnN0IE5BVklHQVRJT05fRElWSURFUl9LRVkgPSAnLS0tJztcblxuLy8gU3RvcmFnZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGdW5jdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZnVuY3Rpb24gY29uZmlnKGNvbmZpZykge1xuICByZXR1cm4gY29uZmlnO1xufVxuZnVuY3Rpb24gY29sbGVjdGlvbihjb2xsZWN0aW9uKSB7XG4gIHJldHVybiBjb2xsZWN0aW9uO1xufVxuZnVuY3Rpb24gc2luZ2xldG9uKGNvbGxlY3Rpb24pIHtcbiAgcmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWRVUkwodXJsKSB7XG4gIHJldHVybiB1cmwgPT09IHNhbml0aXplVXJsKHVybCk7XG59XG5cbmV4cG9ydCB7IE5BVklHQVRJT05fRElWSURFUl9LRVkgYXMgTiwgY29sbGVjdGlvbiBhcyBhLCBjb25maWcgYXMgYywgaXNWYWxpZFVSTCBhcyBpLCBzaW5nbGV0b24gYXMgcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/isValidURL-3f764c70.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.react-server.esm.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.react-server.esm.js ***!
  \***********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockWrapper: () => (/* binding */ BlockWrapper),\n/* harmony export */   NotEditable: () => (/* binding */ NotEditable),\n/* harmony export */   ToolbarSeparator: () => (/* binding */ ToolbarSeparator),\n/* harmony export */   collection: () => (/* reexport safe */ _isValidURL_3f764c70_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   component: () => (/* reexport safe */ _api_59e5ebd9_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_1__.c),\n/* harmony export */   config: () => (/* reexport safe */ _isValidURL_3f764c70_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   fields: () => (/* binding */ index),\n/* harmony export */   singleton: () => (/* reexport safe */ _isValidURL_3f764c70_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.s)\n/* harmony export */ });\n/* harmony import */ var _isValidURL_3f764c70_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isValidURL-3f764c70.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/isValidURL-3f764c70.node.react-server.esm.js\");\n/* harmony import */ var _api_59e5ebd9_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-59e5ebd9.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/api-59e5ebd9.node.react-server.esm.js\");\n/* harmony import */ var _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-90608531.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _index_8bb79b3a_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index-8bb79b3a.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-8bb79b3a.node.react-server.esm.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var emery_assertions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! emery/assertions */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/assertions/dist/emery-assertions.esm.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(rsc)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction array(element, opts) {\n  var _opts$label;\n  return {\n    kind: 'array',\n    element,\n    label: (_opts$label = opts === null || opts === void 0 ? void 0 : opts.label) !== null && _opts$label !== void 0 ? _opts$label : 'Items',\n    description: opts === null || opts === void 0 ? void 0 : opts.description,\n    itemLabel: opts === null || opts === void 0 ? void 0 : opts.itemLabel,\n    asChildTag: opts === null || opts === void 0 ? void 0 : opts.asChildTag,\n    slugField: opts === null || opts === void 0 ? void 0 : opts.slugField,\n    validation: opts === null || opts === void 0 ? void 0 : opts.validation\n  };\n}\n\nfunction checkbox({\n  label,\n  defaultValue = false,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ae, {\n        ...props,\n        label: label,\n        description: description\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) return defaultValue;\n      if (typeof value !== 'boolean') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a boolean');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n}\n\nfunction child(options) {\n  return {\n    kind: 'child',\n    options: options.kind === 'block' ? {\n      ...options,\n      dividers: options.dividers,\n      formatting: options.formatting === 'inherit' ? {\n        blockTypes: 'inherit',\n        headingLevels: 'inherit',\n        inlineMarks: 'inherit',\n        listTypes: 'inherit',\n        alignment: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links,\n      images: options.images,\n      tables: options.tables,\n      componentBlocks: options.componentBlocks\n    } : {\n      kind: 'inline',\n      placeholder: options.placeholder,\n      formatting: options.formatting === 'inherit' ? {\n        inlineMarks: 'inherit',\n        softBreaks: 'inherit'\n      } : options.formatting,\n      links: options.links\n    }\n  };\n}\n\nfunction conditional(discriminant, values) {\n  return {\n    kind: 'conditional',\n    discriminant,\n    values: values\n  };\n}\n\nfunction validateDate(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\n    return `${label} is not a valid date`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const date = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (date < min) {\n        return `${label} must be after ${min.toLocaleDateString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (date > max) {\n        return `${label} must be no later than ${max.toLocaleDateString()}`;\n      }\n    }\n  }\n}\n\nfunction date({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.af, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const day = String(today.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    },\n    validate(value) {\n      const message = validateDate(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(message);\n      }\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction validateDatetime(validation, value, label) {\n  if (value !== null && !/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/.test(value)) {\n    return `${label} is not a valid datetime`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n  if ((validation !== null && validation !== void 0 && validation.min || validation !== null && validation !== void 0 && validation.max) && value !== null) {\n    const datetime = new Date(value);\n    if ((validation === null || validation === void 0 ? void 0 : validation.min) !== undefined) {\n      const min = new Date(validation.min);\n      if (datetime < min) {\n        return `${label} must be after ${min.toISOString()}`;\n      }\n    }\n    if ((validation === null || validation === void 0 ? void 0 : validation.max) !== undefined) {\n      const max = new Date(validation.max);\n      if (datetime > max) {\n        return `${label} must be no later than ${max.toISOString()}`;\n      }\n    }\n  }\n}\n\nfunction datetime({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ah, {\n        validation: validation,\n        label: label,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      if (defaultValue === undefined) {\n        return null;\n      }\n      if (typeof defaultValue === 'string') {\n        return defaultValue;\n      }\n      if (defaultValue.kind === 'now') {\n        const now = new Date();\n        return now.toISOString();\n      }\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    },\n    validate(value) {\n      const message = validateDatetime(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(message);\n      }\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    }\n  });\n}\n\nfunction emptyDocument() {\n  return {\n    kind: 'form',\n    formKind: 'content',\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    contentExtension: '.mdoc',\n    serialize() {\n      return {\n        value: undefined,\n        content: new Uint8Array(),\n        external: new Map(),\n        other: new Map()\n      };\n    },\n    validate(value) {\n      return value;\n    },\n    reader: {\n      parse() {\n        return null;\n      }\n    }\n  };\n}\n\nfunction empty() {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input() {\n      return null;\n    },\n    defaultValue() {\n      return null;\n    },\n    parse() {\n      return null;\n    },\n    serialize() {\n      return {\n        value: undefined\n      };\n    },\n    validate(value) {\n      return value;\n    }\n  });\n}\n\nfunction image({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ai, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ak)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction file({\n  label,\n  directory,\n  validation,\n  description,\n  publicPath\n}) {\n  return {\n    kind: 'form',\n    formKind: 'asset',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.al, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    filename(value, args) {\n      if (typeof value === 'string') {\n        return value.slice((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug).length);\n      }\n      return undefined;\n    },\n    parse(value, args) {\n      var _value$match$, _value$match;\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      if (args.asset === undefined) {\n        return null;\n      }\n      return {\n        data: args.asset,\n        filename: value.slice((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug).length),\n        extension: (_value$match$ = (_value$match = value.match(/\\.([^.]+$)/)) === null || _value$match === void 0 ? void 0 : _value$match[1]) !== null && _value$match$ !== void 0 ? _value$match$ : ''\n      };\n    },\n    validate(value) {\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value, args) {\n      if (value === null) {\n        return {\n          value: undefined,\n          asset: undefined\n        };\n      }\n      const filename = args.suggestedFilenamePrefix ? args.suggestedFilenamePrefix + '.' + value.extension : value.filename;\n      return {\n        value: `${(0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aj)(publicPath, args.slug)}${filename}`,\n        asset: {\n          filename,\n          content: value.data\n        }\n      };\n    },\n    directory: directory ? (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ak)(directory) : undefined,\n    reader: {\n      parse(value) {\n        if (typeof value !== 'string' && value !== undefined) {\n          throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n        }\n        const val = value === undefined ? null : value;\n        (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(val, validation, label);\n        return val;\n      }\n    }\n  };\n}\n\nfunction multiselect({\n  label,\n  options,\n  defaultValue = [],\n  description\n}) {\n  const valuesToOption = new Map(options.map(x => [x.value, x]));\n  const field = (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.am, {\n        label: label,\n        description: description,\n        options: options,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return [];\n      }\n      if (!Array.isArray(value)) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be an array of options');\n      }\n      if (!value.every(x => typeof x === 'string' && valuesToOption.has(x))) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(`Must be an array with one of ${options.map(x => x.value).join(', ')}`);\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction pathReference({\n  label,\n  pattern,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.an, {\n        label: label,\n        pattern: pattern,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction relationship({\n  label,\n  collection,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ao, {\n        label: label,\n        collection: collection,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      return value;\n    },\n    validate(value) {\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction select({\n  label,\n  options,\n  defaultValue,\n  description\n}) {\n  const optionValuesSet = new Set(options.map(x => x.value));\n  if (!optionValuesSet.has(defaultValue)) {\n    throw new Error(`A defaultValue of ${defaultValue} was provided to a select field but it does not match the value of one of the options provided`);\n  }\n  const field = (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ap, {\n        label: label,\n        options: options,\n        description: description,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return defaultValue;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      if (!optionValuesSet.has(value)) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a valid option');\n      }\n      return value;\n    },\n    validate(value) {\n      return value;\n    },\n    serialize(value) {\n      return {\n        value\n      };\n    }\n  });\n  return {\n    ...field,\n    options\n  };\n}\n\nfunction parseSlugFieldAsNormalField(value) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug: ''\n    };\n  }\n  if (typeof value !== 'object') {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be an object');\n  }\n  if (Object.keys(value).length !== 2) {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Unexpected keys');\n  }\n  if (!('name' in value) || !('slug' in value)) {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Missing name or slug');\n  }\n  if (typeof value.name !== 'string') {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('name must be a string');\n  }\n  if (typeof value.slug !== 'string') {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('slug must be a string');\n  }\n  return {\n    name: value.name,\n    slug: value.slug\n  };\n}\nfunction parseAsSlugField(value, slug) {\n  if (value === undefined) {\n    return {\n      name: '',\n      slug\n    };\n  }\n  if (typeof value !== 'string') {\n    throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n  }\n  return {\n    name: value,\n    slug\n  };\n}\nfunction slug(args) {\n  var _args$slug, _args$name$defaultVal, _args$name$defaultVal2;\n  const naiveGenerateSlug = ((_args$slug = args.slug) === null || _args$slug === void 0 ? void 0 : _args$slug.generate) || (_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5___default());\n  const defaultValue = {\n    name: (_args$name$defaultVal = args.name.defaultValue) !== null && _args$name$defaultVal !== void 0 ? _args$name$defaultVal : '',\n    slug: naiveGenerateSlug((_args$name$defaultVal2 = args.name.defaultValue) !== null && _args$name$defaultVal2 !== void 0 ? _args$name$defaultVal2 : '')\n  };\n  function validate(value, {\n    slugField\n  } = {\n    slugField: undefined\n  }) {\n    var _args$name$validation, _args$name$validation2, _args$name$validation3, _args$name$validation4, _args$slug$validation, _args$slug2, _args$slug$validation2, _args$slug3, _args$slug$label, _args$slug4;\n    const nameMessage = (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ar)(value.name, (_args$name$validation = (_args$name$validation2 = args.name.validation) === null || _args$name$validation2 === void 0 || (_args$name$validation2 = _args$name$validation2.length) === null || _args$name$validation2 === void 0 ? void 0 : _args$name$validation2.min) !== null && _args$name$validation !== void 0 ? _args$name$validation : 0, (_args$name$validation3 = (_args$name$validation4 = args.name.validation) === null || _args$name$validation4 === void 0 || (_args$name$validation4 = _args$name$validation4.length) === null || _args$name$validation4 === void 0 ? void 0 : _args$name$validation4.max) !== null && _args$name$validation3 !== void 0 ? _args$name$validation3 : Infinity, args.name.label, undefined);\n    if (nameMessage !== undefined) {\n      throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(nameMessage);\n    }\n    const slugMessage = (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ar)(value.slug, (_args$slug$validation = (_args$slug2 = args.slug) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.validation) === null || _args$slug2 === void 0 || (_args$slug2 = _args$slug2.length) === null || _args$slug2 === void 0 ? void 0 : _args$slug2.min) !== null && _args$slug$validation !== void 0 ? _args$slug$validation : 1, (_args$slug$validation2 = (_args$slug3 = args.slug) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.validation) === null || _args$slug3 === void 0 || (_args$slug3 = _args$slug3.length) === null || _args$slug3 === void 0 ? void 0 : _args$slug3.max) !== null && _args$slug$validation2 !== void 0 ? _args$slug$validation2 : Infinity, (_args$slug$label = (_args$slug4 = args.slug) === null || _args$slug4 === void 0 ? void 0 : _args$slug4.label) !== null && _args$slug$label !== void 0 ? _args$slug$label : 'Slug', slugField ? slugField : {\n      slugs: emptySet,\n      glob: '*'\n    });\n    if (slugMessage !== undefined) {\n      throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(slugMessage);\n    }\n    return value;\n  }\n  const emptySet = new Set();\n  return {\n    kind: 'form',\n    formKind: 'slug',\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aq, {\n        args: args,\n        naiveGenerateSlug: naiveGenerateSlug,\n        defaultValue: defaultValue,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue;\n    },\n    parse(value, args) {\n      if ((args === null || args === void 0 ? void 0 : args.slug) !== undefined) {\n        return parseAsSlugField(value, args.slug);\n      }\n      return parseSlugFieldAsNormalField(value);\n    },\n    validate,\n    serialize(value) {\n      return {\n        value\n      };\n    },\n    serializeWithSlug(value) {\n      return {\n        value: value.name,\n        slug: value.slug\n      };\n    },\n    reader: {\n      parse(value) {\n        const parsed = parseSlugFieldAsNormalField(value);\n        return validate(parsed);\n      },\n      parseWithSlug(value, args) {\n        return validate(parseAsSlugField(value, args.slug), {\n          slugField: {\n            glob: args.glob,\n            slugs: emptySet\n          }\n        }).name;\n      }\n    }\n  };\n}\n\nfunction validateUrl(validation, value, label) {\n  if (value !== null && (typeof value !== 'string' || !(0,_isValidURL_3f764c70_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_0__.i)(value))) {\n    return `${label} is not a valid URL`;\n  }\n  if (validation !== null && validation !== void 0 && validation.isRequired && value === null) {\n    return `${label} is required`;\n  }\n}\n\nfunction url({\n  label,\n  defaultValue,\n  validation,\n  description\n}) {\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ad)({\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.as, {\n        label: label,\n        description: description,\n        validation: validation,\n        ...props\n      });\n    },\n    defaultValue() {\n      return defaultValue || null;\n    },\n    parse(value) {\n      if (value === undefined) {\n        return null;\n      }\n      if (typeof value !== 'string') {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac('Must be a string');\n      }\n      return value === '' ? null : value;\n    },\n    validate(value) {\n      const message = validateUrl(validation, value, label);\n      if (message !== undefined) {\n        throw new _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ac(message);\n      }\n      (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ag)(value, validation, label);\n      return value;\n    },\n    serialize(value) {\n      return {\n        value: value === null ? undefined : value\n      };\n    }\n  });\n}\n\nfunction blocks(blocks, opts) {\n  const entries = Object.entries(blocks);\n  if (!entries.length) {\n    throw new Error('fields.blocks must have at least one entry');\n  }\n  const select$1 = select({\n    label: 'Kind',\n    defaultValue: entries[0][0],\n    options: Object.entries(blocks).map(([key, {\n      label\n    }]) => ({\n      label,\n      value: key\n    }))\n  });\n  const element = conditional(select$1, Object.fromEntries(entries.map(([key, {\n    schema\n  }]) => [key, schema])));\n  return {\n    ...array(element, {\n      label: opts.label,\n      description: opts.description,\n      validation: opts.validation,\n      itemLabel(props) {\n        const kind = props.discriminant;\n        const block = blocks[kind];\n        if (!block.itemLabel) return block.label;\n        return block.itemLabel(props.value);\n      }\n    }),\n    Input: _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.at\n  };\n}\n\nfunction cloudImage({\n  label,\n  description,\n  validation\n}) {\n  return {\n    ...(0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.N)({\n      src: (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.au)({\n        label: 'URL',\n        validation: {\n          length: {\n            min: validation !== null && validation !== void 0 && validation.isRequired ? 1 : 0\n          }\n        }\n      }),\n      alt: (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.au)({\n        label: 'Alt text'\n      }),\n      height: (0,_index_8bb79b3a_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_4__.i)({\n        label: 'Height'\n      }),\n      width: (0,_index_8bb79b3a_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_4__.i)({\n        label: 'Width'\n      })\n    }, {\n      label,\n      description\n    }),\n    Input(props) {\n      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.av, {\n        ...props,\n        isRequired: validation === null || validation === void 0 ? void 0 : validation.isRequired\n      });\n    }\n  };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  array: array,\n  checkbox: checkbox,\n  child: child,\n  conditional: conditional,\n  date: date,\n  datetime: datetime,\n  document: _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aw,\n  emptyDocument: emptyDocument,\n  empty: empty,\n  image: image,\n  file: file,\n  integer: _index_8bb79b3a_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_4__.i,\n  multiselect: multiselect,\n  object: _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.N,\n  pathReference: pathReference,\n  relationship: relationship,\n  select: select,\n  slug: slug,\n  text: _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.au,\n  url: url,\n  blocks: blocks,\n  cloudImage: cloudImage\n});\n\nfunction BlockWrapper() {}\nfunction NotEditable() {}\nfunction ToolbarSeparator() {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/keystatic-core.node.react-server.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/read-local-018858c4.node.react-server.esm.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/read-local-018858c4.node.react-server.esm.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   b: () => (/* binding */ blobSha),\n/* harmony export */   g: () => (/* binding */ getAllowedDirectories),\n/* harmony export */   r: () => (/* binding */ readToDirEntries)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-90608531.node.react-server.esm.js */ \"(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/index-90608531.node.react-server.esm.js\");\n/* harmony import */ var emery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! emery */ \"(rsc)/./node_modules/.pnpm/emery@1.4.3/node_modules/emery/dist/emery.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sindresorhus/slugify */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\");\n/* harmony import */ var _sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_sindresorhus_slugify__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @braintree/sanitize-url */ \"(rsc)/./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ignore */ \"(rsc)/./node_modules/.pnpm/ignore@5.3.1/node_modules/ignore/index.js\");\n/* harmony import */ var ignore__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ignore__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n\nfunction blobSha(contents) {\n  const blobPrefix = textEncoder.encode('blob ' + contents.length + '\\0');\n  const array = new Uint8Array(blobPrefix.byteLength + contents.byteLength);\n  array.set(blobPrefix, 0);\n  array.set(contents, blobPrefix.byteLength);\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ay)(array);\n}\nfunction getNodeAtPath(tree, path) {\n  if (path === '') return tree;\n  let node = tree;\n  for (const part of path.split('/')) {\n    if (!node.has(part)) {\n      node.set(part, new Map());\n    }\n    const innerNode = node.get(part);\n    (0,emery__WEBPACK_IMPORTED_MODULE_3__.assert)(innerNode instanceof Map, 'expected tree');\n    node = innerNode;\n  }\n  return node;\n}\nfunction getFilename(path) {\n  return path.replace(/.*\\//, '');\n}\nfunction getDirname(path) {\n  if (!path.includes('/')) return '';\n  return path.replace(/\\/[^/]+$/, '');\n}\nfunction toTreeChanges(changes) {\n  const changesRoot = new Map();\n  for (const deletion of changes.deletions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(deletion));\n    parentTree.set(getFilename(deletion), 'delete');\n  }\n  for (const addition of changes.additions) {\n    const parentTree = getNodeAtPath(changesRoot, getDirname(addition.path));\n    parentTree.set(getFilename(addition.path), addition.contents);\n  }\n  return changesRoot;\n}\nconst textEncoder = new TextEncoder();\nconst SPACE_CHAR_CODE = 32;\nconst space = new Uint8Array([SPACE_CHAR_CODE]);\nconst nullchar = new Uint8Array([0]);\nconst tree = textEncoder.encode('tree ');\n\n// based on https://github.com/isomorphic-git/isomorphic-git/blob/c09dfa20ffe0ab9e6602e0fa172d72ba8994e443/src/models/GitTree.js#L108-L122\nfunction treeSha(children) {\n  const entries = [...children].map(([name, node]) => ({\n    name,\n    sha: node.entry.sha,\n    mode: node.entry.mode\n  }));\n  entries.sort((a, b) => {\n    const aName = a.mode === '040000' ? a.name + '/' : a.name;\n    const bName = b.mode === '040000' ? b.name + '/' : b.name;\n    return aName === bName ? 0 : aName < bName ? -1 : 1;\n  });\n  const treeObject = entries.flatMap(entry => {\n    const mode = textEncoder.encode(entry.mode.replace(/^0/, ''));\n    const name = textEncoder.encode(entry.name);\n    const sha = hexToBytes(entry.sha);\n    return [mode, space, name, nullchar, sha];\n  });\n  return (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.ay)(concatBytes([tree, textEncoder.encode(treeObject.reduce((sum, val) => sum + val.byteLength, 0).toString()), nullchar, ...treeObject]));\n}\nfunction concatBytes(byteArrays) {\n  const totalLength = byteArrays.reduce((sum, arr) => sum + arr.byteLength, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of byteArrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n}\nfunction hexToBytes(str) {\n  const bytes = new Uint8Array(str.length / 2);\n  for (var i = 0; i < bytes.byteLength; i += 1) {\n    const start = i * 2;\n    bytes[i] = parseInt(str.slice(start, start + 2), 16);\n  }\n  return bytes;\n}\nasync function createTreeNodeEntry(path, children) {\n  const sha = await treeSha(children);\n  return {\n    path,\n    mode: '040000',\n    type: 'tree',\n    sha\n  };\n}\nasync function createBlobNodeEntry(path, contents) {\n  const sha = 'sha' in contents ? contents.sha : await blobSha(contents);\n  return {\n    path,\n    mode: '100644',\n    type: 'blob',\n    sha,\n    size: contents.byteLength\n  };\n}\nasync function updateTreeWithChanges(tree, changes) {\n  var _await$updateTree;\n  const newTree = (_await$updateTree = await updateTree(tree, toTreeChanges(changes), [])) !== null && _await$updateTree !== void 0 ? _await$updateTree : new Map();\n  return {\n    entries: treeToEntries(newTree),\n    sha: await treeSha(newTree !== null && newTree !== void 0 ? newTree : new Map())\n  };\n}\nfunction treeToEntries(tree) {\n  return [...tree.values()].flatMap(x => x.children ? [x.entry, ...treeToEntries(x.children)] : [x.entry]);\n}\nasync function updateTree(tree, changedTree, path) {\n  const newTree = new Map(tree);\n  for (const [key, value] of changedTree) {\n    if (value === 'delete') {\n      newTree.delete(key);\n    }\n    if (value instanceof Map) {\n      var _newTree$get$children, _newTree$get;\n      const existingChildren = (_newTree$get$children = (_newTree$get = newTree.get(key)) === null || _newTree$get === void 0 ? void 0 : _newTree$get.children) !== null && _newTree$get$children !== void 0 ? _newTree$get$children : new Map();\n      const children = await updateTree(existingChildren, value, path.concat(key));\n      if (children === undefined) {\n        newTree.delete(key);\n        continue;\n      }\n      const entry = await createTreeNodeEntry(path.concat(key).join('/'), children);\n      newTree.set(key, {\n        entry,\n        children\n      });\n    }\n    if (typeof value === 'object' && 'sha' in value) {\n      const entry = await createBlobNodeEntry(path.concat(key).join('/'), value);\n      newTree.set(key, {\n        entry\n      });\n    }\n  }\n  if (newTree.size === 0) {\n    return undefined;\n  }\n  return newTree;\n}\n\nasync function readDirEntries(dir) {\n  let entries;\n  try {\n    entries = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readdir(dir, {\n      withFileTypes: true\n    });\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      return [];\n    }\n    throw err;\n  }\n  return entries;\n}\nasync function collectEntriesInDir(baseDir, ancestors) {\n  const currentRelativeDir = ancestors.map(p => p.segment).join('/');\n  const entries = await readDirEntries(path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentRelativeDir));\n  const gitignore = entries.find(entry => entry.isFile() && entry.name === '.gitignore');\n  const gitignoreFilterForDescendents = gitignore ? ignore__WEBPACK_IMPORTED_MODULE_7___default()().add(await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, currentRelativeDir, gitignore.name), 'utf8')).createFilter() : () => true;\n  const pathSegments = ancestors.map(x => x.segment);\n  return (await Promise.all(entries.filter(entry => {\n    if (!entry.isDirectory() && !entry.isFile() || entry.name === '.git' || entry.name === 'node_modules' || entry.name === '.next') {\n      return false;\n    }\n    const innerPath = `${pathSegments.concat(entry.name).join('/')}${entry.isDirectory() ? '/' : ''}`;\n    if (!gitignoreFilterForDescendents(innerPath)) {\n      return false;\n    }\n    let currentPath = entry.name;\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n      const ancestor = ancestors[i];\n      currentPath = `${ancestor.segment}/${currentPath}`;\n      if (!ancestor.gitignoreFilterForDescendents(currentPath)) {\n        return false;\n      }\n    }\n    return true;\n  }).map(async entry => {\n    if (entry.isDirectory()) {\n      return collectEntriesInDir(baseDir, [...ancestors, {\n        gitignoreFilterForDescendents,\n        segment: entry.name\n      }]);\n    } else {\n      const innerPath = pathSegments.concat(entry.name).join('/');\n      const contents = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(path__WEBPACK_IMPORTED_MODULE_1___default().join(baseDir, innerPath));\n      return {\n        path: innerPath,\n        contents: {\n          byteLength: contents.byteLength,\n          sha: await blobSha(contents)\n        }\n      };\n    }\n  }))).flat();\n}\nasync function readToDirEntries(baseDir) {\n  const additions = await collectEntriesInDir(baseDir, []);\n  const {\n    entries\n  } = await updateTreeWithChanges(new Map(), {\n    additions: additions,\n    deletions: []\n  });\n  return entries;\n}\nfunction getAllowedDirectories(config) {\n  const allowedDirectories = [];\n  for (const [collection, collectionConfig] of Object.entries((_config$collections = config.collections) !== null && _config$collections !== void 0 ? _config$collections : {})) {\n    var _config$collections;\n    allowedDirectories.push(...(0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.a1)((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.N)(collectionConfig.schema), (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(config, collection), undefined, {\n      data: 'yaml',\n      contentField: undefined,\n      dataLocation: 'index'\n    }));\n  }\n  for (const [singleton, singletonConfig] of Object.entries((_config$singletons = config.singletons) !== null && _config$singletons !== void 0 ? _config$singletons : {})) {\n    var _config$singletons;\n    allowedDirectories.push(...(0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.a1)((0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.N)(singletonConfig.schema), (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.c)(config, singleton), undefined, (0,_index_90608531_node_react_server_esm_js__WEBPACK_IMPORTED_MODULE_2__.aa)(config, singleton)));\n  }\n  return [...new Set(allowedDirectories)];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@keystatic+core@0.2.12_next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/@keystatic/core/dist/read-local-018858c4.node.react-server.esm.js\n");

/***/ })

};
;