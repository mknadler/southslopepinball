"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-aria+textfield@3.14.3_react@18.2.0";
exports.ids = ["vendor-chunks/@react-aria+textfield@3.14.3_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-aria+textfield@3.14.3_react@18.2.0/node_modules/@react-aria/textfield/dist/import.mjs":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-aria+textfield@3.14.3_react@18.2.0/node_modules/@react-aria/textfield/dist/import.mjs ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFormattedTextField: () => (/* binding */ $d841c8010a73d545$export$4f384c9210e583c3),\n/* harmony export */   useTextField: () => (/* binding */ $2d73ec29415bd339$export$712718f7aec83d5)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/./node_modules/.pnpm/@react-aria+utils@3.23.2_react@18.2.0/node_modules/@react-aria/utils/dist/import.mjs\");\n/* harmony import */ var _react_stately_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-stately/utils */ \"(ssr)/./node_modules/.pnpm/@react-stately+utils@3.9.1_react@18.2.0/node_modules/@react-stately/utils/dist/import.mjs\");\n/* harmony import */ var _react_aria_label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/label */ \"(ssr)/./node_modules/.pnpm/@react-aria+label@3.7.6_react@18.2.0/node_modules/@react-aria/label/dist/import.mjs\");\n/* harmony import */ var _react_aria_focus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/focus */ \"(ssr)/./node_modules/.pnpm/@react-aria+focus@3.16.2_react@18.2.0/node_modules/@react-aria/focus/dist/import.mjs\");\n/* harmony import */ var _react_aria_form__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-aria/form */ \"(ssr)/./node_modules/.pnpm/@react-aria+form@3.0.3_react@18.2.0/node_modules/@react-aria/form/dist/import.mjs\");\n/* harmony import */ var _react_stately_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-stately/form */ \"(ssr)/./node_modules/.pnpm/@react-stately+form@3.0.1_react@18.2.0/node_modules/@react-stately/form/dist/import.mjs\");\n\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\n\n\nfunction $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {\n    let { inputElementType: inputElementType = \"input\", isDisabled: isDisabled = false, isRequired: isRequired = false, isReadOnly: isReadOnly = false, type: type = \"text\", validationBehavior: validationBehavior = \"aria\" } = props;\n    let [value, setValue] = (0, _react_stately_utils__WEBPACK_IMPORTED_MODULE_1__.useControlledState)(props.value, props.defaultValue || \"\", props.onChange);\n    let { focusableProps: focusableProps } = (0, _react_aria_focus__WEBPACK_IMPORTED_MODULE_2__.useFocusable)(props, ref);\n    let validationState = (0, _react_stately_form__WEBPACK_IMPORTED_MODULE_3__.useFormValidationState)({\n        ...props,\n        value: value\n    });\n    let { isInvalid: isInvalid, validationErrors: validationErrors, validationDetails: validationDetails } = validationState.displayValidation;\n    let { labelProps: labelProps, fieldProps: fieldProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps } = (0, _react_aria_label__WEBPACK_IMPORTED_MODULE_4__.useField)({\n        ...props,\n        isInvalid: isInvalid,\n        errorMessage: props.errorMessage || validationErrors\n    });\n    let domProps = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.filterDOMProps)(props, {\n        labelable: true\n    });\n    const inputOnlyProps = {\n        type: type,\n        pattern: props.pattern\n    };\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useFormReset)(ref, value, setValue);\n    (0, _react_aria_form__WEBPACK_IMPORTED_MODULE_6__.useFormValidation)(props, validationState, ref);\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // This works around a React/Chrome bug that prevents textarea elements from validating when controlled.\n        // We prevent React from updating defaultValue (i.e. children) of textarea when `value` changes,\n        // which causes Chrome to skip validation. Only updating `value` is ok in our case since our\n        // textareas are always controlled. React is planning on removing this synchronization in a\n        // future major version.\n        // https://github.com/facebook/react/issues/19474\n        // https://github.com/facebook/react/issues/11896\n        if (ref.current instanceof (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.getOwnerWindow)(ref.current).HTMLTextAreaElement) {\n            let input = ref.current;\n            Object.defineProperty(input, \"defaultValue\", {\n                get: ()=>input.value,\n                set: ()=>{},\n                configurable: true\n            });\n        }\n    }, [\n        ref\n    ]);\n    return {\n        labelProps: labelProps,\n        inputProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)(domProps, inputElementType === \"input\" && inputOnlyProps, {\n            disabled: isDisabled,\n            readOnly: isReadOnly,\n            required: isRequired && validationBehavior === \"native\",\n            \"aria-required\": isRequired && validationBehavior === \"aria\" || undefined,\n            \"aria-invalid\": isInvalid || undefined,\n            \"aria-errormessage\": props[\"aria-errormessage\"],\n            \"aria-activedescendant\": props[\"aria-activedescendant\"],\n            \"aria-autocomplete\": props[\"aria-autocomplete\"],\n            \"aria-haspopup\": props[\"aria-haspopup\"],\n            value: value,\n            onChange: (e)=>setValue(e.target.value),\n            autoComplete: props.autoComplete,\n            autoCapitalize: props.autoCapitalize,\n            maxLength: props.maxLength,\n            minLength: props.minLength,\n            name: props.name,\n            placeholder: props.placeholder,\n            inputMode: props.inputMode,\n            // Clipboard events\n            onCopy: props.onCopy,\n            onCut: props.onCut,\n            onPaste: props.onPaste,\n            // Composition events\n            onCompositionEnd: props.onCompositionEnd,\n            onCompositionStart: props.onCompositionStart,\n            onCompositionUpdate: props.onCompositionUpdate,\n            // Selection events\n            onSelect: props.onSelect,\n            // Input events\n            onBeforeInput: props.onBeforeInput,\n            onInput: props.onInput,\n            ...focusableProps,\n            ...fieldProps\n        }),\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps,\n        isInvalid: isInvalid,\n        validationErrors: validationErrors,\n        validationDetails: validationDetails\n    };\n}\n\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $d841c8010a73d545$var$supportsNativeBeforeInputEvent() {\n    return typeof window !== \"undefined\" && window.InputEvent && // @ts-ignore\n    typeof InputEvent.prototype.getTargetRanges === \"function\";\n}\nfunction $d841c8010a73d545$export$4f384c9210e583c3(props, state, inputRef) {\n    // All browsers implement the 'beforeinput' event natively except Firefox\n    // (currently behind a flag as of Firefox 84). React's polyfill does not\n    // run in all cases that the native event fires, e.g. when deleting text.\n    // Use the native event if available so that we can prevent invalid deletions.\n    // We do not attempt to polyfill this in Firefox since it would be very complicated,\n    // the benefit of doing so is fairly minor, and it's going to be natively supported soon.\n    let onBeforeInputFallback = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useEffectEvent)((e)=>{\n        let input = inputRef.current;\n        // Compute the next value of the input if the event is allowed to proceed.\n        // See https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes for a full list of input types.\n        let nextValue;\n        switch(e.inputType){\n            case \"historyUndo\":\n            case \"historyRedo\":\n                // Explicitly allow undo/redo. e.data is null in this case, but there's no need to validate,\n                // because presumably the input would have already been validated previously.\n                return;\n            case \"deleteContent\":\n            case \"deleteByCut\":\n            case \"deleteByDrag\":\n                nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                break;\n            case \"deleteContentForward\":\n                // This is potentially incorrect, since the browser may actually delete more than a single UTF-16\n                // character. In reality, a full Unicode grapheme cluster consisting of multiple UTF-16 characters\n                // or code points may be deleted. However, in our currently supported locales, there are no such cases.\n                // If we support additional locales in the future, this may need to change.\n                nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                break;\n            case \"deleteContentBackward\":\n                nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                break;\n            case \"deleteSoftLineBackward\":\n            case \"deleteHardLineBackward\":\n                nextValue = input.value.slice(input.selectionStart);\n                break;\n            default:\n                if (e.data != null) nextValue = input.value.slice(0, input.selectionStart) + e.data + input.value.slice(input.selectionEnd);\n                break;\n        }\n        // If we did not compute a value, or the new value is invalid, prevent the event\n        // so that the browser does not update the input text, move the selection, or add to\n        // the undo/redo stack.\n        if (nextValue == null || !state.validate(nextValue)) e.preventDefault();\n    });\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!$d841c8010a73d545$var$supportsNativeBeforeInputEvent()) return;\n        let input = inputRef.current;\n        input.addEventListener(\"beforeinput\", onBeforeInputFallback, false);\n        return ()=>{\n            input.removeEventListener(\"beforeinput\", onBeforeInputFallback, false);\n        };\n    }, [\n        inputRef,\n        onBeforeInputFallback\n    ]);\n    let onBeforeInput = !$d841c8010a73d545$var$supportsNativeBeforeInputEvent() ? (e)=>{\n        let nextValue = e.target.value.slice(0, e.target.selectionStart) + e.data + e.target.value.slice(e.target.selectionEnd);\n        if (!state.validate(nextValue)) e.preventDefault();\n    } : null;\n    let { labelProps: labelProps, inputProps: textFieldProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $2d73ec29415bd339$export$712718f7aec83d5)(props, inputRef);\n    let compositionStartState = (0, react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    return {\n        inputProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)(textFieldProps, {\n            onBeforeInput: onBeforeInput,\n            onCompositionStart () {\n                // Chrome does not implement Input Events Level 2, which specifies the insertFromComposition\n                // and deleteByComposition inputType values for the beforeinput event. These are meant to occur\n                // at the end of a composition (e.g. Pinyin IME, Android auto correct, etc.), and crucially, are\n                // cancelable. The insertCompositionText and deleteCompositionText input types are not cancelable,\n                // nor would we want to cancel them because the input from the user is incomplete at that point.\n                // In Safari, insertFromComposition/deleteFromComposition will fire, however, allowing us to cancel\n                // the final composition result if it is invalid. As a fallback for Chrome and Firefox, which either\n                // don't support Input Events Level 2, or beforeinput at all, we store the state of the input when\n                // the compositionstart event fires, and undo the changes in compositionend (below) if it is invalid.\n                // Unfortunately, this messes up the undo/redo stack, but until insertFromComposition/deleteByComposition\n                // are implemented, there is no other way to prevent composed input.\n                // See https://bugs.chromium.org/p/chromium/issues/detail?id=1022204\n                let { value: value, selectionStart: selectionStart, selectionEnd: selectionEnd } = inputRef.current;\n                compositionStartState.current = {\n                    value: value,\n                    selectionStart: selectionStart,\n                    selectionEnd: selectionEnd\n                };\n            },\n            onCompositionEnd () {\n                if (!state.validate(inputRef.current.value)) {\n                    // Restore the input value in the DOM immediately so we can synchronously update the selection position.\n                    // But also update the value in React state as well so it is correct for future updates.\n                    let { value: value, selectionStart: selectionStart, selectionEnd: selectionEnd } = compositionStartState.current;\n                    inputRef.current.value = value;\n                    inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n                    state.setInputValue(value);\n                }\n            }\n        }),\n        labelProps: labelProps,\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps,\n        ...validation\n    };\n}\n\n\n\n\n\n//# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-aria+textfield@3.14.3_react@18.2.0/node_modules/@react-aria/textfield/dist/import.mjs\n");

/***/ })

};
;