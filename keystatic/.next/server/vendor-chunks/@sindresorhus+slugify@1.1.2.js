"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sindresorhus+slugify@1.1.2";
exports.ids = ["vendor-chunks/@sindresorhus+slugify@1.1.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"(ssr)/./node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js\");\nconst transliterate = __webpack_require__(/*! @sindresorhus/transliterate */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+transliterate@0.1.2/node_modules/@sindresorhus/transliterate/index.js\");\nconst builtinOverridableReplacements = __webpack_require__(/*! ./overridable-replacements */ \"(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\");\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst slugify = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t\tpatternSlug = /[^a-z\\d]+/g;\n\t}\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\treturn string;\n};\n\nconst counter = () => {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n};\n\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiwyQkFBMkIsbUJBQU8sQ0FBQyw4SEFBc0I7QUFDekQsc0JBQXNCLG1CQUFPLENBQUMsbUpBQTZCO0FBQzNELHVDQUF1QyxtQkFBTyxDQUFDLHlKQUE0Qjs7QUFFM0U7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEdBQUc7QUFDdEIsNkJBQTZCLEdBQUc7O0FBRWhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCLGtCQUFrQixHQUFHO0FBQzlDLDBCQUEwQixpQkFBaUIsR0FBRyxpQkFBaUI7QUFDL0Q7O0FBRUE7QUFDQTtBQUNBLGtEQUFrRCxjQUFjO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLG1CQUFtQjs7QUFFcEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLE9BQU87QUFDdEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTyxHQUFHLFdBQVc7QUFDcEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2luZHJlc29yaHVzK3NsdWdpZnlAMS4xLjIvbm9kZV9tb2R1bGVzL0BzaW5kcmVzb3JodXMvc2x1Z2lmeS9pbmRleC5qcz8zY2MwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGVzY2FwZVN0cmluZ1JlZ2V4cCA9IHJlcXVpcmUoJ2VzY2FwZS1zdHJpbmctcmVnZXhwJyk7XG5jb25zdCB0cmFuc2xpdGVyYXRlID0gcmVxdWlyZSgnQHNpbmRyZXNvcmh1cy90cmFuc2xpdGVyYXRlJyk7XG5jb25zdCBidWlsdGluT3ZlcnJpZGFibGVSZXBsYWNlbWVudHMgPSByZXF1aXJlKCcuL292ZXJyaWRhYmxlLXJlcGxhY2VtZW50cycpO1xuXG5jb25zdCBkZWNhbWVsaXplID0gc3RyaW5nID0+IHtcblx0cmV0dXJuIHN0cmluZ1xuXHRcdC8vIFNlcGFyYXRlIGNhcGl0YWxpemVkIHdvcmRzLlxuXHRcdC5yZXBsYWNlKC8oW0EtWl17Mix9KShcXGQrKS9nLCAnJDEgJDInKVxuXHRcdC5yZXBsYWNlKC8oW2EtelxcZF0rKShbQS1aXXsyLH0pL2csICckMSAkMicpXG5cblx0XHQucmVwbGFjZSgvKFthLXpcXGRdKShbQS1aXSkvZywgJyQxICQyJylcblx0XHQucmVwbGFjZSgvKFtBLVpdKykoW0EtWl1bYS16XFxkXSspL2csICckMSAkMicpO1xufTtcblxuY29uc3QgcmVtb3ZlTW9vdFNlcGFyYXRvcnMgPSAoc3RyaW5nLCBzZXBhcmF0b3IpID0+IHtcblx0Y29uc3QgZXNjYXBlZFNlcGFyYXRvciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChzZXBhcmF0b3IpO1xuXG5cdHJldHVybiBzdHJpbmdcblx0XHQucmVwbGFjZShuZXcgUmVnRXhwKGAke2VzY2FwZWRTZXBhcmF0b3J9ezIsfWAsICdnJyksIHNlcGFyYXRvcilcblx0XHQucmVwbGFjZShuZXcgUmVnRXhwKGBeJHtlc2NhcGVkU2VwYXJhdG9yfXwke2VzY2FwZWRTZXBhcmF0b3J9JGAsICdnJyksICcnKTtcbn07XG5cbmNvbnN0IHNsdWdpZnkgPSAoc3RyaW5nLCBvcHRpb25zKSA9PiB7XG5cdGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIGEgc3RyaW5nLCBnb3QgXFxgJHt0eXBlb2Ygc3RyaW5nfVxcYGApO1xuXHR9XG5cblx0b3B0aW9ucyA9IHtcblx0XHRzZXBhcmF0b3I6ICctJyxcblx0XHRsb3dlcmNhc2U6IHRydWUsXG5cdFx0ZGVjYW1lbGl6ZTogdHJ1ZSxcblx0XHRjdXN0b21SZXBsYWNlbWVudHM6IFtdLFxuXHRcdHByZXNlcnZlTGVhZGluZ1VuZGVyc2NvcmU6IGZhbHNlLFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRjb25zdCBzaG91bGRQcmVwZW5kVW5kZXJzY29yZSA9IG9wdGlvbnMucHJlc2VydmVMZWFkaW5nVW5kZXJzY29yZSAmJiBzdHJpbmcuc3RhcnRzV2l0aCgnXycpO1xuXG5cdGNvbnN0IGN1c3RvbVJlcGxhY2VtZW50cyA9IG5ldyBNYXAoW1xuXHRcdC4uLmJ1aWx0aW5PdmVycmlkYWJsZVJlcGxhY2VtZW50cyxcblx0XHQuLi5vcHRpb25zLmN1c3RvbVJlcGxhY2VtZW50c1xuXHRdKTtcblxuXHRzdHJpbmcgPSB0cmFuc2xpdGVyYXRlKHN0cmluZywge2N1c3RvbVJlcGxhY2VtZW50c30pO1xuXG5cdGlmIChvcHRpb25zLmRlY2FtZWxpemUpIHtcblx0XHRzdHJpbmcgPSBkZWNhbWVsaXplKHN0cmluZyk7XG5cdH1cblxuXHRsZXQgcGF0dGVyblNsdWcgPSAvW15hLXpBLVpcXGRdKy9nO1xuXG5cdGlmIChvcHRpb25zLmxvd2VyY2FzZSkge1xuXHRcdHN0cmluZyA9IHN0cmluZy50b0xvd2VyQ2FzZSgpO1xuXHRcdHBhdHRlcm5TbHVnID0gL1teYS16XFxkXSsvZztcblx0fVxuXG5cdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHBhdHRlcm5TbHVnLCBvcHRpb25zLnNlcGFyYXRvcik7XG5cdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC9cXFxcL2csICcnKTtcblx0aWYgKG9wdGlvbnMuc2VwYXJhdG9yKSB7XG5cdFx0c3RyaW5nID0gcmVtb3ZlTW9vdFNlcGFyYXRvcnMoc3RyaW5nLCBvcHRpb25zLnNlcGFyYXRvcik7XG5cdH1cblxuXHRpZiAoc2hvdWxkUHJlcGVuZFVuZGVyc2NvcmUpIHtcblx0XHRzdHJpbmcgPSBgXyR7c3RyaW5nfWA7XG5cdH1cblxuXHRyZXR1cm4gc3RyaW5nO1xufTtcblxuY29uc3QgY291bnRlciA9ICgpID0+IHtcblx0Y29uc3Qgb2NjdXJyZW5jZXMgPSBuZXcgTWFwKCk7XG5cblx0Y29uc3QgY291bnRhYmxlID0gKHN0cmluZywgb3B0aW9ucykgPT4ge1xuXHRcdHN0cmluZyA9IHNsdWdpZnkoc3RyaW5nLCBvcHRpb25zKTtcblxuXHRcdGlmICghc3RyaW5nKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0Y29uc3Qgc3RyaW5nTG93ZXIgPSBzdHJpbmcudG9Mb3dlckNhc2UoKTtcblx0XHRjb25zdCBudW1iZXJsZXNzID0gb2NjdXJyZW5jZXMuZ2V0KHN0cmluZ0xvd2VyLnJlcGxhY2UoLyg/Oi1cXGQrPykrPyQvLCAnJykpIHx8IDA7XG5cdFx0Y29uc3QgY291bnRlciA9IG9jY3VycmVuY2VzLmdldChzdHJpbmdMb3dlcik7XG5cdFx0b2NjdXJyZW5jZXMuc2V0KHN0cmluZ0xvd2VyLCB0eXBlb2YgY291bnRlciA9PT0gJ251bWJlcicgPyBjb3VudGVyICsgMSA6IDEpO1xuXHRcdGNvbnN0IG5ld0NvdW50ZXIgPSBvY2N1cnJlbmNlcy5nZXQoc3RyaW5nTG93ZXIpIHx8IDI7XG5cdFx0aWYgKG5ld0NvdW50ZXIgPj0gMiB8fCBudW1iZXJsZXNzID4gMikge1xuXHRcdFx0c3RyaW5nID0gYCR7c3RyaW5nfS0ke25ld0NvdW50ZXJ9YDtcblx0XHR9XG5cblx0XHRyZXR1cm4gc3RyaW5nO1xuXHR9O1xuXG5cdGNvdW50YWJsZS5yZXNldCA9ICgpID0+IHtcblx0XHRvY2N1cnJlbmNlcy5jbGVhcigpO1xuXHR9O1xuXG5cdHJldHVybiBjb3VudGFibGU7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNsdWdpZnk7XG5tb2R1bGUuZXhwb3J0cy5jb3VudGVyID0gY291bnRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvb3ZlcnJpZGFibGUtcmVwbGFjZW1lbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvb3ZlcnJpZGFibGUtcmVwbGFjZW1lbnRzLmpzPzkyYzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFtcblx0WycmJywgJyBhbmQgJ10sXG5cdFsn8J+mhCcsICcgdW5pY29ybiAnXSxcblx0WyfimaUnLCAnIGxvdmUgJ11cbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"(rsc)/./node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js\");\nconst transliterate = __webpack_require__(/*! @sindresorhus/transliterate */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+transliterate@0.1.2/node_modules/@sindresorhus/transliterate/index.js\");\nconst builtinOverridableReplacements = __webpack_require__(/*! ./overridable-replacements */ \"(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\");\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst slugify = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t\tpatternSlug = /[^a-z\\d]+/g;\n\t}\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\treturn string;\n};\n\nconst counter = () => {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n};\n\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiwyQkFBMkIsbUJBQU8sQ0FBQyw4SEFBc0I7QUFDekQsc0JBQXNCLG1CQUFPLENBQUMsbUpBQTZCO0FBQzNELHVDQUF1QyxtQkFBTyxDQUFDLHlKQUE0Qjs7QUFFM0U7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEdBQUc7QUFDdEIsNkJBQTZCLEdBQUc7O0FBRWhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCLGtCQUFrQixHQUFHO0FBQzlDLDBCQUEwQixpQkFBaUIsR0FBRyxpQkFBaUI7QUFDL0Q7O0FBRUE7QUFDQTtBQUNBLGtEQUFrRCxjQUFjO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLG1CQUFtQjs7QUFFcEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLE9BQU87QUFDdEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTyxHQUFHLFdBQVc7QUFDcEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac2luZHJlc29yaHVzK3NsdWdpZnlAMS4xLjIvbm9kZV9tb2R1bGVzL0BzaW5kcmVzb3JodXMvc2x1Z2lmeS9pbmRleC5qcz9iYmY3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGVzY2FwZVN0cmluZ1JlZ2V4cCA9IHJlcXVpcmUoJ2VzY2FwZS1zdHJpbmctcmVnZXhwJyk7XG5jb25zdCB0cmFuc2xpdGVyYXRlID0gcmVxdWlyZSgnQHNpbmRyZXNvcmh1cy90cmFuc2xpdGVyYXRlJyk7XG5jb25zdCBidWlsdGluT3ZlcnJpZGFibGVSZXBsYWNlbWVudHMgPSByZXF1aXJlKCcuL292ZXJyaWRhYmxlLXJlcGxhY2VtZW50cycpO1xuXG5jb25zdCBkZWNhbWVsaXplID0gc3RyaW5nID0+IHtcblx0cmV0dXJuIHN0cmluZ1xuXHRcdC8vIFNlcGFyYXRlIGNhcGl0YWxpemVkIHdvcmRzLlxuXHRcdC5yZXBsYWNlKC8oW0EtWl17Mix9KShcXGQrKS9nLCAnJDEgJDInKVxuXHRcdC5yZXBsYWNlKC8oW2EtelxcZF0rKShbQS1aXXsyLH0pL2csICckMSAkMicpXG5cblx0XHQucmVwbGFjZSgvKFthLXpcXGRdKShbQS1aXSkvZywgJyQxICQyJylcblx0XHQucmVwbGFjZSgvKFtBLVpdKykoW0EtWl1bYS16XFxkXSspL2csICckMSAkMicpO1xufTtcblxuY29uc3QgcmVtb3ZlTW9vdFNlcGFyYXRvcnMgPSAoc3RyaW5nLCBzZXBhcmF0b3IpID0+IHtcblx0Y29uc3QgZXNjYXBlZFNlcGFyYXRvciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChzZXBhcmF0b3IpO1xuXG5cdHJldHVybiBzdHJpbmdcblx0XHQucmVwbGFjZShuZXcgUmVnRXhwKGAke2VzY2FwZWRTZXBhcmF0b3J9ezIsfWAsICdnJyksIHNlcGFyYXRvcilcblx0XHQucmVwbGFjZShuZXcgUmVnRXhwKGBeJHtlc2NhcGVkU2VwYXJhdG9yfXwke2VzY2FwZWRTZXBhcmF0b3J9JGAsICdnJyksICcnKTtcbn07XG5cbmNvbnN0IHNsdWdpZnkgPSAoc3RyaW5nLCBvcHRpb25zKSA9PiB7XG5cdGlmICh0eXBlb2Ygc3RyaW5nICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoYEV4cGVjdGVkIGEgc3RyaW5nLCBnb3QgXFxgJHt0eXBlb2Ygc3RyaW5nfVxcYGApO1xuXHR9XG5cblx0b3B0aW9ucyA9IHtcblx0XHRzZXBhcmF0b3I6ICctJyxcblx0XHRsb3dlcmNhc2U6IHRydWUsXG5cdFx0ZGVjYW1lbGl6ZTogdHJ1ZSxcblx0XHRjdXN0b21SZXBsYWNlbWVudHM6IFtdLFxuXHRcdHByZXNlcnZlTGVhZGluZ1VuZGVyc2NvcmU6IGZhbHNlLFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRjb25zdCBzaG91bGRQcmVwZW5kVW5kZXJzY29yZSA9IG9wdGlvbnMucHJlc2VydmVMZWFkaW5nVW5kZXJzY29yZSAmJiBzdHJpbmcuc3RhcnRzV2l0aCgnXycpO1xuXG5cdGNvbnN0IGN1c3RvbVJlcGxhY2VtZW50cyA9IG5ldyBNYXAoW1xuXHRcdC4uLmJ1aWx0aW5PdmVycmlkYWJsZVJlcGxhY2VtZW50cyxcblx0XHQuLi5vcHRpb25zLmN1c3RvbVJlcGxhY2VtZW50c1xuXHRdKTtcblxuXHRzdHJpbmcgPSB0cmFuc2xpdGVyYXRlKHN0cmluZywge2N1c3RvbVJlcGxhY2VtZW50c30pO1xuXG5cdGlmIChvcHRpb25zLmRlY2FtZWxpemUpIHtcblx0XHRzdHJpbmcgPSBkZWNhbWVsaXplKHN0cmluZyk7XG5cdH1cblxuXHRsZXQgcGF0dGVyblNsdWcgPSAvW15hLXpBLVpcXGRdKy9nO1xuXG5cdGlmIChvcHRpb25zLmxvd2VyY2FzZSkge1xuXHRcdHN0cmluZyA9IHN0cmluZy50b0xvd2VyQ2FzZSgpO1xuXHRcdHBhdHRlcm5TbHVnID0gL1teYS16XFxkXSsvZztcblx0fVxuXG5cdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHBhdHRlcm5TbHVnLCBvcHRpb25zLnNlcGFyYXRvcik7XG5cdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKC9cXFxcL2csICcnKTtcblx0aWYgKG9wdGlvbnMuc2VwYXJhdG9yKSB7XG5cdFx0c3RyaW5nID0gcmVtb3ZlTW9vdFNlcGFyYXRvcnMoc3RyaW5nLCBvcHRpb25zLnNlcGFyYXRvcik7XG5cdH1cblxuXHRpZiAoc2hvdWxkUHJlcGVuZFVuZGVyc2NvcmUpIHtcblx0XHRzdHJpbmcgPSBgXyR7c3RyaW5nfWA7XG5cdH1cblxuXHRyZXR1cm4gc3RyaW5nO1xufTtcblxuY29uc3QgY291bnRlciA9ICgpID0+IHtcblx0Y29uc3Qgb2NjdXJyZW5jZXMgPSBuZXcgTWFwKCk7XG5cblx0Y29uc3QgY291bnRhYmxlID0gKHN0cmluZywgb3B0aW9ucykgPT4ge1xuXHRcdHN0cmluZyA9IHNsdWdpZnkoc3RyaW5nLCBvcHRpb25zKTtcblxuXHRcdGlmICghc3RyaW5nKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0Y29uc3Qgc3RyaW5nTG93ZXIgPSBzdHJpbmcudG9Mb3dlckNhc2UoKTtcblx0XHRjb25zdCBudW1iZXJsZXNzID0gb2NjdXJyZW5jZXMuZ2V0KHN0cmluZ0xvd2VyLnJlcGxhY2UoLyg/Oi1cXGQrPykrPyQvLCAnJykpIHx8IDA7XG5cdFx0Y29uc3QgY291bnRlciA9IG9jY3VycmVuY2VzLmdldChzdHJpbmdMb3dlcik7XG5cdFx0b2NjdXJyZW5jZXMuc2V0KHN0cmluZ0xvd2VyLCB0eXBlb2YgY291bnRlciA9PT0gJ251bWJlcicgPyBjb3VudGVyICsgMSA6IDEpO1xuXHRcdGNvbnN0IG5ld0NvdW50ZXIgPSBvY2N1cnJlbmNlcy5nZXQoc3RyaW5nTG93ZXIpIHx8IDI7XG5cdFx0aWYgKG5ld0NvdW50ZXIgPj0gMiB8fCBudW1iZXJsZXNzID4gMikge1xuXHRcdFx0c3RyaW5nID0gYCR7c3RyaW5nfS0ke25ld0NvdW50ZXJ9YDtcblx0XHR9XG5cblx0XHRyZXR1cm4gc3RyaW5nO1xuXHR9O1xuXG5cdGNvdW50YWJsZS5yZXNldCA9ICgpID0+IHtcblx0XHRvY2N1cnJlbmNlcy5jbGVhcigpO1xuXHR9O1xuXG5cdHJldHVybiBjb3VudGFibGU7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNsdWdpZnk7XG5tb2R1bGUuZXhwb3J0cy5jb3VudGVyID0gY291bnRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvb3ZlcnJpZGFibGUtcmVwbGFjZW1lbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2V5c3RhdGljL3RlbXBsYXRlcy1uZXh0anMvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNpbmRyZXNvcmh1cytzbHVnaWZ5QDEuMS4yL25vZGVfbW9kdWxlcy9Ac2luZHJlc29yaHVzL3NsdWdpZnkvb3ZlcnJpZGFibGUtcmVwbGFjZW1lbnRzLmpzPzY0OWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFtcblx0WycmJywgJyBhbmQgJ10sXG5cdFsn8J+mhCcsICcgdW5pY29ybiAnXSxcblx0WyfimaUnLCAnIGxvdmUgJ11cbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sindresorhus+slugify@1.1.2/node_modules/@sindresorhus/slugify/overridable-replacements.js\n");

/***/ })

};
;